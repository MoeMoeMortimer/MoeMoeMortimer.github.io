<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>银月轻语</title>
  <subtitle>前天看到了小兔子，昨天是小鹿，今天是你。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://moemoemortimer.github.io/"/>
  <updated>2017-06-02T08:34:18.415Z</updated>
  <id>https://moemoemortimer.github.io/</id>
  
  <author>
    <name>Nyanko Chan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>POJ 3061 Subsequence【尺取法】</title>
    <link href="https://moemoemortimer.github.io/2017/06/01/poj-3061/"/>
    <id>https://moemoemortimer.github.io/2017/06/01/poj-3061/</id>
    <published>2017-06-01T14:27:48.000Z</published>
    <updated>2017-06-02T08:34:18.415Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3061&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;POJ 3061 Subsequence 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;给定长度为n的数列整数$a_0, a_1, …, a_n$，以及整数S，求出总和不小于S的连续子序列的长度的最小值。&lt;br&gt;如果解不存在，则输出0。&lt;/p&gt;
&lt;h2 id=&quot;二分搜索——O-nlogn&quot;&gt;&lt;a href=&quot;#二分搜索——O-nlogn&quot; class=&quot;headerlink&quot; title=&quot;二分搜索——O(nlogn)&quot;&gt;&lt;/a&gt;二分搜索——O(nlogn)&lt;/h2&gt;&lt;p&gt;用lower_bound找区间长度。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum[&lt;span class=&quot;number&quot;&gt;100009&lt;/span&gt;], a[&lt;span class=&quot;number&quot;&gt;100009&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//O(nlogn)解法，利用二分搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sum[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = sum[i]+a[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum[n]&amp;lt;s)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; sum[i]+s&amp;lt;=sum[n]; s++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; pos = lower_bound(sum, sum+n, sum[i]+s)-sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		res = min(res, pos-i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; res &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;尺取法——O-n&quot;&gt;&lt;a href=&quot;#尺取法——O-n&quot; class=&quot;headerlink&quot; title=&quot;尺取法——O(n)&quot;&gt;&lt;/a&gt;尺取法——O(n)&lt;/h2&gt;&lt;p&gt;这里的尺取很像CF上的某个tag——two pointers（双指针）。&lt;br&gt;不断更新序列头和尾，并保证当前的序列和不小于S。遍历一次就能得到长度最小的区间。&lt;br&gt;这样看来，尺取法比二分更好想不是么。0.0&lt;br&gt;不过既然是有名的trick，尺取肯定不止这么简单，笨鱼没见过难题还是不要瞎bb了~ _(:3」∠❀)_&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solve2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, r = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(;;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//这里的顺序一定要注意&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(r&amp;lt;n &amp;amp;&amp;amp; sum&amp;lt;s)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			sum+=a[r];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			r++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum&amp;lt;s)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			res = min(res, l-r);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			sum -= a[l];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			l++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="尺取法" scheme="https://moemoemortimer.github.io/tags/%E5%B0%BA%E5%8F%96%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ 2456 Aggressive Cows【二分查找】</title>
    <link href="https://moemoemortimer.github.io/2017/06/01/poj-2456/"/>
    <id>https://moemoemortimer.github.io/2017/06/01/poj-2456/</id>
    <published>2017-06-01T14:26:49.000Z</published>
    <updated>2017-06-01T15:36:24.905Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2456&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;POJ 2456 Aggressive Cows 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;N间牛舍排在一条线上，第i号牛舍在$x_i$的位置。但是他的M头牛对小屋很不满意，因此经常互相攻击。因此主人决定把每头牛都放在离其他牛尽可能远的牛舍。也就是要最大化最近的两头牛之间的距离。&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;&lt;a href=&quot;#数据范围&quot; class=&quot;headerlink&quot; title=&quot;数据范围&quot;&gt;&lt;/a&gt;数据范围&lt;/h3&gt;&lt;p&gt;2&amp;lt;=N&amp;lt;=100000&lt;br&gt;2&amp;lt;=M&amp;lt;=N&lt;br&gt;0&amp;lt;=$x_i$&amp;lt;=$10^9$&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;记得知乎上有人问过二分怎么用，最高票答案给出了二分的8个类型。啊……我还是太菜，要好好理解嗯好好理解。&lt;/p&gt;
&lt;p&gt;这个题是一个最大化最小值的问题。&lt;/p&gt;
&lt;p&gt;首先要对x数组排序。&lt;/p&gt;
&lt;p&gt;C(d) = 可以安排牛的位置使得任意的牛的间距都不小于d&lt;/p&gt;
&lt;p&gt;要求的就是满足C(d)的最大的d。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; INF 1000000009&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; cell[&lt;span class=&quot;number&quot;&gt;100009&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; last = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, cur;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt; c ; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cur = last+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(cur&amp;lt;n &amp;amp;&amp;amp; cell[cur]-cell[last]&amp;lt;d)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			cur++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(cur&amp;gt;=n)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		last = cur;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; n &amp;gt;&amp;gt; c)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(cell, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(cell));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; cell[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sort(cell, cell+n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, r = INF, mid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(r-l&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mid = (r+l)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(check(mid))l = mid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; r = mid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; l &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="二分" scheme="https://moemoemortimer.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>ZOJ 2913 Bus Pass【滚动队列BFS】</title>
    <link href="https://moemoemortimer.github.io/2017/05/31/zoj-2913/"/>
    <id>https://moemoemortimer.github.io/2017/05/31/zoj-2913/</id>
    <published>2017-05-31T13:04:26.000Z</published>
    <updated>2017-06-02T05:15:01.533Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=2913&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZOJ 2913 Bus Pass 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;题面很长，样例输入也很吓人…但其实这是个水水的题…&lt;/p&gt;
&lt;p&gt;乘坐公交车经过一些地区，旅程费用为每张车票费用的总和。因此想知道如果买通票是否会优惠一些。&lt;/p&gt;
&lt;p&gt;公交系统按如下方式运转：当买一张公共汽车通票时，必须制定一个中心地区，以及一个star value（星星阈值？）当持通票在某个地区乘坐公交汽车时，只要该地区离中心地区的距离（并不是路程的距离，而是路程上地区的数目）小于星形阈值，则可以免费乘坐。例如，如果选择的星形阈值为1，则只能在中心地区免费乘坐公交车；如果选择的星形阈值为2，则在中心地区以及与中心地区相邻的地区里都可以免费乘坐公交车。&lt;/p&gt;
&lt;p&gt;现列出某人经常乘坐的公交线路，希望能确定一个最小的星形阈值，使得所有的公交线路在通票范围内都是免费的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bly1fg4uoow16bj20go0etgp1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;第一行：一个整数T，表示T组测试数据；&lt;br&gt;第二行：两个整数nz(2&amp;lt;=nz&amp;lt;=9999)和nr(1&amp;lt;=nr&amp;lt;=10)，分别表示地区的数目和公交线路的数目。&lt;br&gt;接下来有nz行，描述了每个地区。每行首先是两个整数，$id_i$(1&amp;lt;=$id_i$&amp;lt;=9999)和$mz_i$(1&amp;lt;=$mz_i$&amp;lt;=10)，分别表示i个地区的编号和与该地区相邻的地区数目，然后是$mz_i$个整数，分别是与该地区相邻地区的编号。&lt;/p&gt;
&lt;p&gt;接下来有$n_r$行，描述了每条公交路线。每行首先是一个整数$mr_i$($1&amp;lt;=mr_i&amp;lt;=20$)，表示第i条公交线路途经的地区数目，然后是$mr_i$个整数，表示该线路通过的地区编号，按照该线路的途径顺序排列。&lt;/p&gt;
&lt;p&gt;所有地区之间都是连通的。&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;最小的星形阈值和中心地区的编号，如果存在多个符合要求的中心地区，输出编号最小的那一个。&lt;/p&gt;
&lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h3&gt;&lt;p&gt;这个其实可以用普通的BFS解决，但是书上给出的滚动队列的做法让我有点在意（写题解的时候突然发现借的这本图论书今天到期…..我简直orz）&lt;/p&gt;
&lt;p&gt;从每条线路上的每个地区z出发进行BFS遍历；对每个地区j，如果地区j，如果j是最终求得的中心地区，则要保证从它出发能到达每条线路上的每个地区，并且选择的星形阈值要尽可能小。&lt;/p&gt;
&lt;p&gt;因此统计每条线路上的每个地区z到地区j最短距离的最大值（这个值就是将j作为中心地区时的星形阈值），把这个最大值记录在数组res[j]中；最后求得的最小的星形阈值就是res[j]数组的最小值，中心地区就是min{res[j]}的j。（如果有多组解，输出编号最小的j）&lt;/p&gt;
&lt;p&gt;另外，本题的地区编号并不是连续的，所以使用邻接矩阵存图Edge[i][j]表示编号为i的地区的第j个相邻地区的编号。&lt;/p&gt;
&lt;p&gt;滚动队列就是两个队列交替使用，用来区分当前遍历的点在第几层，也就是与中心的距离。遍历公交线路上所有的点，更新res数组。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; ZMAX 10000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; edge[&lt;span class=&quot;number&quot;&gt;10005&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mz[&lt;span class=&quot;number&quot;&gt;10005&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res[&lt;span class=&quot;number&quot;&gt;10005&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; vis[&lt;span class=&quot;number&quot;&gt;10005&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bfs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; s)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; val = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;   &lt;span class=&quot;comment&quot;&gt;// val记录层数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; que[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];   &lt;span class=&quot;comment&quot;&gt;// 滚动队列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	que[b].push(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	vis[s] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res[s] = max(res[s], &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(!que[b].empty())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		swap(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		val++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(!que[a].empty())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; cur = que[a].front();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			que[a].pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//cout &amp;lt;&amp;lt; cur &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mz[cur]; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nxt = edge[cur][i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!vis[nxt])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					res[nxt] = max(res[nxt], val+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					vis[nxt] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					que[b].push(nxt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; T, nz, nr, id, mzi, mri, tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; T;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(T--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; nz &amp;gt;&amp;gt;  nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(res, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(res));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; nz; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; id &amp;gt;&amp;gt; mzi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mz[id] = mzi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; mzi; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; edge[id][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; nr; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; mri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; mri; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(vis, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(vis));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				bfs(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ans = &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; cet = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//if(vis[i])cout &amp;lt;&amp;lt; res[i] &amp;lt;&amp;lt; &quot; &quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(vis[i] &amp;amp;&amp;amp; res[i]&amp;lt;ans)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				ans = res[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				cet = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; &amp;lt;&amp;lt; cet &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="图论" scheme="https://moemoemortimer.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="BFS" scheme="https://moemoemortimer.github.io/tags/BFS/"/>
    
  </entry>
  
  <entry>
    <title>POJ 3723 Conscription【最小生成树】</title>
    <link href="https://moemoemortimer.github.io/2017/05/30/poj-3723/"/>
    <id>https://moemoemortimer.github.io/2017/05/30/poj-3723/</id>
    <published>2017-05-30T11:18:39.000Z</published>
    <updated>2017-05-30T13:13:02.016Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3723&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;POJ 3723 Conscription 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;需要征募女兵N人，男兵M人。每征募一个人需要花费10000美元。但是如果已经征募的人中有一些关系亲密的人，那么可以少花一些钱。给出若干的男女之间的1~9999之间的亲密度关系，征募某个人的费用是10000-(已经征募的人中和自己的亲密度的最大值)。要求通过适当的征募顺序使得征募所有人所需费用最小，输出最小费用。&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;&lt;a href=&quot;#数据范围&quot; class=&quot;headerlink&quot; title=&quot;数据范围&quot;&gt;&lt;/a&gt;数据范围&lt;/h3&gt;&lt;p&gt;1&amp;lt;=N, M&amp;lt;=10000&lt;br&gt;0&amp;lt;=R&amp;lt;=50000&lt;br&gt;0&amp;lt;d&amp;lt;10000&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;《挑战》上说这个是最大权森林…我读书少你别骗我…Orz&lt;/p&gt;
&lt;p&gt;在征募某个人a时，如果使用了a和b之间的关系，那么就连一条a到b的边。假设这个图中存在圈，那么无论以什么顺序征募这个圈上的所有人，都会产生矛盾。（在圈里至少有一个人能使用了两个关系，而这是不可能的）因此可以知道这个图是一片森林。反之，如果给了一片森林那么就可以使用对应的关系确定征募的顺序。&lt;/p&gt;
&lt;p&gt;因此，把人看作顶点，关系看作边，这个问题就变成求解无向图中的最大权森林，最大权森林问题可以通过把所有边权取反之后用最小生成树的算法求之。&lt;/p&gt;
&lt;p&gt;发现这个问题中并没有用到男女之间的二分图结构。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MAXN 20009&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MAXM 50010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; parent[MAXN];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, m, r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; edge&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; u, v, w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;edges[MAXM];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//并查集初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ufSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= n+m; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		parent[i] = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; s; &lt;span class=&quot;comment&quot;&gt;//查找位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//一直查找到parent[s]为负数（此时的s为根结点为止）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (s = x; parent[s] &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; s = parent[s]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//优化，压缩路径，使后续查找操作加速&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(s!=x)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		tmp = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		parent[x] = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		x = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//R1和R2是两个元素，属于两个不同的集合，现在合并这两个集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; R1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; R2)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//r1是R1的根结点，r2为R2的根结点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r1 = find(R1), r2 = find(R2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmp = parent[r1]+parent[r2]; &lt;span class=&quot;comment&quot;&gt;//两个集合结点个数之和（负数）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//如果R2所在树结点个数&amp;gt;R1所在树结点个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//注意parent[r1]和parent[r2]都是负数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(parent[r1]&amp;gt;parent[r2])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//优化方案，加权法则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		parent[r1] = r2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		parent[r2] = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		parent[r2] = r1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		parent[r1] = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; edge&amp;amp; a, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; edge&amp;amp; b)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.w&amp;lt;b.w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;ll &lt;span class=&quot;title&quot;&gt;Kruskal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ll sumweight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ufSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; r; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a = edges[i].u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		b = edges[i].v;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(find(a) != find(b))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//printf(&quot;%d %d %d\n&quot;, u, v, edges[i].w);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			sumweight += edges[i].w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Union(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(num &amp;gt;= n+m&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sumweight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; u, v, w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m, &amp;amp;r);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; r; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;, &amp;amp;u, &amp;amp;v, &amp;amp;w);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			edges[i].u = u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			edges[i].v = v+n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			edges[i].w = -w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sort(edges, edges+r, cmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%lld\n&quot;&lt;/span&gt;, (ll)(&lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;*(n+m))+Kruskal());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="最小生成树" scheme="https://moemoemortimer.github.io/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>POJ 3255 Roadblocks【次短路】</title>
    <link href="https://moemoemortimer.github.io/2017/05/30/poj-3255/"/>
    <id>https://moemoemortimer.github.io/2017/05/30/poj-3255/</id>
    <published>2017-05-30T11:18:26.000Z</published>
    <updated>2017-05-30T11:52:10.033Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3255&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;POJ 3255 Roadblocks 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;某街区共有R条道路，N个路口。道路可以双向通行。问1号路口到N号路口的次短路是多少？次短路是比最短路长度长的次短的路径。同一条边可以经过多次。&lt;/p&gt;
&lt;h3 id=&quot;输入限制&quot;&gt;&lt;a href=&quot;#输入限制&quot; class=&quot;headerlink&quot; title=&quot;输入限制&quot;&gt;&lt;/a&gt;输入限制&lt;/h3&gt;&lt;p&gt;1&amp;lt;=N&amp;lt;=5000&lt;br&gt;1&amp;lt;=R&amp;lt;=100000&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;我们把路口看作顶点，把道路看作边建立无向图。Dijkstra算法的思路是依次确定尚未确定的顶点中距离最小的顶点。按照这个思路，到某个顶点v的次短路要么是到其他某个顶点u的最短路再加上u-&amp;gt;v的边，要么是到u的次短路加上u-&amp;gt;v的边，因此要求的就是到所有顶点的最短路和次短路。因此，对于每个顶点，我们记录的不仅仅是最短距离，还有次短距离，用与Dijkstra相同的做法，不断更新这两个距离。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define MAXV 5009&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define INF 1&amp;lt;&amp;lt;31-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef pair&amp;lt;int, int&amp;gt; P;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int R, N;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct edge&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int to, cost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edge(int u, int d):to(u), cost(d)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vector&amp;lt;edge&amp;gt; G[MAXV];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int d1[MAXV], d2[MAXV];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void dijkstra()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    priority_queue&amp;lt;P, vector&amp;lt;P&amp;gt;, greater&amp;lt;P&amp;gt;&amp;gt; que;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill(d1, d1+N+1, INF);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill(d2, d2+N+1, INF);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    d1[1] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    que.push(P(0, 1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while(!que.empty())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P p = que.top();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        que.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int v = p.second, d = p.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(d2[v] &amp;lt; d)continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (int i = 0; i &amp;lt; G[v].size(); ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            edge &amp;amp;e = G[v][i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int dd = d+e.cost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(d1[e.to] &amp;gt; dd)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                swap(d1[e.to], dd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                que.push(P(d1[e.to], e.to));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(d2[e.to]&amp;gt;dd &amp;amp;&amp;amp; d1[e.to]&amp;lt;dd)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                d2[e.to] = dd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                que.push(P(dd, e.to));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printf(&quot;%d\n&quot;, d2[N]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while(cin &amp;gt;&amp;gt; N &amp;gt;&amp;gt; R)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int u, v, w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for(int i = 0; i &amp;lt;= N; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            G[i].clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (int i = 0; i &amp;lt; R; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v &amp;gt;&amp;gt; w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            G[u].push_back(edge(v, w));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            G[v].push_back(edge(u, w));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dijkstra();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="最短路" scheme="https://moemoemortimer.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>字符串哈希</title>
    <link href="https://moemoemortimer.github.io/2017/05/30/string-hash/"/>
    <id>https://moemoemortimer.github.io/2017/05/30/string-hash/</id>
    <published>2017-05-30T11:17:46.000Z</published>
    <updated>2017-06-01T14:41:41.740Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;算法小教室_(:3」∠❀)_&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;寻找字符串S在字符串T中出现的位置或次数的问题属于字符串匹配问题。我们在接下来的讨论中假设S的长度为n，T的长度为m。最朴素的想法是，枚举所有起始位置，再直接检查是否匹配，复杂度为O(nm)。&lt;/p&gt;
&lt;h2 id=&quot;哈希算法用于字符串匹配&quot;&gt;&lt;a href=&quot;#哈希算法用于字符串匹配&quot; class=&quot;headerlink&quot; title=&quot;哈希算法用于字符串匹配&quot;&gt;&lt;/a&gt;哈希算法用于字符串匹配&lt;/h2&gt;&lt;p&gt;对于每个起始位置，我们不是O(m)地直接比较字符串是否匹配，而是O(l)地比较长度为m的字符串的哈希值与T的哈希值是否相等。虽然即使哈希值相等字符串也未必相等（碰撞），但如果哈希值是随机分布的话，不同的字符串哈希值相等的概率是很低的，可以当作这种情况不会发生。&lt;br&gt;但是，如果我们采用O(m)的算法计算长度为m的字符串子串的哈希值的话，那复杂度还是O(nm)。这里我们要是用一个叫滚动哈希的优化技巧。选取两个合适的互素常数b和h(l&amp;lt;b&amp;lt;h)，假设字符串$C=c_1c_2…c_m$，定义哈希函数&lt;/p&gt;
&lt;p&gt;$$H(C)=(c_1b^{m-1}+c_2b^{m-2}+c_3b^{m-3}+…+c_mb^0) mod h$$&lt;/p&gt;
&lt;p&gt;其中b是基数，相当于把字符串看作是b进制数。这样，字符串$S=s_1s_2…s_n$从位置k+1开始长度为m的字符串子串$S[k+1…k+m]$的哈希值，就可以利用从位置k开始的字符串子串$S[k…k+m-1]$的哈希值，直接进行如下计算：&lt;/p&gt;
&lt;p&gt;$$H(S[k+1…k+m])=(H(S[k…k+m-1])*b-s&lt;em&gt;kb^m+s&lt;/em&gt;{k+m} ) mod h$$&lt;/p&gt;
&lt;p&gt;于是，只要不断这样计算开始位置右移一位后的字符串子串的哈希值，就可以在O(n)时间内得到所有位置对应的哈希值，从而可以在O(n+m)时间内完成字符串的匹配。在实现时，可以用64位无符号整数计算哈希值，并取h等于$2^{64}$，通过自然溢出省去求模运算。 &lt;/p&gt;
&lt;h3 id=&quot;字符串S在字符串T中是否出现&quot;&gt;&lt;a href=&quot;#字符串S在字符串T中是否出现&quot; class=&quot;headerlink&quot; title=&quot;字符串S在字符串T中是否出现&quot;&gt;&lt;/a&gt;字符串S在字符串T中是否出现&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ull B = &lt;span class=&quot;number&quot;&gt;100000007&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//a是否在b中出现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;contain&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; a, &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a1 = a.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b1 = b.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a1&amp;gt;b1)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ull t = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//计算b的a1次方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; a1; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t *= B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ull ah = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, bh = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; a1; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ah = ah*B+a[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bh = bh*B+b[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//对b不断右移一位，更新哈希值并判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i+a1 &amp;lt;= b1 ; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//b从位置i开始长度为a1的字符串子串为a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ah == bh)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i+a1 &amp;lt; b1)bh = bh*B + b[i+a1] - b[i]*t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;当然，不光是右移一位，对于左移一位，左端或右端加长一位或是缩短一位的情况也能够进行类似处理。&lt;br&gt;譬如说，假设要求S的后缀和T的前缀相等的最大长度，也可以用滚动哈希在O(m+n)的时间内高效求得。&lt;/p&gt;
&lt;h3 id=&quot;a的后缀和b的前缀相等的最大长度&quot;&gt;&lt;a href=&quot;#a的后缀和b的前缀相等的最大长度&quot; class=&quot;headerlink&quot; title=&quot;a的后缀和b的前缀相等的最大长度&quot;&gt;&lt;/a&gt;a的后缀和b的前缀相等的最大长度&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;overlap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; a, &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a1 = a.length(), b1 = b.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ull ah = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, bh = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, t = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= min(a1, b1); ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ah = ah + a[a1-i]*t; &lt;span class=&quot;comment&quot;&gt;//a的长度为i的后缀的哈希值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bh = bh*B + b[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;//b的长度为i的前缀的哈希值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ah == bh)ans = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    t *= B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;二维哈希&quot;&gt;&lt;a href=&quot;#二维哈希&quot; class=&quot;headerlink&quot; title=&quot;二维哈希&quot;&gt;&lt;/a&gt;二维哈希&lt;/h2&gt;&lt;h3 id=&quot;例题-POJ-3690-Constellations&quot;&gt;&lt;a href=&quot;#例题-POJ-3690-Constellations&quot; class=&quot;headerlink&quot; title=&quot;例题 POJ 3690 Constellations&quot;&gt;&lt;/a&gt;例题 POJ 3690 Constellations&lt;/h3&gt;&lt;p&gt;给定一个由’*‘和’0’组成的，大小为N*M（N行M列）的匹配对象和T个大小为P*Q的匹配模式。请输出匹配对象中至少出现过一次的匹配模式的个数。&lt;/p&gt;
&lt;p&gt;-=输入=-&lt;br&gt;匹配对象：&lt;br&gt;*00&lt;br&gt;0**&lt;br&gt;*00&lt;/p&gt;
&lt;p&gt;匹配模式：&lt;br&gt;**         *0&lt;br&gt;00        **&lt;/p&gt;
&lt;p&gt;-=输出=-&lt;br&gt;1（只有第一个模式）&lt;/p&gt;
&lt;p&gt;这里要做的不是字符串匹配，而是二维网格的匹配，同样可以运用循环哈希。首先把每一行看成一个字符串，计算从每个位置开始长度为Q的字符串子串的哈希值。然后再把得到的哈希值在列方向看成一个字符串，计算从每个位置开始长度为P的字符串子串的哈希值。这样，我们可以计算得到所有P*Q子阵的哈希值。在两次哈希值的计算中，选用不同的基数。&lt;/p&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ull B = &lt;span class=&quot;number&quot;&gt;100000007&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; N, M, T, P, Q, kas;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; field[&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;];    &lt;span class=&quot;comment&quot;&gt;//匹配对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; patterns[&lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;];    &lt;span class=&quot;comment&quot;&gt;//匹配模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ull Hash[&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;], tmp[&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//计算a的所有P*Q子阵对应的哈希值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compute_Hash&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1005&lt;/span&gt;], &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ull B1 = &lt;span class=&quot;number&quot;&gt;9973&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ull B2 = &lt;span class=&quot;number&quot;&gt;100000007&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ull t1 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;//B1的Q次方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; Q; j++)t1 *= B1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//按行方向计算哈希值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ull e = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; Q; j++)e = e*B1 + a[i][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j+Q &amp;lt;= m; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp[i][j] = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j+Q &amp;lt; m) e = e*B1 - t1*a[i][j] + a[i][j+Q];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ull t2 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; P; ++i)t2 *= B2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//按列方向计算哈希值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j+Q &amp;lt;= m; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ull e = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; P; i++)e = e*B2 + tmp[i][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i+P &amp;lt;= n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Hash[i][j] = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i+P &amp;lt; n) e = e*B2 - t2*tmp[i][j] + tmp[i+P][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将所有模式的哈希值放入multiset中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;multiset&lt;/span&gt;&amp;lt;ull&amp;gt; unseen;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; k &amp;lt; T; k++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compute_Hash(patterns[k], P, Q);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unseen.insert(Hash[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将出现的Hash值从multiset中删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compute_Hash(field, N, M);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i+P &amp;lt;= N; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j+Q &amp;lt;= M; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unseen.erase(Hash[i][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ans = T-unseen.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Case %d: %d\n&quot;&lt;/span&gt;, kas, ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kas = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%d%d%d%d&quot;&lt;/span&gt;, &amp;amp;N, &amp;amp;M, &amp;amp;T, &amp;amp;P, &amp;amp;Q) != EOF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!(M||N||T||P||Q))&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; N; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, field[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; T; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; P; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, patterns[i][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        solve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        kas++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;算法小教室_(:3」∠❀)_&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://moemoemortimer.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="哈希" scheme="https://moemoemortimer.github.io/tags/%E5%93%88%E5%B8%8C/"/>
    
      <category term="字符串" scheme="https://moemoemortimer.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>花【piano ver.】</title>
    <link href="https://moemoemortimer.github.io/2017/05/26/hana-piano-ver-katayoseryota/"/>
    <id>https://moemoemortimer.github.io/2017/05/26/hana-piano-ver-katayoseryota/</id>
    <published>2017-05-26T15:08:21.000Z</published>
    <updated>2017-05-30T13:42:13.805Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;偷偷地把片片藏起来_(:3」∠❀)_&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;钢琴版的简直美哭嗷呜&quot;&gt;&lt;a href=&quot;#钢琴版的简直美哭嗷呜&quot; class=&quot;headerlink&quot; title=&quot;钢琴版的简直美哭嗷呜&quot;&gt;&lt;/a&gt;钢琴版的简直美哭嗷呜&lt;/h2&gt;&lt;div id=&quot;dplayer0&quot; class=&quot;dplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;&lt;script&gt;var dplayer0 = new DPlayer({&quot;element&quot;:document.getElementById(&quot;dplayer0&quot;),&quot;video&quot;:{&quot;url&quot;:&quot;http://120.192.82.54/hc.yinyuetai.com/uploads/videos/common/5E9D015B852C3CF7D27CBE1F34168A59.mp4&quot;,&quot;pic&quot;:&quot;http://ww1.sinaimg.cn/large/c3c8eb1bly1fg3m1xhom2j20le0b4t97.jpg&quot;}});&lt;/script&gt;
&lt;h2 id=&quot;歌词&quot;&gt;&lt;a href=&quot;#歌词&quot; class=&quot;headerlink&quot; title=&quot;歌词&quot;&gt;&lt;/a&gt;歌词&lt;/h2&gt;&lt;p&gt;花びらのように散りゆく中で&lt;br&gt;【身处宛若漫天纷飞的花瓣之中】&lt;br&gt;夢みたいに 君に出逢えたキセキ&lt;br&gt;【似梦境奇迹般的得以与你邂逅】&lt;br&gt;愛し合って ケンカして&lt;br&gt;【彼此深爱 偶尔吵架】&lt;br&gt;色んな壁 二人で乗り越えて&lt;br&gt;【携手跨越横亘面前的各种屏障】&lt;br&gt;生まれ変わっても あなたのそばで 花になろう&lt;br&gt;【即便转世再生也要化为你身旁的花】&lt;/p&gt;
&lt;p&gt;いつまでもあるのだろうか オレの真上にある太陽は&lt;br&gt;【悬在我头顶当空的太阳 无论到何时都会普照】&lt;br&gt;いつまでも守りきれるだろうか 泣き 笑い 怒る君の表情を&lt;br&gt;【你喜怒哀乐的表情 无论到何时我都会守候到尽头】&lt;br&gt;いずれ全てなくなるのならば 二人の出逢いにもっと感謝しよう&lt;br&gt;【假使以上所有全都消逝 那就更加感谢你我的相遇吧】&lt;br&gt;あの日 あの時 あの場所のキセキは&lt;br&gt;【那日 那时 那里发生的奇迹】&lt;br&gt;また 新しい軌跡を生むだろう&lt;br&gt;【又将会诞生新的轨迹交集】&lt;/p&gt;
&lt;p&gt;愛することで強くなること 信じることで乗り切れること&lt;br&gt;【因爱而变得坚强 因信任而攻克所有难关】&lt;br&gt;君が残したモノは今も胸に ほら輝き失わずに&lt;br&gt;【你留下的东西如今仍在我胸前熠熠生辉】&lt;br&gt;幸せに思う 巡り会えたこと オレの笑顔取り戻せたこと&lt;br&gt;【思索着幸福得以相遇 脸上复又挂上笑容】&lt;br&gt;「ありがとう」 あふれる気持ち抱き 進む道程&lt;br&gt;【满怀感激的心情 继续朝前路迈进】&lt;/p&gt;
&lt;p&gt;花びらのように散りゆく中で&lt;br&gt;【身处宛若漫天纷飞的花瓣之中】&lt;br&gt;夢みたいに 君に出逢えたキセキ&lt;br&gt;【似梦境是奇迹般得以与你邂逅】&lt;br&gt;愛し合って ケンカして&lt;br&gt;【彼此深爱 偶尔吵架】&lt;br&gt;色んな壁 二人で乗り越えて&lt;br&gt;【携手跨越横亘在面前各种屏障】&lt;br&gt;生まれ変わっても あなたに逢いたい&lt;br&gt;【即便转世再生也要与你再度相遇】&lt;br&gt;花びらのように散ってゆく事&lt;br&gt;【宛若漫天纷飞的花瓣】&lt;br&gt;この世界で全て受け入れてゆこう&lt;br&gt;【迎接着全世界的所有】&lt;br&gt;君が僕に残したモノ “今”という現実の宝物&lt;br&gt;【你为我留下了名为“现在”的宝物】&lt;br&gt;だから僕は精一杯生きて 花になろう&lt;br&gt;【所以我竭尽全力 化为你身旁的花】&lt;/p&gt;
&lt;p&gt;雨上がり 虹架かり 青あらしに生まれし光&lt;br&gt;【彩虹悬挂雨后晴空 天边闪耀暴雨后的光芒】&lt;br&gt;ここにゆるぎない大切な物&lt;br&gt;【在此我所感知到的“爱”】&lt;br&gt;気づいてる“愛する”ということ&lt;br&gt;【就是永不动摇的珍贵之物】&lt;br&gt;まだ歩けるだろう？ 見えてるんだもう&lt;br&gt;【还能继续前进吧 已经能够看到爱的光芒】&lt;br&gt;“想い”時を超え 永遠に響け&lt;br&gt;【这超越了时空的“思念” 永远在心中回响】&lt;br&gt;君の喜び 君の痛み 君の全てよ&lt;br&gt;【你的欢喜 你的痛楚 你的全部】&lt;br&gt;さぁ 咲き誇れ もっと もっと もっと&lt;br&gt;【都像这花一样 更加鲜艳的绽放】&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;偷偷地把片片藏起来_(:3」∠❀)_&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://moemoemortimer.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="MV" scheme="https://moemoemortimer.github.io/tags/MV/"/>
    
  </entry>
  
  <entry>
    <title>行到水穷处，坐看云起时</title>
    <link href="https://moemoemortimer.github.io/2017/05/14/let-me-hear/"/>
    <id>https://moemoemortimer.github.io/2017/05/14/let-me-hear/</id>
    <published>2017-05-14T12:16:31.000Z</published>
    <updated>2017-05-16T14:31:16.047Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;拎得清，放得下，舍得扔，留得住，坐得稳，走得远。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;这些是想讲给自己听的话，希望可以好好遵守。&lt;/p&gt;
&lt;p&gt;要有一定的自知之明，但不希望轻易认输。&lt;/p&gt;
&lt;p&gt;为了自己的理想而倾尽全力，就算最后没有好的结果也不会后悔。&lt;/p&gt;
&lt;p&gt;保护自己，不要弱气地低着头等着被欺负。&lt;/p&gt;
&lt;p&gt;追求美丽和精致，这是女孩子的天性，当然美好的形式有许多种。&lt;/p&gt;
&lt;p&gt;珍惜可以并肩作战的人和可以依靠的人。&lt;/p&gt;
&lt;p&gt;永怀感恩之心。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;拎得清，放得下，舍得扔，留得住，坐得稳，走得远。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://moemoemortimer.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>2017 第八届ACM山东省赛总结</title>
    <link href="https://moemoemortimer.github.io/2017/05/08/2017-ACM-Shandong-Province-Contest-Summary/"/>
    <id>https://moemoemortimer.github.io/2017/05/08/2017-ACM-Shandong-Province-Contest-Summary/</id>
    <published>2017-05-08T03:05:14.000Z</published>
    <updated>2017-05-10T13:12:47.178Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;谢谢ACM，苦的甜的，你让我收获我太多太多。_(:3」∠❀)_&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;今天清理文件偶然发现了去年的省赛总结，那时候我还没有博客呢~所以今天一起放上来吧~&lt;/p&gt;
&lt;h2 id=&quot;2016-省赛总结&quot;&gt;&lt;a href=&quot;#2016-省赛总结&quot; class=&quot;headerlink&quot; title=&quot;2016 省赛总结&quot;&gt;&lt;/a&gt;2016 省赛总结&lt;/h2&gt;&lt;p&gt;2016年6月4、5日有山东省ACM竞赛。这是我大学参加的第一个ACM正式赛，对我来说，它的意义难以言表。从上学期刷区域赛ranklist爱上ACM到今天有机会分到参赛名额，和学姐组队，像他们一样起个有点怪但自己又很喜欢的队名，穿上官方发的衣服，真的真的真的可以让人感动到哭。&lt;br&gt;队长大大说这次14级是主力，原本我是和同年级的小伙伴一起作为友情队参加的，基本没什么压力，听学长学姐说就是去免费 “旅游”的，后来女队的学姐有事情要忙，我就被抓去做替补，自己的心态一下子变了很多，就好像从一个旁观者变成了戏中人。其实说实话，我并没有付出应有的努力。为了给自己心理安慰，我花大价钱买了一本《挑战程序设计竞赛》，每天泡在实验室，还开了一个名叫“佛脚”（？）的文档记录赛前解题报告和心情，后来……比赛的时候都没用到，我还是太菜了，太菜了，唉。&lt;br&gt;因为一直在各种期待着，所以时间过得真的很快，今天已经6月9号了，省赛这么快就过去了啊，我真的不敢相信。&lt;br&gt;我们的位置靠墙，右前方的队伍是山东大学，他们的队名是nozomi，我不确定他们是不是想起日文名，意思是“希望”，当时感觉好棒好正能量啊，后来才发现整个山东大学的队伍们都用了LoveLive里的人名……死宅们你们也真是够了啊……总之他们队真的很强，比赛的时候数着人家的气球我就又羡慕又着急。&lt;br&gt;咳咳、终于扯到比赛上来了。开始前五分钟，我不知怎么的一下子就超级兴奋！！抱着学姐的手来回蹭个不停（啊喂泥垢了！！）那边一说开始我们就直接找水题、、A就是、、其实看题意还有点模糊，但再看看样例，感觉自己心里有底，又觉得还是应该谨慎一点，就这样战战兢兢地过了第一题，之后学姐们看B题我去找另外一个水题……我犯了一个超致命的错误：我把题意读错了。读错题意的现象一直持续到比赛结束，我真是该死&amp;gt;.&amp;lt;&lt;br&gt;我觉得自己在比赛的时候没有成为一个可以依靠的人，整场比赛我一直在犯错误，在胡乱着急，连水题也过不去，南南姐还得给我收拾残局。我真是太差劲了。归根结底是自己能力不够，所谓“雷声大，雨点小”。&lt;br&gt;我们在B题上花的时间太长了，后来听学长说是简单题，用搜索也能做直接乱写也能过（可是……唉没爱了没爱了）今后比赛的时候应该设定一个时间上限，比如水题最多给一小时难题最多给两小时这样的，其实当时代码已经成型了（后来想想我们这个时候的心理状态是错的，应该大胆明智地早早放弃）但是后面还有一道水题所以我们就决定先过了水题，也就是所谓的炉石传说题。这道题最初是我负责写的，可是我把题意理解错了，（没玩过真的伤不起啊TAT有的队就因为有人玩过都不用看题直接一写就过了呜嗷嗷嗷嗷）最后留给炉石传说题的时间只剩一小时了，我还是弱爆了，不得不麻烦南南姐和我一起读题读样例，最后还剩两分钟交了一次还是WA，结束后才发现有一个变量没加。然后感觉大家一下子就失落了……后来一直都很失落、、滚榜的时候真的很好玩也很燃，算是重燃了我对ACM的喜欢吧……不过这份激动终究还是别人的，和去年一样，自己仍然是个憧憬者。&lt;br&gt;我想变得更强。&lt;br&gt;我想保护我重要的队友。&lt;br&gt;我想成为能被他们依靠的存在。&lt;br&gt;                                                      2016.6.9 &lt;/p&gt;
&lt;h2 id=&quot;2017-省赛总结&quot;&gt;&lt;a href=&quot;#2017-省赛总结&quot; class=&quot;headerlink&quot; title=&quot;2017 省赛总结&quot;&gt;&lt;/a&gt;2017 省赛总结&lt;/h2&gt;&lt;p&gt;看一年前那个傻傻的自己，真的很想去摸摸她的头啊~&lt;br&gt;庆幸我的初心没变。不，不能说是庆幸，而是我坚信自己对ACM的喜欢不会变。&lt;/p&gt;
&lt;p&gt;终榜 &lt;a href=&quot;https://acm.qust.edu.cn/ranklist/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://acm.qust.edu.cn/ranklist/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一言蔽之，有情理之中，也有意料之外。&lt;/p&gt;
&lt;p&gt;今年的省赛相比去年提前了一个月。从确定队伍的时候起我就知道留给我们的时间不多了。&lt;/p&gt;
&lt;p&gt;说到队伍，去年我在女队，现在想想拿不到奖是必然事件。一是经验不足，刷题数知识面都太窄，拿我这样的队员上场只有被吊打的份。二是没有系统组织训练，交流太少，连队友擅长的部分还有coding风格都不熟悉还谈什么配合。总之去年是遗憾满满的一年，可能也让学姐很失望，这是她的退役战了啊……&lt;/p&gt;
&lt;p&gt;但实际上，16年的省赛让我受益匪浅。&lt;/p&gt;
&lt;p&gt;首先是心理，因为是正式队员，一开始我就把比赛看得很重，加上山师超棒的组织和学校的支持，使得ACM赛事在我心中的地位只增不减。&lt;br&gt;当时看着激烈的滚榜和学长们上台领奖的身影，满满的憧憬早就盖过了失败的苦涩。&lt;br&gt;其次是经验，掰着手指头算算，17省赛之前我只参加过这么一次正式赛，不得不说，正赛和日常训练赛差别实在是太大了。对16年的比赛情形我至今仍记忆犹新。&lt;/p&gt;
&lt;p&gt;之前和学姐一起上课的时候偶然说起今年的省赛，她了解到我的情况之后建议我尽早找一个固定的队友。我心里一紧，因为我不知道该怎么办。之前和集训队一个主力队员谈到过队友的问题，他说他会选最强的人做队友……这话一定程度上给我造成了阴影，因为这确实是竞赛的本质，比赛不就是要筛选出最强的人吗。但这和我的理解相悖。16年省赛过后我的想法愈发清晰和纯粹：“我喜欢ACM，我要变强，我要强大到可以保护我的队友，可以被他们放心地依靠”。那么我愿意保护的人一定要是值得我去为之拼命奋斗的人。可能随着时间和阅历的积累我的想法也会改变，但我最喜欢这时候的自己。&lt;/p&gt;
&lt;p&gt;好像跑题了，总之我组好了自己满意的队伍。这里多亏kid_zhao帮忙找来了学长。去年的队名是我起的，灵感来自《四月是你的谎言》，今年的队名是kid_zhao起的，灵感来自我的名字、诶嘿嘿有点羞耻(～￣▽￣*)o&lt;/p&gt;
&lt;p&gt;其实我的压力还是蛮大的，因为今年我不仅是正式队还是主力队员（因为多数是大二的），而且是我们队的队长，我很想把责任尽到，好好做。&lt;/p&gt;
&lt;p&gt;因为是在赛前一个月（不到）建起来的队伍，大家还不能友好地打成一片，有了去年的经验，我先做的事情就是破冰。建了一个群，尽可能地多讨论题目，约训练赛，熟悉大家的长处。几场比赛磨合下来，大家熟悉了很多，配合也很顺手，手速快的时候真是特别爽。&lt;/p&gt;
&lt;p&gt;但这都不是重要的，团队配合只是让比赛更稳更顺利进行的一种催化剂，真正比的还是实力。&lt;/p&gt;
&lt;p&gt;怎么办，那就看书、刷题呗。那真是段黑暗的日子，中间又经历了几次不如意和挫折，我受到了很大的考验，有时候会消极地想“唉要不算了，你看你这么弱，大家也不是很看好你，再搞下去不是死钻牛角尖么”，可是我舍不得放弃自己这么喜欢又喜欢了这么久的东西，就安慰自己“再坚持一下”。&lt;/p&gt;
&lt;p&gt;就这么一天一天地捱过去，省赛终于到了。之前一个人训练的时候还会想 说不定能冲个金呢，后来我告诉自己要认清实力，给自己明确的定位之后压力也小了不少。看我们队还有我自己的状态我觉得银牌稳了。&lt;/p&gt;
&lt;p&gt;热身赛的时候A题我们想搜索可是一直不行，到最后也没搞出来，大家都感觉很疲倦，而且我觉得自己紧张了。之前知乎上说一个ACM队的队长要会说段子放松气氛，还不能把紧张的情绪传达出去以免乱了队友的阵脚，还要学会取舍，把握做题节奏，带飞队友，最最重要也是所有队员都应该做到的就是信任，信任和你并肩作战的人。&lt;/p&gt;
&lt;p&gt;正赛前一天晚上我水水地提了个作战计划，其实也是没话找话让大家放松一点，我觉得我们的优势是手速快，我们计划第二天可以先拼一波手速拯救一下后面的罚时，还是像热身赛一样三开，发现水题就上，争取半小时过三题。但我们的缺点就是后劲不足，对有区分度的题拿不稳，这样很容易卡题挂机。所以明天思路不能乱，前面留出足够的时间，后面稳住就好。&lt;br&gt;正赛时我们半小时出了两题，但可能因为有点紧张都没能1A，第三个（F题）总是莫名WA，我们怀疑自己没读懂题意，但是又不知道到底哪里没读懂。刷了下榜看到别的队也是错了好几发才A的，于是决定不浪费时间先看别的，大概一小时之后又过了一个贪心题，这时候我已经完全放弃手速战略，心想跟榜能做几个是几个了。我建议先看看别的题，但因为F过不了大家心里总是拧着，于是接下来就成了在CDF中间摇摆不定，学长说F“这题不能不过，这题我们一定得过呀！”，又僵持了一阵，局面变成我看C，kid_zhao看D，学长一边帮着我看C一边想F的坑点在哪，后来学长说他想到了，和kid_zhao讲了下两人一拍即合，说就这样绝对没问题，果然这次终于返回了Yes！过了这四个题，大伙终于放心了，刷了一下榜，这时候我们在铜牌区。我们决定主攻CD了。我和学长看C，kid_zhao继续想D，比赛到三个多小时的时候，我感觉脑子有点不够用了。我们思路已经成型了，知道这题该怎么解，然后就是一直互相理清对方的思路，调代码，我负责预处理的组合数，学长去处理之后的数组和位置，后来发现要用到逆元，还好前两天做过类似的题，get了线性递推逆元的姿势，封榜时我们是铜牌第一，C题WA了一发，这时候加上逆元改好C题的代码后终于把这题过了。我隐约觉得这题是道银牌题，所以当时激动的要哭了。&lt;br&gt;然后就剩D了，不得不说后半程完全放kid_zhao一个人怼D题是个错误的做法，还是我们在C题上浪费的时间太多，不然就能留出更多的时间大家一起看，因为这两题都是组合数学，肯定有相似的地方，我真的很后悔把他一个人抛在一边。这时候还剩大概45min，我觉得时间已经不够了。但还想垂死挣扎一下，其实我是满足了，但看jc菌很想把这题过了，但是思路不够明白，于是尽全力帮他稳住心态，千万不能炸啊。我问他“你确定推的公式对么”，他说确定，好，那我们就交交交！虽然最后也没过，但我觉得死而无憾辣！&lt;/p&gt;
&lt;p&gt;因为是封榜后过题，滚榜的时候看到我们队咻地飞上去，还飞过了铜牌线，我们三个都惊呆了！一边“哇！”一边击掌~看到那个微妙的名次我有种黑子的篮球战胜了奇迹的世代的感觉&amp;gt;o&amp;lt;&lt;/p&gt;
&lt;p&gt;学长去考研，不知道jc菌还会不会继续坚持，但总之这次比赛给了我极大的信心，我会继续走下去的，好像之前也说过类似的话吧，那我现在的心情和第一次说出这话时的心情一样，谁也拦不住我。&lt;/p&gt;
&lt;p&gt;我也知道这条路很难走，觉悟是一定要有的。而且一山更比一山高，知道了自己并不如想象的那么菜以后，剩下的事情就是竭尽全力了。&lt;/p&gt;
&lt;p&gt;去年学长们也是银牌，说明拿银是本分之职，是起码的责任。而我没有强大到可以保护所有的队友，其实有点狼狈。赛后看kid_zhao不甘心的样子觉得有点对不起他，我太菜，还差得远呢。&lt;/p&gt;
&lt;p&gt;之后的比赛还有很多，网络赛要想出线会更难，到时候可能还会遇到因为经费问题不让女生参赛的打击，如果紧抓着这块银牌不放就变成lowbee了。&lt;/p&gt;
&lt;h3 id=&quot;【一点碎碎念】&quot;&gt;&lt;a href=&quot;#【一点碎碎念】&quot; class=&quot;headerlink&quot; title=&quot;【一点碎碎念】&quot;&gt;&lt;/a&gt;【一点碎碎念】&lt;/h3&gt;&lt;p&gt;我认为省赛对新NEW ACMer来说还是很重要的，毕竟这是他们成为ACMer将近一年后，迎来的第一场大型比赛，不能理解为什么不把名额多分几个给16级的学弟学妹，就算是友情队也好啊。&lt;/p&gt;
&lt;h2 id=&quot;竞赛生涯拿到的第一块牌叽&quot;&gt;&lt;a href=&quot;#竞赛生涯拿到的第一块牌叽&quot; class=&quot;headerlink&quot; title=&quot;竞赛生涯拿到的第一块牌叽&quot;&gt;&lt;/a&gt;竞赛生涯拿到的第一块牌叽&lt;/h2&gt;&lt;p&gt;舍不得送去实验室肿么办www&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/c3c8eb1bly1ffe81z8pekj21w02iou0y.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;谢谢ACM，苦的甜的，你让我收获我太多太多。_(:3」∠❀)_&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://moemoemortimer.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>POJ 2932 Coneology【扫描线】</title>
    <link href="https://moemoemortimer.github.io/2017/05/04/poj-2932/"/>
    <id>https://moemoemortimer.github.io/2017/05/04/poj-2932/</id>
    <published>2017-05-04T14:31:08.000Z</published>
    <updated>2017-05-04T14:35:02.780Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2932&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;POJ 2932 Coneology 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; maxn 40005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; N;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x[maxn], y[maxn], r[maxn];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//判断圆i是否在圆j内部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;inside&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; dx = x[i]-x[j], dy = y[i]-y[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dx*dx+dy*dy-r[j]*r[j]&amp;lt;=&lt;span class=&quot;number&quot;&gt;1e-8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;pair&amp;lt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;gt; events;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//events.clear();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; N; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        events.push_back(make_pair(x[i]-r[i], i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        events.push_back(make_pair(x[i]+r[i], i+N));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sort(events.begin(), events.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;pair&amp;lt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;gt; outers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//outers.clear();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; res; &lt;span class=&quot;comment&quot;&gt;//最外层圆的集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//res.clear();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; events.size(); i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id = events[i].second%N;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(events[i].second&amp;lt;N)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;pair&amp;lt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;gt;::iterator it = outers.lower_bound(make_pair(y[id], id));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(it != outers.end() &amp;amp;&amp;amp; inside(id, it-&amp;gt;second))&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(it != outers.begin() &amp;amp;&amp;amp; inside(id, (--it)-&amp;gt;second))&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push_back(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outers.insert(make_pair(y[id], id));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outers.erase(make_pair(y[id], id));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sort(res.begin(), res.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, res.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; res.size(); i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%c&quot;&lt;/span&gt;, res[i]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;==res.size()?&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;N) != EOF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; N; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%lf%lf%lf&quot;&lt;/span&gt;, &amp;amp;r[i], &amp;amp;x[i], &amp;amp;y[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        solve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="扫描线" scheme="https://moemoemortimer.github.io/tags/%E6%89%AB%E6%8F%8F%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>HDU 5976 【逆元】</title>
    <link href="https://moemoemortimer.github.io/2017/05/03/hdu-5976/"/>
    <id>https://moemoemortimer.github.io/2017/05/03/hdu-5976/</id>
    <published>2017-05-03T13:48:46.000Z</published>
    <updated>2017-05-09T03:08:34.133Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5976&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HDU 5976 Detachment 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;将$x$拆成$a_1, a_2, a_3,…, a_i$的和，保证$a_i$各不相同，令$ s=a_1·a_2·a_3·..·a_i$，求s的最大值。&lt;/p&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;第一行为测试组数T&lt;br&gt;接下来每行一个x&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;拆分后乘积最大值s&lt;br&gt;（可以选择不拆，也就是$s=x$）&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;创造TLE新纪录的一道题…orz&lt;/p&gt;
&lt;p&gt;由均值不等式的推广可知，如果$a_i$可以相等，那么最好变成n个平均值时乘积会最大。如果没说n是多少，那么应尽量让n更大，现在要求$a_i$不相等，因此要从最小的开始(从2开始往后加可以让乘数尽量多),变成2,3,4,5,…这样的序列，如果这样分到k时，剩下的&amp;lt;k+1了，就把剩下的部分从k开始往前各位加1&lt;/p&gt;
&lt;p&gt;比如17，先拆成2,3,4,5,剩一个3，倒着加回去变成2,4,5,6.&lt;/p&gt;
&lt;p&gt;接下来就是代码部分，发现要预处理前缀和为了找到k，还要预处理阶乘，还有倒着加回去后发现阶乘部分可能少一个，所以要用到乘法逆元。&lt;/p&gt;
&lt;p&gt;然后是时间优化&lt;br&gt;用费马小定理求逆元是会T的，所以学习了O(n)的求法，前缀和阶乘数组开大了是会T的，大概44725这么大是安全的【sqrt(1e9)】&lt;br&gt;交到最后心好累，看到AC一点感觉也没有了QAQ&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MOD 1000000007&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ll f[&lt;span class=&quot;number&quot;&gt;45000&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum[&lt;span class=&quot;number&quot;&gt;45000&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ll inv[&lt;span class=&quot;number&quot;&gt;45000&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	f[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;sum[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;inv[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;44725&lt;/span&gt;; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sum[i] = sum[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		f[i] = (f[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]*i)%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		inv[i]=(MOD-MOD/i)*inv[MOD%i]%MOD;  &lt;span class=&quot;comment&quot;&gt;//O(n)的复杂度处理逆元&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(x&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; pos = lower_bound(sum, sum+&lt;span class=&quot;number&quot;&gt;44722&lt;/span&gt;, x)-sum; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum[pos]==x)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%lld\n&quot;&lt;/span&gt;, f[pos]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pos--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ll ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = x-sum[pos];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(y==pos)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ans = ((f[pos]*inv[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])%MOD*(pos+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ans=f[pos]*inv[pos+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-y]%MOD*(pos+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%lld\n&quot;&lt;/span&gt;, (ans+MOD)%MOD);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="数论" scheme="https://moemoemortimer.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="逆元" scheme="https://moemoemortimer.github.io/tags/%E9%80%86%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>URAL 2018 The Debut Album【动态规划】</title>
    <link href="https://moemoemortimer.github.io/2017/04/30/ural-2018/"/>
    <id>https://moemoemortimer.github.io/2017/04/30/ural-2018/</id>
    <published>2017-04-30T12:34:39.000Z</published>
    <updated>2017-04-30T13:13:20.184Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://cn.vjudge.net/problem/URAL-2018&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;URAL 2018 The Debut Album 题目传送门&lt;/a&gt;&lt;br&gt;不太熟悉他的官网，贴一个VJ上的地址好了。。&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;一串长度为n的序列由1和2组成，其中最多有a个1和b个2连续出现&lt;br&gt;问有多少种排列方式&lt;/p&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;n,a,b&lt;br&gt;1≤a,b≤300;&lt;br&gt;max(a,b)+1≤n≤50000&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;符合条件的所有情况数&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;一开始觉得是排列组合，推了半天推不出公式&lt;br&gt;后来觉得可以用dp做，然而还是推不出正确的dp公式…&lt;br&gt;整场被学弟虐得不要不要的23333&lt;/p&gt;
&lt;p&gt;开一个二维dp数组&lt;br&gt;dp[i][j]表示当前长度为i，以j结尾的方案数&lt;br&gt;假设当前处理到i项，对于长度为i-1,i-2,i-3,…i-a的以2结尾的每个已有排列，可以在其后填上1, 2, 3, …, a个1，形成新的可行方案。&lt;br&gt;同理，对于长度为i-1,i-2,i-3,…i-b的以1结尾的每个已有排列，可以在其后填上1, 2, 3, …, b个2，形成新的可行方案。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MOD 1000000007&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; dp[&lt;span class=&quot;number&quot;&gt;50001&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//dp[i][j]表示当前长度为i，以j结尾的方案数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, a, b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;a, &amp;amp;b)!= EOF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i, j, k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(dp, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(dp));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dp[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;dp[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt;= a &amp;amp;&amp;amp; j&amp;lt;=i; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] += dp[i-j][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = dp[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt;= b &amp;amp;&amp;amp; j&amp;lt;=i; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] += dp[i-j][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = dp[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, (dp[n][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]%MOD+dp[n][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]%MOD)%MOD);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;/p&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="动态规划" scheme="https://moemoemortimer.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>HDU 5245 Joyful 【概率期望】</title>
    <link href="https://moemoemortimer.github.io/2017/04/29/hdu-5245/"/>
    <id>https://moemoemortimer.github.io/2017/04/29/hdu-5245/</id>
    <published>2017-04-29T15:40:05.000Z</published>
    <updated>2017-04-29T16:00:14.858Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5245&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HDU 5245 Joyful 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;一个$M*N$的矩阵，执行K次操作，每次随机选两个格子$(x_1, y_1), (x_2, y_2)$（x表示行，y表示列）以这两个格子为两个角的子矩阵将被涂满颜色。每个格子被选择的概率相等，问$K$次操作之后将有多少个格子被涂满（求期望）。&lt;/p&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;$N, M, K$&lt;br&gt;$1≤M,N≤500, 1≤K≤20$&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;$K$次操作后被涂上颜色的格子数的期望（四舍五入至整数）&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;注意到 $1≤M,N≤500$ , 时限是1s，至少要找出 $O(n)$ 的解法。&lt;br&gt;考虑每个格子 $(i, j)$ ，设一次操作后被选中的概率是$p$，那么没被选中的概率就是$1-p$;&lt;br&gt;进行k次选择后，被选中的概率就是$P(k)=1-(1-p)^k$&lt;br&gt;遍历所有格子，每次 $ans+=P(k)$，最后取 $round(ans/(mn)^2)$即可。&lt;br&gt;（每次选的两个格子可以相同）。&lt;/p&gt;
&lt;p&gt;接下来讨论p的求法。&lt;/p&gt;
&lt;p&gt;对格子 $(i, j)$ ，选择坐标对时不选他的情况存在于四个区域，也就是 $(i, j)$ 的左侧，右侧，上侧，下侧，所选的两个坐标一定存在于同一区域。把这些区域的选择数算出来之后（其实就是算一个面积然后再平方）发现四个角被重复计算了。&lt;br&gt;所以要减去在四个角区域的选择数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算概率的k次幂需要用到快速幂&lt;/li&gt;
&lt;li&gt;calprob函数主要用来计算八个面积233&lt;/li&gt;
&lt;li&gt;防止计算过程中爆int，全部用了long long&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ll t, n, m, k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;qpow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(n==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; ans = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(n&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans *= a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a *= a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n &amp;gt;&amp;gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;calprob&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ll i, ll j)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ll up, dn, l, r, corn1, corn2, corn3, corn4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    up = i*n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dn = (m-i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    l = j*m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = (n-j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    corn1 = i*j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    corn2 = i*(n-j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    corn3 = (m-i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    corn4 = (m-i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*(n-j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ll tot = up*up+dn*dn+l*l+r*r-corn1*corn1-corn2*corn2-corn3*corn3-corn4*corn4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//一次不选(i,j)的概率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tot*&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;/(n*n*m*m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; kase = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;, &amp;amp;m, &amp;amp;n, &amp;amp;k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; tmp = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;m; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j&amp;lt;n; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p = calprob(i, j);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tmp += (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-qpow(p, k));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//cout &amp;lt;&amp;lt; tmp &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ans = round(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Case #%d: %d\n&quot;&lt;/span&gt;, kase++, ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="概率期望" scheme="https://moemoemortimer.github.io/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
  </entry>
  
  <entry>
    <title>HDU 5241 Friends 【高精度乘法+快速幂】</title>
    <link href="https://moemoemortimer.github.io/2017/04/29/hdu-5241/"/>
    <id>https://moemoemortimer.github.io/2017/04/29/hdu-5241/</id>
    <published>2017-04-29T10:01:51.000Z</published>
    <updated>2017-04-30T12:31:52.255Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5241&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HDU 5241 Friends 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;给出全集Mike中元素个数，对于Mike的9个子集，给出了子集间的包含关系（例如a的子集是b的父集），问满足题述关系的情况一共有多少种。&lt;/p&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;样例个数t&lt;br&gt;全集Mike中元素个数n&lt;br&gt;$0&amp;lt;=n&amp;lt;=3000$&lt;br&gt;（子集的个数以及各集合之间的关系已经在题目中给出）&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;符合要求的情况数&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;设Mike中元素个数n时答案为$ans(n)$, 考虑如下递推过程:&lt;/p&gt;
&lt;p&gt;$$ans(n) = ans(n-1)*ans(1)$$&lt;br&gt;全集有n-1个元素与全集有1个元素的某种状态做一次并运算就可得到全集有n个元素时的某种可行情况。&lt;/p&gt;
&lt;p&gt;全集有n个元素时的全部可行情况数就是ans(n-1)*ans(1)。&lt;/p&gt;
&lt;p&gt;通过给出的样例（n=0, ans=1; n=2, ans=1024）或者简单枚举可知$ans(1) = 32 = 2^5$&lt;/p&gt;
&lt;p&gt;那么问题及转化为，给定n，计算$ 2^{5n} $&lt;/p&gt;
&lt;p&gt;由于n最大为3000，答案最多有$\lg2^{15000} \approx4500$位，因此想到了高精度乘法。&lt;/p&gt;
&lt;p&gt;又因时间限制和所求幂的特殊性，需要结合快速幂计算。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c[&lt;span class=&quot;number&quot;&gt;60000&lt;/span&gt;]=&amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;60000&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chen&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[],&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j,k,l,sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(c,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(c));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    l=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(a)+&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(b)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;i&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i--)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(a)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,k=i+j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;j&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j--,k--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sum=(b[i]-&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;)*(a[j]-&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;)+c[k];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c[k]=sum%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;c[k&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+=sum/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=c[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]?&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;l;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a[j++]=(c[i]+&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;); a[j]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;qPow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;;a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b[&lt;span class=&quot;number&quot;&gt;50000&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;;b[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;;b[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(n &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 若幂为奇数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            chen(a,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        chen(b,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    n &amp;gt;&amp;gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 右位移等价于除以2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; kase=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Case #%d: &quot;&lt;/span&gt;,kase++);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;;a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        qPow(a,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s\n&quot;&lt;/span&gt;,a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="快速幂" scheme="https://moemoemortimer.github.io/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>叉姐200题【搬运】</title>
    <link href="https://moemoemortimer.github.io/2017/04/28/ftiasch-200-problemset/"/>
    <id>https://moemoemortimer.github.io/2017/04/28/ftiasch-200-problemset/</id>
    <published>2017-04-28T04:36:32.000Z</published>
    <updated>2017-04-29T13:45:47.173Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;来自ftiasch在&lt;a href=&quot;https://gist.github.com/ftiasch/007a7732456cc8f88ba6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;贴出的题。有些公式看着不太舒服，就移到这里了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PublicTransitHard &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13797&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13797&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SimilarNames &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12868&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12868&lt;/a&gt;&lt;br&gt;n个字符串s_1, s_2, …, s_n，m个条件(a_i, b&lt;em&gt;i)，统计满足s&lt;/em&gt;{p(a&lt;em&gt;i)}是s&lt;/em&gt;{p(b_i)}前缀的排列p_1, p_2, …, p_n数量&lt;br&gt;n &amp;lt;= 50, |s_i| &amp;lt;= 50, m &amp;lt;= 8 &lt;/p&gt;
&lt;p&gt;BichromeSky &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13711&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13711&lt;/a&gt;&lt;br&gt;n个红点，m个蓝点，没有三点共线，第i个红点以p_i的概率出现，求红点的凸包包含所有蓝点的概率&lt;br&gt;n, m &amp;lt;= 100 &lt;/p&gt;
&lt;p&gt;InverseRMQ &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13235&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13235&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;TreeDistance &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13369&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13369&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;TreePuzzle &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13185&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13185&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;EagleInZoo &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13117&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13117&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;EllysLamps &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11906&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11906&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;SimilarSequencesAnother &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12742&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12742&lt;/a&gt;&lt;br&gt;(A, B) 是相似的，当且仅当A, B各删不超过2个字符后相等。给定长度n和字符集m，问相似(A, B)数量。&lt;br&gt;n &amp;lt;= 100 &lt;/p&gt;
&lt;p&gt;TaroCheckers &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12996&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12996&lt;/a&gt;&lt;br&gt;n * m的棋盘，第i行前l[i]个格子有一个棋子，后r[i]个格子有一个棋子，每列最多有一个棋子，问方案数。&lt;br&gt;n &amp;lt;= 50, m &amp;lt;= 200 &lt;/p&gt;
&lt;p&gt;OneDimensionalRobot &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12999&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12999&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;PerfectSquare &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13145&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13145&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;AlienAndPermutation &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12949&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12949&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Perfect Matching &lt;a href=&quot;http://www.spoj.com/problems/MATCH/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.spoj.com/problems/MATCH/&lt;/a&gt;&lt;br&gt;n个点的二分图，假设完备匹配的数量是x，判断x = 0 (mod 2)&lt;br&gt;n &amp;lt;= 300 &lt;/p&gt;
&lt;p&gt;(False) Face &lt;a href=&quot;https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=360&amp;amp;page=show_problem&amp;amp;problem=2625&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=360&amp;amp;page=show_problem&amp;amp;problem=2625&lt;/a&gt;&lt;br&gt;n个点的二分图，假设完备匹配的数量是x，判断x = 0 (mod 4)&lt;br&gt;n &amp;lt;= 300 &lt;/p&gt;
&lt;p&gt;Little Elephant and Broken Sorting &lt;a href=&quot;http://codeforces.com/contest/258/problem/D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/contest/258/problem/D&lt;/a&gt;&lt;br&gt;长度为n的排列，m次交换a_i, b_i，每个交换a_i, b_i有50%的概率不发生，问逆序数的期望&lt;br&gt;n, m &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;Inversions problem &lt;a href=&quot;http://codeforces.com/problemset/problem/513/G3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/513/G3&lt;/a&gt;&lt;br&gt;长度为n的排列，每次随机一个子段翻转，问m轮后逆序数的期望&lt;br&gt;n &amp;lt;= 300, m &amp;lt;= 10^9 &lt;/p&gt;
&lt;h1 id=&quot;Cliquers-PA-2008-Round-5&quot;&gt;&lt;a href=&quot;#Cliquers-PA-2008-Round-5&quot; class=&quot;headerlink&quot; title=&quot;Cliquers [PA 2008, Round 5]&quot;&gt;&lt;/a&gt;Cliquers [PA 2008, Round 5]&lt;/h1&gt;&lt;p&gt;求$n$个点有标号的无向图的数量，要求每个连通分量都是团。 &lt;/p&gt;
&lt;p&gt;$n \leq 200000$ &lt;/p&gt;
&lt;h1 id=&quot;Isomorphism-SGU-282&quot;&gt;&lt;a href=&quot;#Isomorphism-SGU-282&quot; class=&quot;headerlink&quot; title=&quot;Isomorphism [SGU 282]&quot;&gt;&lt;/a&gt;Isomorphism [SGU 282]&lt;/h1&gt;&lt;p&gt;$n$个点的完全图$m$染色，问同构意义下有多少种染色方案。 &lt;/p&gt;
&lt;p&gt;$n \leq 53, m \leq 1000$ &lt;/p&gt;
&lt;h1 id=&quot;Writing-n-as-the-product-of-k-distinct-positive-integers-PE-495&quot;&gt;&lt;a href=&quot;#Writing-n-as-the-product-of-k-distinct-positive-integers-PE-495&quot; class=&quot;headerlink&quot; title=&quot;Writing n as the product of k distinct positive integers [PE 495]&quot;&gt;&lt;/a&gt;Writing n as the product of k distinct positive integers [PE 495]&lt;/h1&gt;&lt;p&gt;求$n!$写成$k$个不同的数的乘积的方案数。 &lt;/p&gt;
&lt;p&gt;$n \leq 10^4, k \leq 30$ &lt;/p&gt;
&lt;h1 id=&quot;Partition-HDOJ-4651&quot;&gt;&lt;a href=&quot;#Partition-HDOJ-4651&quot; class=&quot;headerlink&quot; title=&quot;Partition [HDOJ 4651]&quot;&gt;&lt;/a&gt;Partition [HDOJ 4651]&lt;/h1&gt;&lt;p&gt;求$n$的拆分数$p_n$。 &lt;/p&gt;
&lt;p&gt;$n \leq 10^5$ &lt;/p&gt;
&lt;p&gt;$$\prod&lt;em&gt;{n = 1}^{\infty} (1 - x^n) = \sum&lt;/em&gt;{k = 0}^{\infty} x^{\frac{k(3k \pm 1)}{2}}$$ &lt;/p&gt;
&lt;h1 id=&quot;Integer-Partition-HDOJ-4658&quot;&gt;&lt;a href=&quot;#Integer-Partition-HDOJ-4658&quot; class=&quot;headerlink&quot; title=&quot;Integer Partition [HDOJ 4658]&quot;&gt;&lt;/a&gt;Integer Partition [HDOJ 4658]&lt;/h1&gt;&lt;p&gt;求$n$的拆分数，要求数字出现不超过$k$次。 &lt;/p&gt;
&lt;p&gt;$k \leq n \leq 10^5$ &lt;/p&gt;
&lt;h1 id=&quot;Little-Elephant-and-Broken-Sorting-CF-258D&quot;&gt;&lt;a href=&quot;#Little-Elephant-and-Broken-Sorting-CF-258D&quot; class=&quot;headerlink&quot; title=&quot;Little Elephant and Broken Sorting [CF 258D]&quot;&gt;&lt;/a&gt;Little Elephant and Broken Sorting [CF 258D]&lt;/h1&gt;&lt;p&gt;$1, 2, \dots, n$的排列$p$。 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for i := 1 .. m do 
if random() mod 2 == 0 
swap(p[a[i]], p[b[i]]) 
end 
end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;求逆序对数量的期望。 &lt;/p&gt;
&lt;p&gt;$n, m \leq 1000$ &lt;/p&gt;
&lt;h1 id=&quot;Inversions-problem-CF-513G&quot;&gt;&lt;a href=&quot;#Inversions-problem-CF-513G&quot; class=&quot;headerlink&quot; title=&quot;Inversions problem [CF 513G]&quot;&gt;&lt;/a&gt;Inversions problem [CF 513G]&lt;/h1&gt;&lt;p&gt;$1, 2, \dots, n$的排列。&lt;br&gt;等概率地选择一个连续子串，将其翻转。&lt;br&gt;求$m$次操作后逆序对数量的期望。 &lt;/p&gt;
&lt;p&gt;$n \leq 300, m \leq 10^9$ &lt;/p&gt;
&lt;h1 id=&quot;BichromeSky-SRM-655-Hard&quot;&gt;&lt;a href=&quot;#BichromeSky-SRM-655-Hard&quot; class=&quot;headerlink&quot; title=&quot;BichromeSky [SRM 655 Hard]&quot;&gt;&lt;/a&gt;BichromeSky [SRM 655 Hard]&lt;/h1&gt;&lt;p&gt;$n$个红点，$m$个蓝点，没有三点共线。&lt;br&gt;第i个红点以p_i的概率出现，求红点的凸包包含所有蓝点的概率。 &lt;/p&gt;
&lt;p&gt;$n, m \leq 100$ &lt;/p&gt;
&lt;h1 id=&quot;Chocolate-triangles&quot;&gt;&lt;a href=&quot;#Chocolate-triangles&quot; class=&quot;headerlink&quot; title=&quot;Chocolate triangles&quot;&gt;&lt;/a&gt;Chocolate triangles&lt;/h1&gt;&lt;p&gt;求$n$边型剖分中恰好有$k$个三角形的方案数。 &lt;/p&gt;
&lt;p&gt;$n, k \leq 300$ &lt;/p&gt;
&lt;h1 id=&quot;Perfect-Matching-SPOJ-MATCH&quot;&gt;&lt;a href=&quot;#Perfect-Matching-SPOJ-MATCH&quot; class=&quot;headerlink&quot; title=&quot;Perfect Matching [SPOJ MATCH]&quot;&gt;&lt;/a&gt;Perfect Matching [SPOJ MATCH]&lt;/h1&gt;&lt;p&gt;$n$个点的二分图，假设完备匹配的数量是$x$，判断$x \equiv 0 \pmod 2$。 &lt;/p&gt;
&lt;p&gt;$n \leq 300$ &lt;/p&gt;
&lt;h1 id=&quot;False-Face-CERC-2009F&quot;&gt;&lt;a href=&quot;#False-Face-CERC-2009F&quot; class=&quot;headerlink&quot; title=&quot;(False) Face [CERC 2009F]&quot;&gt;&lt;/a&gt;(False) Face [CERC 2009F]&lt;/h1&gt;&lt;p&gt;$n$个点的二分图，假设完备匹配的数量是$x$，判断$x \equiv 0 \pmod 4$。 &lt;/p&gt;
&lt;p&gt;$n \leq 300$ &lt;/p&gt;
&lt;h1 id=&quot;SWERC-2014-Problem-J-The-Big-Painting&quot;&gt;&lt;a href=&quot;#SWERC-2014-Problem-J-The-Big-Painting&quot; class=&quot;headerlink&quot; title=&quot;SWERC 2014 Problem J The Big Painting&quot;&gt;&lt;/a&gt;SWERC 2014 Problem J The Big Painting&lt;/h1&gt;&lt;p&gt;给出矩阵$A, B$，问$A$在$B$中出现了多少次。 &lt;/p&gt;
&lt;h1 id=&quot;SWERC-2014-Problem-H-Money-Transfers&quot;&gt;&lt;a href=&quot;#SWERC-2014-Problem-H-Money-Transfers&quot; class=&quot;headerlink&quot; title=&quot;SWERC 2014 Problem H Money Transfers&quot;&gt;&lt;/a&gt;SWERC 2014 Problem H Money Transfers&lt;/h1&gt;&lt;p&gt;给出$n$个点$m$条边的无向图，和一个顶点集$M$，现在给所有边的权值增加$c$，使得$1$到$n$的最短路只包含$M$中的点，求$c$的最小值。 &lt;/p&gt;
&lt;p&gt;$n, m \leq 1000$ &lt;/p&gt;
&lt;h1 id=&quot;CERC-2014-Problem-F-Vocabulary&quot;&gt;&lt;a href=&quot;#CERC-2014-Problem-F-Vocabulary&quot; class=&quot;headerlink&quot; title=&quot;CERC 2014 Problem F Vocabulary&quot;&gt;&lt;/a&gt;CERC 2014 Problem F Vocabulary&lt;/h1&gt;&lt;p&gt;给出$3$个包含&lt;code&gt;?&lt;/code&gt;的字符串$A$, $B$, $C$，问有多少种把&lt;code&gt;?&lt;/code&gt;替换为小写字母的方案，使得$A &amp;lt; B &amp;lt; C$，答案模$(10^9+9)$ &lt;/p&gt;
&lt;p&gt;$|A|, |B|, |C| \leq 10^6$ &lt;/p&gt;
&lt;h1 id=&quot;CERC-2014-Problem-E-Can’t-stop-playing&quot;&gt;&lt;a href=&quot;#CERC-2014-Problem-E-Can’t-stop-playing&quot; class=&quot;headerlink&quot; title=&quot;CERC 2014 Problem E Can’t stop playing&quot;&gt;&lt;/a&gt;CERC 2014 Problem E Can’t stop playing&lt;/h1&gt;&lt;p&gt;你正在玩$1$维版本的2048游戏。数字$2^{a_1}, 2^{a_2}, \dots, 2^{a_n}$依次出现，你可以选择加到左边还是右边，问最后能不能只剩$1$个，输出方案。 &lt;/p&gt;
&lt;p&gt;$n \leq 1000, 2^{a_1} + 2^{a_2} + \dots + 2^{a_n} \leq 2^13$ &lt;/p&gt;
&lt;h1 id=&quot;CERC-2014-Problem-L-Outer-space-invader&quot;&gt;&lt;a href=&quot;#CERC-2014-Problem-L-Outer-space-invader&quot; class=&quot;headerlink&quot; title=&quot;CERC 2014 Problem L Outer space invader&quot;&gt;&lt;/a&gt;CERC 2014 Problem L Outer space invader&lt;/h1&gt;&lt;p&gt;有$n$个怪物，第$i$个怪物于第$a_i$秒出现，第$b_i$秒消失，高度是$d_i$。你可以使用威力是$x$的炸弹，消灭高度不超过$x$的所有怪物，代价是$x$。&lt;br&gt;问消灭所有怪物的最小的总代价。 &lt;/p&gt;
&lt;p&gt;$n \leq 300$ &lt;/p&gt;
&lt;h1 id=&quot;CERC-2014-Problem-J-Pork-barrel&quot;&gt;&lt;a href=&quot;#CERC-2014-Problem-J-Pork-barrel&quot; class=&quot;headerlink&quot; title=&quot;CERC 2014 Problem J Pork barrel&quot;&gt;&lt;/a&gt;CERC 2014 Problem J Pork barrel&lt;/h1&gt;&lt;p&gt;给出$n$个点$m$条边的无向图，&lt;strong&gt;在线&lt;/strong&gt;回答$q$个询问$(l_i, r_i)$，求只考虑长度在$[l_i, r_i]$内的边时，最小生成树的大小。 &lt;/p&gt;
&lt;p&gt;$n \leq 1000, m \leq 10^5, q \leq 10^6$ &lt;/p&gt;
&lt;h1 id=&quot;CERC-2014-Problem-G-Virus-synthesis&quot;&gt;&lt;a href=&quot;#CERC-2014-Problem-G-Virus-synthesis&quot; class=&quot;headerlink&quot; title=&quot;CERC 2014 Problem G Virus synthesis&quot;&gt;&lt;/a&gt;CERC 2014 Problem G Virus synthesis&lt;/h1&gt;&lt;p&gt;给出字符串$S$，可以进行$2$种操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在某端删除一个字符 &lt;/li&gt;
&lt;li&gt;如果$S$是偶数长度的回文串，删除左半边/右半边 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问得到空串最少要几步。 &lt;/p&gt;
&lt;p&gt;$|S| \leq 10^5$ &lt;/p&gt;
&lt;h1 id=&quot;CERC-2014-Problem-B-Mountainous-landscape&quot;&gt;&lt;a href=&quot;#CERC-2014-Problem-B-Mountainous-landscape&quot; class=&quot;headerlink&quot; title=&quot;CERC 2014 Problem B Mountainous landscape&quot;&gt;&lt;/a&gt;CERC 2014 Problem B Mountainous landscape&lt;/h1&gt;&lt;p&gt;$n$条线段组成的山，对于每条线段，输出站在它上面时，所能看到的第一个顶点 &lt;/p&gt;
&lt;p&gt;$n \leq 10^5$ &lt;/p&gt;
&lt;p&gt;Subarray Cuts &lt;a href=&quot;http://codeforces.com/problemset/problem/513/E2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/513/E2&lt;/a&gt;&lt;br&gt;数组a_1, a_2, …, a_n，选择k个不相交的连续段，设（从左到右）的和分别是s_1, s_2, …, s_k，最大化|s_1 - s_2| + |s_2 - s&lt;em&gt;3| + … + |s&lt;/em&gt;{k - 1} - s_k|&lt;br&gt;n &amp;lt;= 30000, k &amp;lt;= 200 &lt;/p&gt;
&lt;p&gt;Permanent &lt;a href=&quot;http://acdream.info/problem?pid=1027&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acdream.info/problem?pid=1027&lt;/a&gt;&lt;br&gt;A是n * n的矩阵，计算perm(A)&lt;br&gt;n &amp;lt;= 20 &lt;/p&gt;
&lt;p&gt;Permutation &lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=4917&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acm.hdu.edu.cn/showproblem.php?pid=4917&lt;/a&gt;&lt;br&gt;n个点m条边的有向图，统计拓扑排序的数量&lt;br&gt;n &amp;lt;= 40, m &amp;lt;= 20 &lt;/p&gt;
&lt;p&gt;SimilarNames &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12868&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12868&lt;/a&gt;&lt;br&gt;n个字符串s_1, s_2, …, s_n，m个条件(a_i, b&lt;em&gt;i)，统计满足s&lt;/em&gt;{p(a&lt;em&gt;i)}是s&lt;/em&gt;{p(b_i)}前缀的排列p_1, p_2, …, p_n数量&lt;br&gt;n &amp;lt;= 50, |s_i| &amp;lt;= 50, m &amp;lt;= 8 &lt;/p&gt;
&lt;p&gt;Perfect Matching &lt;a href=&quot;http://www.spoj.com/problems/MATCH/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.spoj.com/problems/MATCH/&lt;/a&gt;&lt;br&gt;n个点的二分图，假设完备匹配的数量是x，判断x = 0 (mod 2)&lt;br&gt;n &amp;lt;= 300 &lt;/p&gt;
&lt;p&gt;(False) Face &lt;a href=&quot;https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=360&amp;amp;page=show_problem&amp;amp;problem=2625&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=360&amp;amp;page=show_problem&amp;amp;problem=2625&lt;/a&gt;&lt;br&gt;n个点的二分图，假设完备匹配的数量是x，判断x = 0 (mod 4)&lt;br&gt;n &amp;lt;= 300 &lt;/p&gt;
&lt;p&gt;Permanent &lt;a href=&quot;http://codeforces.com/problemset/problem/468/E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/468/E&lt;/a&gt;&lt;br&gt;A是n * n的矩阵，除了给定的k个位置以外都是1，计算perm(A)&lt;br&gt;n &amp;lt;= 10^5, k &amp;lt;= 50 &lt;/p&gt;
&lt;p&gt;Little Elephant and Broken Sorting &lt;a href=&quot;http://codeforces.com/contest/258/problem/D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/contest/258/problem/D&lt;/a&gt;&lt;br&gt;长度为n的排列，m次交换a_i, b_i，每个交换a_i, b_i有50%的概率不发生，问逆序数的期望&lt;br&gt;n, m &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;Inversions problem &lt;a href=&quot;http://codeforces.com/problemset/problem/513/G3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/513/G3&lt;/a&gt;&lt;br&gt;长度为n的排列，每次随机一个子段翻转，问m轮后逆序数的期望&lt;br&gt;n &amp;lt;= 300, m &amp;lt;= 10^9 &lt;/p&gt;
&lt;p&gt;WinterAndSnowmen Kai!&lt;br&gt;X, Y \subset {1, 2, …, n}，f({x_1, x_2, …, x_n}= x_1 xor x_2 xor … xor x_n，求f(X) &amp;lt;= f(Y)的方案数&lt;br&gt;n &amp;lt;= 5000 &lt;/p&gt;
&lt;p&gt;WinterAndSnowmen &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12891&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12891&lt;/a&gt;&lt;br&gt;X \subset {1, 2, …, n}, Y \subset {1, 2, …, m}，f({x_1, x_2, …, x_n}= x_1 xor x_2 xor … xor x_n，求f(X) &amp;lt;= f(Y)的方案数&lt;br&gt;n, m &amp;lt;= 2000 &lt;/p&gt;
&lt;p&gt;Everlasting L &lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5116&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acm.hdu.edu.cn/showproblem.php?pid=5116&lt;/a&gt;&lt;br&gt;n * m的有障碍的棋盘，求放2个L的不同方案数，要求L的两边长度互质&lt;br&gt;n, m &amp;lt;= 200 &lt;/p&gt;
&lt;p&gt;ThreeLLogo &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13059&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13059&lt;/a&gt;&lt;br&gt;n * m的有障碍的棋盘，求放3个L的不同方案数&lt;br&gt;n, m &amp;lt;= 30 &lt;/p&gt;
&lt;p&gt;BichromeSky &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13711&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13711&lt;/a&gt;&lt;br&gt;n个红点，m个蓝点，没有三点共线，第i个红点以p_i的概率出现，求红点的凸包包含所有蓝点的概率&lt;br&gt;n, m &amp;lt;= 100 &lt;/p&gt;
&lt;p&gt;Chocolate triangles&lt;br&gt;求n边型剖分（不一定是三角剖分）中恰好有k个三角形的方案数&lt;br&gt;n, k &amp;lt;= 300 &lt;/p&gt;
&lt;p&gt;FencingPenguins &lt;a href=&quot;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12339&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12339&lt;/a&gt;&lt;br&gt;正N边型内有M个企鹅，选择一些顶点建立围栏，要求： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;围栏不能相交 &lt;/li&gt;
&lt;li&gt;每个围栏至少包含1个企鹅&lt;/li&gt;
&lt;li&gt;企鹅都被包围 &lt;/li&gt;
&lt;li&gt;同色企鹅在同一围栏&lt;br&gt;求方案数。&lt;br&gt;N &amp;lt;= 222, M &amp;lt;= 50 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;An easy problem about trees &lt;a href=&quot;http://codeforces.com/problemset/problem/457/F&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/457/F&lt;/a&gt;&lt;br&gt;Mr. Kitayuta’s Gift &lt;a href=&quot;http://codeforces.com/problemset/problem/506/E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/506/E&lt;/a&gt;&lt;br&gt;Deja Vu &lt;a href=&quot;http://codeforces.com/problemset/problem/331/E2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/331/E2&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Tree and Table &lt;a href=&quot;http://codeforces.com/problemset/problem/251/E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/251/E&lt;/a&gt;&lt;br&gt;Buy One, Get One Free &lt;a href=&quot;http://codeforces.com/problemset/problem/335/F&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/335/F&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Triangles 3000 &lt;a href=&quot;http://codeforces.com/problemset/problem/528/E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/528/E&lt;/a&gt;&lt;br&gt;3k条直线，等概率挑选3条，求围成三角形面积的期望 &lt;/p&gt;
&lt;p&gt;Fox and Meteor Shower &lt;a href=&quot;http://codeforces.com/problemset/problem/388/E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/388/E&lt;/a&gt;&lt;br&gt;1k条3维直线，求最大的两两相交的子集 &lt;/p&gt;
&lt;p&gt;Gena and Second Distance &lt;a href=&quot;http://codeforces.com/problemset/problem/442/E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/442/E&lt;/a&gt;&lt;br&gt;1k个点，求次近的点最远的点 &lt;/p&gt;
&lt;p&gt;Drawing Circles is Fun &lt;a href=&quot;http://codeforces.com/problemset/problem/372/E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codeforces.com/problemset/problem/372/E&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;OI论文 &lt;/p&gt;
&lt;p&gt;（有用）的论文有两类，第一类是讲授知识方法的，第二类是习题的堆砌。 &lt;/p&gt;
&lt;p&gt;知识方法型：&lt;br&gt;漆子超《分治算法在树的路径问题中的应用》&lt;br&gt;罗穗骞《后缀数组——处理字符串的有力工具》&lt;br&gt;姜碧野《SPFA算法的优化及应用》&lt;br&gt;金斌《欧几里得算法的应用》&lt;br&gt;贾志豪《组合游戏略述——浅谈SG游戏的若干拓展及变形》&amp;lt;— 有些民科，但是内容还是不错的&lt;br&gt;徐持衡《浅谈几类背包题》&lt;br&gt;陈丹琦《基于连通性状态压缩的动态规划问题》&lt;br&gt;汪一宁《1D/1D动态规划优化初步》&lt;br&gt;杨哲《凸完全单调性的一个加强与应用》&amp;lt;— 有些不明觉厉&lt;br&gt;杨弋《Hash在信息学竞赛中的一类应用》&lt;br&gt;周冬《生成树的计数及其应用》&amp;lt;— Matrix Tree&lt;br&gt;胡伯涛《最小割模型在信息学竞赛中的应用》&amp;lt;— 最小割的一个里程碑&lt;br&gt;罗剑桥 《浅谈分块思想在一类数据处理问题中的应用》&lt;br&gt;王子昱 《分块方法的应用》&lt;br&gt;陈立杰 《重量平衡树和后缀平衡树在信息学奥赛中的应用》&amp;lt;— ICPC短期内还不会出现&lt;br&gt;陈立杰《可持久化数据结构研究》&lt;br&gt;王钦石《浅析一类二分方法》 &lt;/p&gt;
&lt;p&gt;习题型：&lt;br&gt;乔明达 《搜索问题中的meet in the middle技巧》&lt;br&gt;曹钦翔《数据结构的提炼与压缩》&lt;br&gt;俞华程《矩阵乘法在信息学中的应用》&lt;br&gt;刘聪《浅谈数位类统计问题》&amp;lt;— 他的数位DP方法不够优秀，不应该学&lt;br&gt;汤可因《浅析竞赛中一类数学期望问题的解决方法》&lt;br&gt;徐源盛《对一类动态规划问题的研究》&lt;br&gt;张昆玮《数学归纳法与解题之道》 &lt;/p&gt;
&lt;p&gt;向量&lt;br&gt;cross product, dot product&lt;/p&gt;
&lt;p&gt;对象&lt;br&gt;点，直线（线段、射线），圆，多边形（简单多边形、凸多边形） &lt;/p&gt;
&lt;p&gt;点 在 直线（线段、射线）上&lt;br&gt;点 在 圆 内&lt;br&gt;点 在 简单多边形 内&lt;br&gt;点 在 凸多边形内 O(log N) &lt;/p&gt;
&lt;p&gt;直线 和 直线 的夹角 &lt;/p&gt;
&lt;p&gt;直线 和 直线 的交点&lt;br&gt;直线 和 圆 的交点&lt;br&gt;直线 和 凸多边形的交点 O(log N)&lt;br&gt;圆 和 圆 的交点&lt;br&gt;凸多边形 和 凸多边形 的交 O(N log N) / O(N) &lt;/p&gt;
&lt;p&gt;点 和 圆 的切线&lt;br&gt;圆 和 圆 的切线&lt;/p&gt;
&lt;p&gt;圆 和 简单多边形 的交 &lt;/p&gt;
&lt;p&gt;点 到 直线 的投影&lt;br&gt;点 关于 直线的对称&lt;br&gt;平移&lt;br&gt;关于原点的旋转&lt;br&gt;对偶&lt;br&gt;反演 &lt;/p&gt;
&lt;p&gt;点 到 点 的距离&lt;br&gt;点 到 线段 的距离 &lt;/p&gt;
&lt;p&gt;角 的 平分线&lt;br&gt;三角形 的 外心，内心 &lt;/p&gt;
&lt;p&gt;凸多边形的最大内切圆 O(N log N) &lt;/p&gt;
&lt;p&gt;平面图的对偶图 &lt;/p&gt;
&lt;p&gt;圆凸包 &lt;/p&gt;
&lt;p&gt;kd-tree &lt;/p&gt;
&lt;p&gt;最小圆覆盖&lt;br&gt;欧几里得距离最小生成树&lt;/p&gt;
&lt;p&gt;最近点对&lt;br&gt;最小周长三角形 &lt;/p&gt;
&lt;p&gt;最远点对&lt;br&gt;最大面积三角形 &lt;/p&gt;
&lt;p&gt;Timus 1469 No Smoking!&lt;br&gt;Timus 1464 Light&lt;br&gt;四边形面积统计&lt;br&gt;TCO 2012 Round 3B PQHull &lt;/p&gt;
&lt;p&gt;三维几何 &lt;/p&gt;
&lt;p&gt;维护数组A，支持Q次操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add(a, b, v) for all a &amp;lt;= i &amp;lt;= b, A[i] += v &lt;/li&gt;
&lt;li&gt;query(a, b) 求#{i : a &amp;lt;= i &amp;lt;= b and A[i] &amp;gt; 0} &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Codeforces 15E Holes&lt;br&gt;维护有根树，支持Q次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parent[v] := p，保证p &amp;gt; v &lt;/li&gt;
&lt;li&gt;询问点v的深度&lt;br&gt;$n, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Codeforces 348C&lt;br&gt;$n$个元素，$m$个集合$S_1, S_2, …, S_m$，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把集合$S_i$的元素权值+= v &lt;/li&gt;
&lt;li&gt;询问集合$S_i$元素的权值和&lt;br&gt;$n, |S_1| + |S_2| + … + |S_m|, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chengdu 2012 Problem D / HDOJ 4467&lt;br&gt;$n$个点$m$条边的无向图，点有2种颜色，边有权值，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变点$v$的颜色 &lt;/li&gt;
&lt;li&gt;查询端点颜色是$(a, b)$的边权值之和&lt;br&gt;$n, m, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chengdu 2013 Problem G / HDOJ 4787&lt;br&gt;&lt;strong&gt; 在线 &lt;/strong&gt; 维护字符串集合$S$，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在$S$中插入$s$ &lt;/li&gt;
&lt;li&gt;查询$t$在$S$中的子串数&lt;br&gt;$s$总长$10^5$，$t$总长$5 * 10^6$&lt;br&gt;(2~3 solutions will be presented) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SPOJ UNTITLE1&lt;br&gt;维护数组$A$，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add(a, b, v) for all a &amp;lt;= i &amp;lt;= b, A[i] += v &lt;/li&gt;
&lt;li&gt;query(a, b) 求max{S[i] : a &amp;lt;= i &amp;lt;= b}，其中S[i] = A[1] + A[2] + … + A[i]&lt;br&gt;$|A|, q &amp;lt;= 50000$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BZOJ 2724&lt;br&gt;&lt;strong&gt;在线&lt;/strong&gt;查询区间众数。&lt;br&gt;(an elegant algorithm to count occurrence) &lt;/p&gt;
&lt;p&gt;BZOJ 2741&lt;br&gt;&lt;strong&gt;在线&lt;/strong&gt;查询区间最大连续异或和。 &lt;/p&gt;
&lt;p&gt;BZOJ 巧克力王国&lt;br&gt;查询半平面内点权的和。 &lt;/p&gt;
&lt;p&gt;Codechef March14 GERALD07&lt;br&gt;无向图，询问编号在$[L_i, R_i]$的边组成子图的连通块数量。 &lt;/p&gt;
&lt;p&gt;Codeforces 19E&lt;br&gt;无向图，询问有多少条边，删掉之后的图是二分图。 &lt;/p&gt;
&lt;p&gt;SPOJ COT2&lt;br&gt;查询树上路径不同颜色数量。&lt;br&gt;(2 solutions will be presented) &lt;/p&gt;
&lt;p&gt;SPOJ COT3 Combat on a tree&lt;br&gt;SPOJ RECTANGL Rectangles&lt;br&gt;POJ 3145 Harmony Forever&lt;/p&gt;
&lt;p&gt;POJ 1741 Tree&lt;/p&gt;
&lt;p&gt;统计树上距离不超过$k$的点对数量。 &lt;/p&gt;
&lt;p&gt;SPOJ FTOU2&lt;br&gt;点有黑白两色，边有长度，求黑点数量&amp;lt;= K的最长路径。 &lt;/p&gt;
&lt;p&gt;HDU 4812 / Nanjing 2013 K&lt;br&gt;点有权，求权值之积 mod (10^6 + 3) = K的路径数量。 &lt;/p&gt;
&lt;p&gt;TYVJ 1953&lt;br&gt;等概率地选择点作为剖分中心，求复杂度的期望。 &lt;/p&gt;
&lt;p&gt;WC 2010 重建计划&lt;br&gt;求长度在[L, R]之间的，平均数最大的路径。 &lt;/p&gt;
&lt;p&gt;Codeforces 150E&lt;br&gt;求长度在[L, R]之间的，中位数最大的路径。 &lt;/p&gt;
&lt;p&gt;Codeforces 193E&lt;br&gt;统计距离不超过L，权值之和不超过W的点对数量。 &lt;/p&gt;
&lt;p&gt;SPOJ QTREE4&lt;br&gt;点有黑白两色，支持(a)修改点的颜色；(b)询问白点对的最大距离。 &lt;/p&gt;
&lt;p&gt;Codeforces 342E&lt;br&gt;点有黑白两色，支持(a)把点变成黑色；(b)询问距离v点最近的黑点距离。 &lt;/p&gt;
&lt;p&gt;SPOJ QTREE5&lt;br&gt;点有黑白两色，支持(a)修改点的颜色；(b)询问距离v点最远的白点距离。&lt;br&gt;— &lt;/p&gt;
&lt;p&gt;SPOJ QTREE&lt;br&gt;边有权值，支持(a)修改边的权值；(b)询问路径上权值的最大值。 &lt;/p&gt;
&lt;p&gt;Codeforces 117E&lt;br&gt;章鱼图，支持(a)修改ab最短路上边的状态（存在、不存在互换）(b)询问连通块数量。 &lt;/p&gt;
&lt;p&gt;BZOJ 3083&lt;br&gt;点有权值，支持(a)修改路径上的权值；(b)修改根节点；(c)询问子树的最大值。&lt;br&gt;— &lt;/p&gt;
&lt;p&gt;BZOJ 2049 / SDOI 2008&lt;br&gt;支持(a)插入、删除边；(b)询问ab是否连通。保证中间结果是森林。&lt;br&gt;（LCT or ETT） &lt;/p&gt;
&lt;p&gt;SPOJ OTOCI&lt;br&gt;支持(a)插入边；(b)询问路径上的权值之和。强制在线。 &lt;/p&gt;
&lt;p&gt;Topcoder Open 2013 Round 2A ThePowers&lt;br&gt;给出A, B，问集合{a^b : 1 &amp;lt;= a &amp;lt;= A, 1 &amp;lt;= b &amp;lt;= B}的大小。&lt;br&gt;A, B &amp;lt;= 10^9 &lt;/p&gt;
&lt;p&gt;SGU 550 Tree Queries Online&lt;br&gt;在线维护一棵树，支持删除边，并把它的边权乘在较小的连通块，加在较大的连通块。 &lt;/p&gt;
&lt;p&gt;HDU 4621 Life Game&lt;br&gt;N * M的点阵，对于点(i, j)，将其指定为A类型有A(i, j)的收益，指定为B类型有B(i, j)的收益。R个要求，如果矩形(L_i, D_i) — (R_i, U_i)全是A（或全是B），则获得W_i的收益，问最大收益。&lt;br&gt;N, M &amp;lt;= 50, R &amp;lt;= 50000 &lt;/p&gt;
&lt;p&gt;HDU 4673 Pirate’s Chest&lt;br&gt;N个箱子，对于i号箱子，要么使用A_i号钥匙打开，要么使用B_i号撬棍打开，要么付出D_i点血打开。&lt;br&gt;M层的塔，每一层塔有入口，怪物，至多两个工具，且一定同类型，可以在任意地点上下楼。&lt;br&gt;你讨厌上楼梯，现在有H点血，问最少上到几层可以打开所有箱子，同时要求掉血最少。&lt;br&gt;N &amp;lt;= 30000, M &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;HDU 4679 Terrorist’s destroy&lt;br&gt;N个点的树，删除一条边，使得边权和剩下的树的直径乘积最小。&lt;br&gt;N &amp;lt;= 10^5 &lt;/p&gt;
&lt;p&gt;HDU 4689 Derangement&lt;br&gt;给出数列A_1, A_2, …, A_N，A_i in {+1, -1}，求满足(P_i - i) * A_i &amp;gt; 0的排列P数量。&lt;br&gt;N &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;Single Round Match 566 FencingPenguins&lt;br&gt;正N边型内有M个企鹅，选择一些顶点建立围栏，要求： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;围栏不能相交 &lt;/li&gt;
&lt;li&gt;每个围栏至少包含1个企鹅&lt;/li&gt;
&lt;li&gt;企鹅都被包围 &lt;/li&gt;
&lt;li&gt;同色企鹅在同一围栏&lt;br&gt;求方案数。&lt;br&gt;N &amp;lt;= 222, M &amp;lt;= 50 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Single Round Match 565 UnknownTree&lt;br&gt;N + 3个点的树，给出disA[i], disB[i], disC[i]表示1 &amp;lt;= i &amp;lt;= N号点到A, B, C的距离，求可能的树的方案数。&lt;br&gt;N &amp;lt;= 50 &lt;/p&gt;
&lt;p&gt;Single Round Match 561 Orienteering&lt;br&gt;N个点的树，随机选择K个点，问遍历K个点最短路径的期望。&lt;br&gt;K &amp;lt;= N &amp;lt;= 300 &lt;/p&gt;
&lt;p&gt;SCOI 2013 数数&lt;br&gt;求[L, R]的数字B进制表示的所有子串的和。&lt;br&gt;1 &amp;lt;= L &amp;lt;= R &amp;lt; B^100000, B &amp;lt;= 10^5 &lt;/p&gt;
&lt;p&gt;SCOI 2012 Blinker的仰慕者 &lt;a href=&quot;http://www.lydsy.com/JudgeOnline/problem.php?id=2757&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.lydsy.com/JudgeOnline/problem.php?id=2757&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Codeforces 273D Dima and Figure&lt;br&gt;N * M的点阵，问凸的点集的数量，mod (10^9 + 7)。&lt;br&gt;(N, M &amp;lt;= 150) &lt;/p&gt;
&lt;p&gt;Codeforces 375E Red and Black Tree&lt;br&gt;N个点的树。点有黑、白2种颜色。任意交换点的颜色，使得对于任一个点，距离它D以内都至少有一个黑点，求最少的交换次数。&lt;br&gt;N &amp;lt;= 500 &lt;/p&gt;
&lt;p&gt;Codeforces 392E Deleting Substrings&lt;br&gt;序列{A_1, A_2, …, A_N}。每次删除连续的子序列{x_1, x_2, …, x_k}，要求 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;|x_{i + 1} - x_i| = 1， &lt;/li&gt;
&lt;li&gt;2 x&lt;em&gt;i &amp;gt;= x&lt;/em&gt;{i - 1} + x_{i + 1}，&lt;br&gt;收益W_k，求删除整个序列的最大收益。&lt;br&gt;N &amp;lt;= 400 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NEERC Eastern Subregional Contest 2013 Problem C CVS&lt;br&gt;支持Q次操作： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;learn(i, j) &lt;/li&gt;
&lt;li&gt;rollback(i) &lt;/li&gt;
&lt;li&gt;relearn(i) &lt;/li&gt;
&lt;li&gt;clone(i) &lt;/li&gt;
&lt;li&gt;check(i)&lt;br&gt;Q &amp;lt;= 10^5 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;NEERC Northern Subregional Contest 2013 Problem L Lonely Mountain&lt;/p&gt;
&lt;p&gt;JAG Summer 2012 Problem G Presentation&lt;/p&gt;
&lt;p&gt;N &amp;lt;= 10^5 &lt;/p&gt;
&lt;p&gt;Single Round Match 570 CurvyonRails&lt;/p&gt;
&lt;p&gt;unhappy = 1, 0 &lt;/p&gt;
&lt;p&gt;M * M棋盘上有N个有缺陷的皇后（只能攻击主对角线），求被至少1个皇后攻击的格子数量。&lt;br&gt;N, M &amp;lt;= 10^5 &lt;/p&gt;
&lt;p&gt;给出串P, T，求T的连续子串S，使得hamming(S, P)最小。&lt;br&gt;|P|, |T| &amp;lt;= 10^5，|Sigma| &amp;lt;= 10 &lt;/p&gt;
&lt;p&gt;给出串P, T（可能带有通配符?），求P在T中所有匹配位置。&lt;br&gt;|P|, |T| &amp;lt;= 10^5 &lt;/p&gt;
&lt;p&gt;胡渊鸣 城市规划&lt;br&gt;计算N个点带标号的连通图数量，答案模1004535809(= 479 * 2^21 + 1)。&lt;br&gt;N &amp;lt;= 130000&lt;br&gt;O(N log^2 N) &lt;/p&gt;
&lt;p&gt;给出A_1, A_2, …, A&lt;em&gt;N，求min&lt;/em&gt;{i, j} popcount(A_i xor A_j)。&lt;br&gt;A_i &amp;lt;= 10^6 &lt;/p&gt;
&lt;p&gt;(FWT)&lt;br&gt;Topcoder Open 2012 Round 2A EvenPaths&lt;br&gt;N个点的有向无环图，K个点可能有障碍。&lt;br&gt;合法当且仅当点0到点1恰有偶数条路径。&lt;br&gt;求2^K种可能中合法的图的数量。&lt;br&gt;N &amp;lt;= 50, K &amp;lt;= 32 &lt;/p&gt;
&lt;p&gt;HDOJ 4656 Evaluation&lt;br&gt;给出A_0, A&lt;em&gt;1, …, A&lt;/em&gt;{N - 1}, 求f(B * C^{2k} + D)，答案模(10^6 + 3)，其中f(x) = sum_i A_i x^i。&lt;br&gt;N &amp;lt;= 10^5, A_i, B, C, D &amp;lt;= 10^6&lt;/p&gt;
&lt;p&gt;Number theory &lt;/p&gt;
&lt;p&gt;求x^2 = 1 (mod M)的所有解。&lt;br&gt;求x^K = x (mod M)的解的数量。&lt;br&gt;求P / Q在B进制下的循环节。 &lt;/p&gt;
&lt;p&gt;SPOJ MOD Power Modulo Inverted&lt;br&gt;给出A, B, M，求最小的x &amp;gt;= 0，使得A^x = B (mod M)。&lt;br&gt;A, B, M &amp;lt;= 10^9 &lt;/p&gt;
&lt;p&gt;Petrozavodsk Summer 2011 Kyiv + Kharkiv NU Contest Problem A A Lot&lt;br&gt;给出P，Q组询问(A, B)，求最小x &amp;gt;= 0满足A^x = B (mod P)。&lt;br&gt;P &amp;lt;= 10^8, Q &amp;lt;= 10^4 &lt;/p&gt;
&lt;p&gt;求A x^2 + B x + C = 0 (mod P)的解。 &lt;/p&gt;
&lt;p&gt;Project Euler 457 A polynomial modulo the square of a prime&lt;br&gt;设f(p)表示最小的n满足n^2 - 3n - 1 = 0(mod p^2)，求sum_{p is prime, p &amp;lt;= N} f(p)。&lt;br&gt;N &amp;lt;= 10^7 &lt;/p&gt;
&lt;p&gt;Codeforces 193E Fibonacci Number&lt;br&gt;给出F，求最小的n，使得fib(n) = F (mod 10^13)。&lt;br&gt;F &amp;lt; 10^13 &lt;/p&gt;
&lt;p&gt;Petrozavodsk Winter 2008 Warsaw Contest Problem J Sum of a subsequence&lt;br&gt;给出A_1, A&lt;em&gt;2, …, A&lt;/em&gt;{2N}，求它的N元子集，满足元素和是N的倍数。&lt;br&gt;N = 10^k，k &amp;lt;= 5&lt;/p&gt;
&lt;p&gt;Codeforces 62E World Evil&lt;br&gt;n * m的点阵，如下图，求左边到右边的最大流。&lt;br&gt;n &amp;lt;= 5, m &amp;lt;= 10^5 &lt;/p&gt;
&lt;p&gt;Single Round Match 608 BigO&lt;br&gt;N个点的有向图，假设在上面走x步的方案数是O(x^K)的，求K的最小值。&lt;br&gt;N &amp;lt;= 50 &lt;/p&gt;
&lt;p&gt;Single Round Match 607 CombinationLockDiv1&lt;br&gt;给出两个10进制串A, B，每次可以选择一段数字rotate，求把A变成B的最小操作次数。&lt;br&gt;|A|, |B| &amp;lt;= 50 &lt;/p&gt;
&lt;p&gt;Single Round Match 592 LittleElephantAndPermutationDiv1&lt;br&gt;设a_1, a_2, …, a_N和b_1, b_2, …, b_N是两个1, 2, …, N的排列，&lt;br&gt;问max{a_1, b_1} + max{a_2, b_2} + … + max{a_N, b_N} &amp;gt;= K的排列数量。&lt;br&gt;N &amp;lt;= 50, K &amp;lt;= 2500 &lt;/p&gt;
&lt;p&gt;Single Round Match 588 KeyDungeonDiv1&lt;br&gt;N个房间，每个房间需要doorRed[i]把红钥匙，doorGreen[i]把绿钥匙，房间里面有roomRed[i], roomGreen[i], roomWhite[i]把红、绿、白钥匙。白钥匙可以作为红、蓝钥匙使用。初始有keys[]把三种钥匙，打开一些房间，问手上最多的钥匙数。&lt;br&gt;N &amp;lt;= 12, 钥匙数 &amp;lt;= 10 &lt;/p&gt;
&lt;p&gt;Single Round Match 582 ColorfulBuilding&lt;br&gt;N个矩形，第i个矩形的高度是i，颜色是color[i]，问所有排列中从左到右能看到K次颜色变化的数量。&lt;br&gt;K &amp;lt;= N &amp;lt;= 36 * 36  &lt;/p&gt;
&lt;p&gt;Codeforces 258D Little Elephant and Broken Sorting&lt;br&gt;N个数，M次交换操作，每次交换操作有1/2概率进行，问最终序列逆序对的期望。&lt;br&gt;N, M &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;Single Round Match 577 EllysChessboard&lt;br&gt;8 * 8的棋盘上，在指定位置放棋子，放棋子的代价是到曼哈顿距离最远的棋子距离，问最小的总代价。 &lt;/p&gt;
&lt;p&gt;Topcoder Open 2012 Round 3B ElevenMultiples&lt;br&gt;N个10进制数字片段P_1, P_2, …, P_n，问有多少种方法使得连接之后是11的倍数。&lt;br&gt;N &amp;lt;= 50 &lt;/p&gt;
&lt;p&gt;Single Round Match 601 WinterAndShopping&lt;br&gt;N个商店卖球。第i个商店在第first[i]天开业，有red[i]个红球，green[i]个绿球，blue[i]个蓝球。商店每天卖1个球，所有商店卖的球颜色相同。同时营业的商店不超过2个。求方案数。&lt;br&gt;N &amp;lt;= 50，red[i], green[i], blue[i] &amp;lt;= 100，first[i] + red[i] + green[i] + blue[i] &amp;lt;= 500 &lt;/p&gt;
&lt;p&gt;Single Round Match 594 FoxAndAvatar&lt;br&gt;1, 2, …, N以行为主序排列在宽度是W的矩阵上。每次可以删除一个子矩形中的所有数字，并重新排列剩余数字。问最后留下数字X的最小操作次数。&lt;br&gt;W &amp;lt;= N &amp;lt;= 3000 &lt;/p&gt;
&lt;p&gt;Single Round Match 593 WolfDelaymasterHard&lt;br&gt;定义形如0^n1^n的串是好的，好串的连接是好的。长度为N的字符串，包含0、1、？三种字符，替换？为0、1，使得形成的串是好的。求方案数。&lt;br&gt;N &amp;lt;= 2 * 10^6 &lt;/p&gt;
&lt;p&gt;Single Round Match 591 StringPath&lt;br&gt;给出字符串A, B，问有多少N * M的字符矩形，使得存在两条(1, 1)到(N, M)的路径上面的字符串恰好是A, B。&lt;br&gt;N, M &amp;lt;= 8 &lt;/p&gt;
&lt;p&gt;Single Round Match 589 FlippingBitsDiv1&lt;br&gt;给出长度为n的01串和常数M，通过下面两种操作使得长度为N - M的前后缀相等： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;翻转某位 &lt;/li&gt;
&lt;li&gt;翻转长度k * M的前缀(k &amp;gt;= 1)&lt;br&gt;求最少的操作次数。&lt;br&gt;N &amp;lt;= 300 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Single Round Match 583 RandomPaintingOnABoard&lt;br&gt;N &lt;em&gt; M的矩阵P，每次以P[i][j] / sum{P[i][j]}的概率选择格子(i, j)，问每行每列都被选择至少一次所需要的步数期望。&lt;br&gt;N, M &amp;lt;= 21, N &lt;/em&gt; M &amp;lt;= 50, P[i][j] &amp;lt; 10 &lt;/p&gt;
&lt;p&gt;Topcoder Open 2013 Round 3A TrickyInequality&lt;br&gt;M个整数变量x_1, x_2, …, x_M满足： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;x_1, x_2, …, x_M &amp;gt;= 1 &lt;/li&gt;
&lt;li&gt;x_1 + x_2 + … + x_M &amp;lt;= S &lt;/li&gt;
&lt;li&gt;x_1, x_2, …, x_N &amp;lt;= T&lt;br&gt;求方案数模(10^9 + 7)。&lt;br&gt;M &amp;lt;= 10^9, M - N &amp;lt;= 100, T &amp;lt;= 10^5, N * T &amp;lt;= S &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Single Round Match 578 DeerInZooDivOne&lt;br&gt;n个点的树，求两颗不相交的子树，它们同构同时大小最大。&lt;br&gt;n &amp;lt;= 50 &lt;/p&gt;
&lt;p&gt;Single Round Match 573 WolfPack&lt;br&gt;求从(X_1, Y_1)移动M步到(X_2, Y_2)的方案数，每次移动可以往上下左右移动一格。&lt;br&gt;M &amp;lt;= 100000 &lt;/p&gt;
&lt;p&gt;Single Round Match 569 MegaFactorial&lt;br&gt;定义f(n, k)满足： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;f(n, k) = f(n - 1, k) * f(n, k - 1) &lt;/li&gt;
&lt;li&gt;f(0, k) = 1 &lt;/li&gt;
&lt;li&gt;f(n, 0) = n&lt;br&gt;求f(N, K)在B进制下末尾0的数量。结果模(10^9 + 7)。&lt;br&gt;N &amp;lt;= 10^9, K &amp;lt;= 16, B &amp;lt;= 10 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Single Round Match 566 FencingPenguins&lt;br&gt;正N边型内有M个企鹅，选择一些顶点建立围栏，要求： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;围栏不能相交 &lt;/li&gt;
&lt;li&gt;每个围栏至少包含1个企鹅&lt;/li&gt;
&lt;li&gt;企鹅都被包围 &lt;/li&gt;
&lt;li&gt;同色企鹅在同一围栏&lt;br&gt;求方案数。&lt;br&gt;N &amp;lt;= 222, M &amp;lt;= 50 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Single Round Match 562 InducedSubgraphs&lt;br&gt;N个点的树，问有多少种标号方式，使得对所有1 &amp;lt;= i &amp;lt;= N - K + 1，点集{i, i + 1, …, i + K- 1}是连通的。&lt;br&gt;N &amp;lt;= 40 &lt;/p&gt;
&lt;p&gt;Single Round Match 560 BoundedOptimization&lt;br&gt;N个变量x_i，满足L_i &amp;lt;= x_i &amp;lt;= R_i，且X_1 + X_2 + … + X_n &amp;lt;= S，求一个特殊二次式的最大值（无平方项，无一次项，系数都是1）。&lt;br&gt;N &amp;lt;= 13 &lt;/p&gt;
&lt;p&gt;Single Round Match 550 ConversionMachine&lt;br&gt;给出只包含abc 3种字符的串A和串B，把a -&amp;gt; b的花费是cost[0]，b -&amp;gt; c是cost[1]，c -&amp;gt; a是cost[2]，问在总费用不超过M的情况下，有多少方式能让A变换到B。&lt;br&gt;|A|, |B| &amp;lt;= 11 &lt;/p&gt;
&lt;p&gt;POJ 2793 / NEERC 2005&lt;br&gt;求仙人掌的生成仙人掌数量。 &lt;/p&gt;
&lt;p&gt;IOI 2008 Islands&lt;br&gt;求章鱼图的直径。 &lt;/p&gt;
&lt;p&gt;POJ 3567 / NEERC 2007&lt;br&gt;求仙人掌图的直径。 &lt;/p&gt;
&lt;p&gt;POJ 3961 / NEERC 2010&lt;br&gt;把仙人掌图分成N / K个连通块，每个连通块大小恰好是K。 &lt;/p&gt;
&lt;p&gt;Codeforces 379G&lt;br&gt;仙人掌，可以把涂成黑白两色（可以不涂），相邻的点不能有相同的颜色。对于所有的1 &amp;lt;= a &amp;lt;= n，求最多能放的白点数量。  &lt;/p&gt;
&lt;p&gt;Fast Fourier Transformation and related topics&lt;/p&gt;
&lt;p&gt;Division of polynomials&lt;br&gt;胡渊鸣 城市规划&lt;br&gt;计算N个点带标号的连通图数量，答案模1004535809(= 479 * 2^21 + 1)。&lt;br&gt;N &amp;lt;= 130000 &lt;/p&gt;
&lt;p&gt;Project Euler 416 A frog’s trip&lt;br&gt;N个格子，一只青蛙1 -&amp;gt; N -&amp;gt; 1，重复M次。&lt;br&gt;青蛙每次只能跳跃1、2、3个格子，问至多只有1个格子没被访问过的路径数量。&lt;br&gt;N &amp;lt;= 10^12, M &amp;lt;= 10 &lt;/p&gt;
&lt;p&gt;Number theoretical transformation&lt;br&gt;伍一鸣 Binomial&lt;br&gt;给出N, P，计算C(r) = # of k where 0 &amp;lt;= k &amp;lt; N and binom(N, k) = r (mod P)，答案模29。&lt;br&gt;P = 51061, N &amp;lt; P^10 &lt;/p&gt;
&lt;p&gt;SRM 518 Nim&lt;br&gt;统计满足以下条件的(x_1, x_2, …, x_K)的数量： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;x_i是质数 &lt;/li&gt;
&lt;li&gt;x_i &amp;lt;= L &lt;/li&gt;
&lt;li&gt;x_1 xor x_2 xor … xor x_K = 0&lt;br&gt;K &amp;lt;= 10^9, L &amp;lt;= 5 * 10^4 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Single Round Match 601 WinterAndShopping&lt;br&gt;N个商店卖球。第i个商店在第first[i]天开业，有red[i]个红球，green[i]个绿球，blue[i]个蓝球。商店每天卖1个球，所有商店卖的球颜色相同。同时营业的商店不超过2个。求方案数。&lt;br&gt;N &amp;lt;= 50，red[i], green[i], blue[i] &amp;lt;= 100，first[i] + red[i] + green[i] + blue[i] &amp;lt;= 500 &lt;/p&gt;
&lt;p&gt;Single Round Match 594 FoxAndAvatar&lt;br&gt;1, 2, …, N以行为主序排列在宽度是W的矩阵上。每次可以删除一个子矩形中的所有数字，并重新排列剩余数字。问最后留下数字X的最小操作次数。&lt;br&gt;W &amp;lt;= N &amp;lt;= 3000 &lt;/p&gt;
&lt;p&gt;Topcoder Open 2012 Round 2B SequenceTransmission&lt;br&gt;将A + B, A &lt;em&gt; 2 + B, …, A &lt;/em&gt; N + B的二进制表示连接，问相邻两位不同的数量。&lt;br&gt;A &amp;lt;= 40000，B &amp;lt;= 10^18, N &amp;lt;= 10^12 &lt;/p&gt;
&lt;p&gt;Project Euler 439 Sum of sum of divisors&lt;br&gt;设d(n)表示n的约数和，给出N，求sum&lt;em&gt;{1 &amp;lt;= i &amp;lt;= N} sum&lt;/em&gt;{1 &amp;lt;= j &amp;lt;= N} d(i * j)。&lt;br&gt;N &amp;lt;= 10^11 &lt;/p&gt;
&lt;p&gt;Mobius inversion&lt;/p&gt;
&lt;p&gt;SPOJ LCMSUM&lt;br&gt;给出N，求lcm(N, 1) + lcm(N, 2) + … + lcm(N, 3)。&lt;br&gt;N &amp;lt;= 1000000, 300000组数据 &lt;/p&gt;
&lt;p&gt;贾志鹏 Crash的数字表格&lt;br&gt;给出N, M, 求sun&lt;em&gt;{1 &amp;lt;= i &amp;lt;= N} sum&lt;/em&gt;{1 &amp;lt;= j &amp;lt;= M} lcm(i, j)，答案模20101009。&lt;br&gt;N, M &amp;lt;= 10^7 &lt;/p&gt;
&lt;p&gt;顾昱洲 JZPKIL&lt;br&gt;给出N, A, B，求sum_{1 &amp;lt;= i &amp;lt;= N} gcd(N, i)^A lcm(N, i)^B$，答案模(10^9 + 7)。&lt;br&gt;N &amp;lt;= 10^9, A, B &amp;lt;= 3000 &lt;/p&gt;
&lt;p&gt;**Power sums&lt;/p&gt;
&lt;p&gt;POI X Trinomial&lt;br&gt;求(1 + x + x^2)^N展开式中x^K的系数，答案模3。 &lt;/p&gt;
&lt;p&gt;SRM 536 BinaryPolynomialDivOne&lt;br&gt;求多项式P(x)^M中x^K的系数，答案模2。&lt;br&gt;deg P &amp;lt; 50, M &amp;lt;= 10^18 &lt;/p&gt;
&lt;p&gt;TCO 2013 3A TrickyInequality&lt;br&gt;M个整数变量x_1, x_2, …, x_M满足： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;x_1, x_2, …, x_M &amp;gt;= 1 &lt;/li&gt;
&lt;li&gt;x_1 + x_2 + … + x_M &amp;lt;= S &lt;/li&gt;
&lt;li&gt;x_1, x_2, …, x_N &amp;lt;= T&lt;br&gt;求方案数模(10^9 + 7)。&lt;br&gt;M &amp;lt;= 10^9, M - N &amp;lt;= 100, T &amp;lt;= 10^5, N * T &amp;lt;= S &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;HDOJ 4658 Partition&lt;br&gt;求N的拆分数，要求相同的数出现次数小于K。&lt;br&gt;N, K &amp;lt;= 10^5，10^5组数据 &lt;/p&gt;
&lt;p&gt;Topcoder Open 2012 Round 3A CowsMooing&lt;br&gt;N头牛，第i头牛按照pattern_i moo，求count[i]表示50!内恰好有i头牛moo的时间，答案模$10^9+7$。&lt;br&gt;N &amp;lt;= 30, |pattern_i| &amp;lt;= 50 &lt;/p&gt;
&lt;p&gt;BOI 2010 Candy&lt;br&gt;定义distinct({a_1, a_2, …, a_n}) = # of {sum_i a_i x_i : x_i in {0, 1}}.&lt;br&gt;给出a_1, a_2, …, a_n，求distinct({a_1, a_2, …, a_n} \ {a_i} + {x})的最大值，和(i, x)字典序最小的解。&lt;br&gt;n &amp;lt;= 100&lt;br&gt;1 &amp;lt;= a_i &amp;lt;= 7000 &lt;/p&gt;
&lt;p&gt;SRM 478 RandomApple&lt;br&gt;n个盒子，m种苹果，第i个盒子里第j种苹果的数量是A(i, j)。&lt;br&gt;等概率地选择盒子的子集，等概率地选择前一步选中的苹果，求prob(1), prob(2), …, prob(m)。其中prob(i)表示选中第i种苹果的概率。&lt;br&gt;n, m &amp;lt;= 50, 0 &amp;lt;= A(i, j) &amp;lt; 200&lt;/p&gt;
&lt;p&gt;SPOJ LIS2&lt;br&gt;给出(x_1, y_1), (x_2, y_2), …, (x_n, y_n)，求i_1 &amp;lt; i_2 &amp;lt; … &amp;lt; i&lt;em&gt;k，满足&lt;br&gt;x&lt;/em&gt;{i&lt;em&gt;1} &amp;lt; x&lt;/em&gt;{i&lt;em&gt;2} &amp;lt; … &amp;lt; x&lt;/em&gt;{i&lt;em&gt;k}&lt;br&gt;y&lt;/em&gt;{i&lt;em&gt;1} &amp;lt; y&lt;/em&gt;{i&lt;em&gt;2} &amp;lt; … &amp;lt; y&lt;/em&gt;{i_k}，求k的最大值。&lt;br&gt;n &amp;lt;= 10^5 &lt;/p&gt;
&lt;p&gt;SRM 610 MiningGoldHard&lt;br&gt;给出(x_1, y_1), (x_2, y_2), …, (x_n, y_n), {a_1, a&lt;em&gt;2, …, a&lt;/em&gt;{n - 1}), (b_1, b&lt;em&gt;2, …, b&lt;/em&gt;{n - 1})，&lt;br&gt;求(x’_1, y’_1), (x_2’, y_2’), …, (x’_n, y’_n)满足：&lt;br&gt;¥    0 &amp;lt;= x’_i &amp;lt; A, 0 &amp;lt;= y’_i &amp;lt; B&lt;/p&gt;
&lt;p&gt;¥    |x’_{i + 1} - x’_i| &amp;lt;= a&lt;em&gt;i, |y’&lt;/em&gt;{i + 1} - y’_i| &amp;lt;= b_i&lt;/p&gt;
&lt;p&gt;求sum_i |x_i - x’_i| + |y_i - y’_i|的最小值。&lt;br&gt;n &amp;lt;= 1000&lt;br&gt;A, B &amp;lt;= 10^6 &lt;/p&gt;
&lt;p&gt;IOI 2004 Hermes&lt;br&gt;按顺序访问(x_1, y_1), (x_2, y_2), …, (x_n, y_n)，只要横或者纵坐标相当即算访问，问曼哈顿距离的最小值。&lt;br&gt;n &amp;lt;= 2000, |x_i|, |y_i| &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;IOI 2002 Batch Scheduling&lt;br&gt;n个任务顺序执行，第i个任务所需时间time[i]，权重是weight[i]。&lt;br&gt;任务分批进行，每批任务所需时间是sum time[i] + T。&lt;br&gt;在t时刻完成任务i的代价是t * weight[i]，求总代价的最小值。&lt;br&gt;n &amp;lt;= 10000 &lt;/p&gt;
&lt;p&gt;POI XIII Frogs (Simplified)&lt;br&gt;n * m的棋盘，k个障碍，对于每个点，求其欧几里得距离最近的障碍。&lt;br&gt;n, m &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;World Finals 2011 Machine Works&lt;br&gt;m天，初始有c元。n个机器可以购买，对于第i个机器，只有在第day[i]天可以购买，买入的价格是buy[i]，卖出的价格是sell[i]，每天的利润是profit[i]。&lt;br&gt;开始、结束都没有机器，同时最多拥有1个机器，求最大的利润。&lt;br&gt;n &amp;lt;= 100000 &lt;/p&gt;
&lt;p&gt;PA 2011 Drilling&lt;br&gt;给出c_1, c_2, …, c&lt;em&gt;n，求f(1, n)。&lt;br&gt;其中f(i, j) = min&lt;/em&gt;{i &amp;lt; k &amp;lt; j} {max{f(i, k), f(k, j)} + c[k]}。&lt;br&gt;n &amp;lt;= 2000 &lt;/p&gt;
&lt;p&gt;Codeforces 321E&lt;br&gt;n个人顺序分成k组，使同组人之间的关系之和最大。&lt;br&gt;n &amp;lt;= 4000,  k &amp;lt;= 800 &lt;/p&gt;
&lt;p&gt;SRM 478 KiwiJuice&lt;br&gt;n个杯子，容量是c，初始的水量是c_1, c_2, …, c_n。可以互相倒水，每次只能在空或满时停止。卖掉一个水量是x的杯子获得value[x]元，问最多获得的钱数。&lt;br&gt;n &amp;lt;= 15 &lt;/p&gt;
&lt;p&gt;SPOJ TLE&lt;br&gt;给出c_1, c_2, …, c_n，求x_1, x_2, …, x_n的方案数，满足：&lt;br&gt;¥    0 &amp;lt;= x_i &amp;lt; 2^m&lt;/p&gt;
&lt;p&gt;¥    x_i mod c_i != 0&lt;/p&gt;
&lt;p&gt;¥    a_{i + 1} &amp;amp; a_i = 0&lt;/p&gt;
&lt;p&gt;n &amp;lt;= 50, m &amp;lt;= 15 &lt;/p&gt;
&lt;p&gt;SGU 327 Yet Another Palindrome&lt;br&gt;n个字符串s_1, s_2, …, s_n，找包含它们作为子串的最短回文串。&lt;br&gt;n &amp;lt;= 14, |s_i| &amp;lt;= 30 &lt;/p&gt;
&lt;p&gt;Codeforces 86C Genetic engineering&lt;br&gt;m个模板串s_1, s_2, …, s_m，求长度为n的序列，使得能被完全覆盖。&lt;br&gt;m &amp;lt;= 10, |s_i| &amp;lt;= 10, n &amp;lt;= 1000, s_i in {A, C, T, G}^+ &lt;/p&gt;
&lt;p&gt;Codeforces 55D Beautiful numbers&lt;br&gt;求[L, R]中能被非零数位整除的数。&lt;br&gt;L, R &amp;lt;= 9 * 10^18 &lt;/p&gt;
&lt;p&gt;SGU 258 Almost Lucky Numbers&lt;br&gt;数x是幸运的，当且仅当它的前、后半的数位和相等。数x几乎是幸运的，当且仅当至多修改1位之后是幸运的。&lt;br&gt;求[L, R]中几乎幸运的数。&lt;br&gt;L, R &amp;lt;= 10^9 &lt;/p&gt;
&lt;p&gt;SGU 390 Tickets&lt;br&gt;依次考虑[L, R]的数，每次把x的数位和加进计数器counter，如果counter &amp;gt;= K则counter清零，问counter清零的次数。&lt;br&gt;L, R &amp;lt;= 10^18, K &amp;lt;= 1000 &lt;/p&gt;
&lt;p&gt;SPOJ ININT&lt;br&gt;对于数字x，每次可以将它加上它的一位。求1变到n的最小次数，并求方案数。&lt;br&gt;n &amp;lt;= 10^9 &lt;/p&gt;
&lt;p&gt;POI XVII Crystals&lt;br&gt;给出a_1, a_2, …, a_n，求x_1, x_2, …, x_n的数量满足：&lt;br&gt;¥    0 &amp;lt;= x_i &amp;lt; a_i&lt;br&gt;¥    a_1 xor a_2 xor … xor a_n = 0&lt;br&gt;¥    n &amp;lt;= 50, 0 &amp;lt; a_i &amp;lt; 2^32 &lt;/p&gt;
&lt;p&gt;SGU 542 Gena vs Petya&lt;br&gt;给出a_1, a_2, …, a_n，求x的数量满足(a_1 - x) xor (a_2 - x) xor … xor (a_n - x) = 0。&lt;br&gt;n &amp;lt;= 2 * 10^5, a_i &amp;lt;= 10^18 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://main.edu.pl/en/archive/oi/13/tan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://main.edu.pl/en/archive/oi/13/tan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Project Euler 355 Maximal coprime subset&lt;br&gt;给出N，在{1, 2, …, N}中挑选一个两两互素的子集，使得元素的总和最大。&lt;br&gt;N &amp;lt;= 200000 &lt;/p&gt;
&lt;p&gt;计算sum_{0 &amp;lt;= i &amp;lt; n} [(a i + b) / c]。&lt;/p&gt;
&lt;p&gt;Project Euler 452 Long Products&lt;br&gt;统计x_1 &lt;em&gt; x_2 &lt;/em&gt; … * x_N &amp;lt;= M，答案模1234567891。&lt;br&gt;N, M &amp;lt;= 10^9 &lt;/p&gt;
&lt;p&gt;Winter Camp 2012 糖果公园 &lt;/p&gt;
&lt;p&gt;SGU 529 It’s Time to Repair the Roads&lt;br&gt;无向图，修改边权，询问最小生成树。&lt;/p&gt;
&lt;p&gt;BOI 2010 Candy&lt;br&gt;定义distinct({a_1, a_2, …, a_n}) = # of {sum_i a_i x_i : x_i in {0, 1}}.&lt;br&gt;给出a_1, a_2, …, a_n，求distinct({a_1, a_2, …, a_n} \ {a_i} + {x})的最大值，和(i, x)字典序最小的解。&lt;br&gt;n &amp;lt;= 100&lt;br&gt;1 &amp;lt;= a_i &amp;lt;= 7000 &lt;/p&gt;
&lt;p&gt;Tsinsen 1321 Attack (Chao Li)&lt;br&gt;2维平面上$n$个点，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改点权&lt;/li&gt;
&lt;li&gt;询问平行于坐标轴的矩形区域内点权第$k$小的值&lt;br&gt;$n &amp;lt;= 60000, q &amp;lt;= 10000$  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$k$-th number with insertion&lt;/p&gt;
&lt;p&gt;PA 2011 Kangaroos&lt;br&gt;给出${(A_1, B_1), (A_2, B_2), …, (A_n, B_n)}$，$q$次询问$[l, r]$，询问满足$l &amp;lt;= A_i &amp;lt;= B_i &amp;lt;= r$的最长连续i数量。&lt;br&gt;$n &amp;lt;= 50000, m &amp;lt;= 200000$  &lt;/p&gt;
&lt;p&gt;CTSC 2010 jewelry&lt;br&gt;树，点上有字符，定义$ps(x, y)$表示点$x$到点$y$唯一路径上字母的连接，$count(p, t)$表示串$p$在$t$中的出现次数。给定$T$，求$sum_{x, y} count(ps(x, y), T)$ &lt;/p&gt;
&lt;p&gt;Knapsack [Unpublished problem]&lt;br&gt;$n$个数$A_1, A_2, …, A_n$，对于所有$s$，求和恰好是$s$的子集个数。&lt;br&gt;($n, A_1 + A_2 + … + A_n &amp;lt;= 10^5$) &lt;/p&gt;
&lt;p&gt;Codeforces 235E Number Challenge&lt;br&gt;设sigma(n)表示n的约数个数，给出A, B, C，求sum_{1 &amp;lt;= i &amp;lt;= A, 1 &amp;lt;= j &amp;lt;= B, 1 &amp;lt;= k &amp;lt;= C} d(i &lt;em&gt; j &lt;/em&gt; k)。&lt;br&gt;A, B, C &amp;lt;= 2000 &lt;/p&gt;
&lt;p&gt;SGU 542 Gena vs Petya&lt;br&gt;给出A_1, A_2, …, A_N，求满足0 &amp;lt;= x &amp;lt;= min{A_1, A_2, …, A_N}且(A_1 - x) xor (A_2 - x) xor … xor (A_N - x) = 0的x数量。&lt;br&gt;N &amp;lt;= 10^5, A_i &amp;lt;= 10^18 &lt;/p&gt;
&lt;p&gt;HDU 4626 Jinkeloid&lt;br&gt;字符串|S|，Q个询问T = {T(i, 1), T(i, 2), …, T(i, C_i)}，有多少子串T中字符出现了偶数次。&lt;br&gt;|S| &amp;lt;= 10^5, Q &amp;lt;= 10^5，|Sigma| &amp;lt;= 20, C_i &amp;lt;= 5 &lt;/p&gt;
&lt;p&gt;Single Round Match 593 WolfDelaymasterHard&lt;br&gt;定义形如0^n1^n的串是好的，好串的连接是好的。长度为N的字符串，包含0、1、？三种字符，替换？为0、1，使得形成的串是好的。求方案数。&lt;br&gt;N &amp;lt;= 2 * 10^6 &lt;/p&gt;
&lt;p&gt;Single Round Match 573 WolfPack&lt;br&gt;求从(X_1, Y_1)移动M步到(X_2, Y_2)的方案数，每次移动可以往上下左右移动一格。&lt;br&gt;M &amp;lt;= 100000 &lt;/p&gt;
&lt;p&gt;Single Round Match 569 MegaFactorial&lt;br&gt;定义f(n, k)满足： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;f(n, k) = f(n - 1, k) * f(n, k - 1) &lt;/li&gt;
&lt;li&gt;f(0, k) = 1 &lt;/li&gt;
&lt;li&gt;f(n, 0) = n&lt;br&gt;求f(N, K)在B进制下末尾0的数量。结果模(10^9 + 7)。&lt;br&gt;N &amp;lt;= 10^9, K &amp;lt;= 16, B &amp;lt;= 10 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Single Round Match 562 InducedSubgraphs&lt;br&gt;N个点的树，问有多少种标号方式，使得对所有1 &amp;lt;= i &amp;lt;= N - K + 1，点集{i, i + 1, …, i + K- 1}是连通的。&lt;br&gt;N &amp;lt;= 40 &lt;/p&gt;
&lt;p&gt;Single Round Match 550 ConversionMachine&lt;br&gt;给出只包含abc 3种字符的串A和串B，把a -&amp;gt; b的花费是cost[0]，b -&amp;gt; c是cost[1]，c -&amp;gt; a是cost[2]，问在总费用不超过M的情况下，有多少方式能让A变换到B。&lt;br&gt;|A|, |B| &amp;lt;= 11 &lt;/p&gt;
&lt;p&gt;Single Round Match 596 BitwiseAnd&lt;br&gt;集合S是好的，当且仅当： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任意x, y in S, x &amp;amp; y &amp;gt; 0 &lt;/li&gt;
&lt;li&gt;任意x, y, z in S, x &amp;amp; y &amp;amp; z = 0&lt;br&gt;给出T，求T \subset S \subset [2^60 - 1]，使得S是好的，而且字典序最小。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Single Round Match 596 SparseFactorial&lt;br&gt;定义sparse factorial f(n) = n &lt;em&gt; (n - 1^2) &lt;/em&gt; (n - 2^2) &lt;em&gt; … &lt;/em&gt; (n - k^2) where k^2 &amp;lt; n &amp;lt;= (k + 1)^2。&lt;br&gt;求满足L &amp;lt;= n &amp;lt;=R且f(n) % D = 0的n的数量。&lt;br&gt;L, R &amp;lt;= 10^12，D &amp;lt;= 10^6 &lt;/p&gt;
&lt;p&gt;PQHull &lt;/p&gt;
&lt;p&gt;Chengdu 2012 Problem I / HDOJ 4472&lt;br&gt;统计满足$1 &amp;lt;= x &lt;em&gt; y &lt;/em&gt; z &amp;lt;= n$的$(x, y, z)$&lt;br&gt;$n &amp;lt;= 10^11$ &lt;/p&gt;
&lt;p&gt;Project Euler 381&lt;br&gt;统计满足$1 &amp;lt;= lcm(x, y) &amp;lt;= n$的$(x, y)$&lt;br&gt;$n = 10^12$ &lt;/p&gt;
&lt;p&gt;POI XIV Queries&lt;br&gt;$n$个询问形如$(a, b, d)$，统计满足$1 &amp;lt;= x &amp;lt;= a, 1 &amp;lt;= y &amp;lt;= b$且$gcd(x, y) = d$的$(x, y)$&lt;br&gt;$n, a, b, d &amp;lt;= 50000$ &lt;/p&gt;
&lt;p&gt;SPOJ PGCD&lt;br&gt;$t$个询问形如$(n, m)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$gcd(x, y)$是质数的$(x, y)$&lt;br&gt;$t &amp;lt;= 10, n, m &amp;lt;= 10^7$ &lt;/p&gt;
&lt;p&gt;Hangzhou 2013 Online / HDOJ 4746&lt;br&gt;定义$p(n)$表示$n$的&lt;strong&gt;不同&lt;/strong&gt;质因子个数。&lt;br&gt;$q$个询问形如$(n, m, k)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$p(gcd(x, y)) &amp;lt;= k$的$(x, y)$&lt;br&gt;$q &amp;lt;= 5000, n, m, k &amp;lt;= 5 * 10^5$ &lt;/p&gt;
&lt;p&gt;Project Euler 388&lt;br&gt;统计满足$1 &amp;lt;= x, y, z &amp;lt;= n$且$gcd(x, y, z) = 1$的$(x, y, z)$&lt;br&gt;$n = 10^10$  &lt;/p&gt;
&lt;p&gt;Project Euler 402 Integer-valued polynomial&lt;br&gt;定义$M(a, b, c) = \gcd{n^4 + a n^3 + b n^2 + c n : n in \mathbb{N}}$，例如$M(4, 2, 5) = 6$。&lt;br&gt;$S(n) = \sum&lt;em&gt;{0 &amp;lt; a, b, c \leq n} M(a, b, c)$。&lt;br&gt;求$sum&lt;/em&gt;{2 &amp;lt;= k &amp;lt;= K} S(fib_k) \bmod 10^9$。  &lt;/p&gt;
&lt;p&gt;TCO 2013 2B LitPanels&lt;br&gt;$n &lt;em&gt; m$的矩形，把若干格子点亮，要求点亮的格子能被$2$个$a &lt;/em&gt; b$的覆盖，求方案数。&lt;br&gt;Project Euler 453&lt;br&gt;$n \times m$的点阵，统计非退化的四边形数量，答案mod 135707531。 &lt;/p&gt;
&lt;p&gt;SRM 600 LotsOfLines&lt;br&gt;给出$A, B$，考虑所有直线$y = ax + b$满足$0 &amp;lt;= a &amp;lt; A, 0 &amp;lt;= b &amp;lt; B$，问平面被分成了几块。&lt;br&gt;$A, B &amp;lt;= 1200$ &lt;/p&gt;
&lt;p&gt;HDOJ 4609&lt;br&gt;给出$A_1, A_2, …, A_n$，统计有多少对$(i, j, k)$满足$A_i, A_j, A_k$是三角形的三边。&lt;br&gt;$n, A_i &amp;lt;= 10^5$ &lt;/p&gt;
&lt;p&gt;SRM 603 SumOfArrays&lt;br&gt;给出长度为$n$的数组$A, B$，安排一个顺序，使得$A[i] + B[i]$的众数最大。&lt;br&gt;$1 &amp;lt;= n &amp;lt;= 10^5, 0 &amp;lt;= A[i], B[i] &amp;lt;= 10^5$ 数据随机 &lt;/p&gt;
&lt;p&gt;HDOJ 4624&lt;br&gt;给出一棵树，求$E(u) = sum_v (dist(u, v))^k$，答案模$10007$。&lt;br&gt;$n &amp;lt;= 50000, k &amp;lt;= 500$ &lt;/p&gt;
&lt;p&gt;SRM 583 RandomPaintingOnABoard&lt;br&gt;$n \times m$的矩阵$P$，每次以$P[i][j] / sum P$的概率选择格子$(i, j)$，问每行每列都被选择至少一次所需要的步数期望。&lt;br&gt;$n, m &amp;lt;= 21, n * m &amp;lt;= 50, P[i][j] &amp;lt; 10$ &lt;/p&gt;
&lt;p&gt;HDOJ 4624&lt;br&gt;$n$个白球，每次随机段区间染黑，问染成全黑的期望次数。&lt;br&gt;$n &amp;lt;= 50$ &lt;/p&gt;
&lt;p&gt;SRM 560 BoundedOptimization&lt;br&gt;$n$个变量$x_i$，满足$l_i &amp;lt;= x_i &amp;lt;= r_i$，且$x_1 + x_2 + … + x_n &amp;lt;= S$，求一个特殊二次式的最大值（无平方项，无一次项，系数都是1）。&lt;br&gt;$n &amp;lt;= 13$ &lt;/p&gt;
&lt;p&gt;维护数组$A$，支持$q$次操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add(a, b, v) for all a &amp;lt;= i &amp;lt;= b, A[i] += v &lt;/li&gt;
&lt;li&gt;query(a, b) 求#{i : a &amp;lt;= i &amp;lt;= b and A[i] &amp;gt; 0} &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Codeforces 15E Holes&lt;br&gt;维护有根树，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parent[v] := p，保证p &amp;gt; v &lt;/li&gt;
&lt;li&gt;询问点v的深度&lt;br&gt;$n, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Codeforces 348C&lt;br&gt;$n$个元素，$m$个集合$S_1, S_2, …, S_m$，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把集合$S_i$的元素权值+= v &lt;/li&gt;
&lt;li&gt;询问集合$S_i$元素的权值和&lt;br&gt;$n, |S_1| + |S_2| + … + |S_m|, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chengdu 2012 Problem D / HDOJ 4467&lt;br&gt;$n$个点$m$条边的无向图，点有2种颜色，边有权值，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变点$v$的颜色 &lt;/li&gt;
&lt;li&gt;查询端点颜色是$(a, b)$的边权值之和&lt;br&gt;$n, m, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chengdu 2013 Problem G / HDOJ 4787&lt;br&gt;&lt;strong&gt; 在线 &lt;/strong&gt; 维护字符串集合$S$，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在$S$中插入$s$ &lt;/li&gt;
&lt;li&gt;查询$t$在$S$中的子串数&lt;br&gt;$s$总长$10^5$，$t$总长$5 * 10^6$&lt;br&gt;(2~3 solutions will be presented) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SPOJ UNTITLE1&lt;br&gt;维护数组$A$，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add(a, b, v) for all a &amp;lt;= i &amp;lt;= b, A[i] += v &lt;/li&gt;
&lt;li&gt;query(a, b) 求max{S[i] : a &amp;lt;= i &amp;lt;= b}，其中S[i] = A[1] + A[2] + … + A[i]&lt;br&gt;$|A|, q &amp;lt;= 50000$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BZOJ 2724&lt;br&gt;&lt;strong&gt;在线&lt;/strong&gt;查询区间众数。&lt;br&gt;(an elegant algorithm to count occurrence) &lt;/p&gt;
&lt;p&gt;BZOJ 2741&lt;br&gt;&lt;strong&gt;在线&lt;/strong&gt;查询区间最大连续异或和。 &lt;/p&gt;
&lt;p&gt;BZOJ 巧克力王国&lt;br&gt;查询半平面内点权的和。 &lt;/p&gt;
&lt;p&gt;Codechef March14 GERALD07&lt;br&gt;无向图，询问编号在$[L_i, R_i]$的边组成子图的连通块数量。 &lt;/p&gt;
&lt;p&gt;Codeforces 19E&lt;br&gt;无向图，询问有多少条边，删掉之后的图是二分图。 &lt;/p&gt;
&lt;p&gt;SPOJ COT2&lt;br&gt;查询树上路径不同颜色数量。&lt;br&gt;(2 solutions will be presented, the online version will also be discussed) &lt;/p&gt;
&lt;p&gt;Tsinsen 1321 Attack (Chao Li)&lt;br&gt;2维平面上$n$个点，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改点权&lt;/li&gt;
&lt;li&gt;询问平行于坐标轴的矩形区域内点权第$k$小的值&lt;br&gt;$n &amp;lt;= 60000, q &amp;lt;= 10000$  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$k$-th number with insertion&lt;/p&gt;
&lt;p&gt;PA 2011 Kangaroos&lt;br&gt;给出${(A_1, B_1), (A_2, B_2), …, (A_n, B_n)}$，$q$次询问$[l, r]$，询问满足$l &amp;lt;= A_i &amp;lt;= B_i &amp;lt;= r$的最长连续i数量。&lt;br&gt;$n &amp;lt;= 50000, m &amp;lt;= 200000$  &lt;/p&gt;
&lt;p&gt;CTSC 2010 jewelry&lt;br&gt;树，点上有字符，定义$ps(x, y)$表示点$x$到点$y$唯一路径上字母的连接，$count(p, t)$表示串$p$在$t$中的出现次数。给定$T$，求$sum_{x, y} count(ps(x, y), T)$ &lt;/p&gt;
&lt;p&gt;Knapsack [Unpublished problem]&lt;br&gt;$n$个数$A_1, A_2, …, A_n$，对于所有$s$，求和恰好是$s$的子集个数。&lt;br&gt;($n, A_1 + A_2 + … + A_n &amp;lt;= 10^5$) &lt;/p&gt;
&lt;h1 id=&quot;Number-theory&quot;&gt;&lt;a href=&quot;#Number-theory&quot; class=&quot;headerlink&quot; title=&quot;Number theory&quot;&gt;&lt;/a&gt;Number theory&lt;/h1&gt;&lt;p&gt;统计满足$1 &amp;lt;= x * y &amp;lt;= n$的$(x, y)$&lt;br&gt;$n &amp;lt;= 10^14$ &lt;/p&gt;
&lt;p&gt;Chengdu 2012 Problem I / HDOJ 4472&lt;br&gt;统计满足$1 &amp;lt;= x &lt;em&gt; y &lt;/em&gt; z &amp;lt;= n$的$(x, y, z)$&lt;br&gt;$n &amp;lt;= 10^11$ &lt;/p&gt;
&lt;p&gt;Project Euler 381&lt;br&gt;统计满足$1 &amp;lt;= lcm(x, y) &amp;lt;= n$的$(x, y)$&lt;br&gt;$n = 10^12$ &lt;/p&gt;
&lt;p&gt;POI XIV Queries&lt;br&gt;$n$个询问形如$(a, b, d)$，统计满足$1 &amp;lt;= x &amp;lt;= a, 1 &amp;lt;= y &amp;lt;= b$且$gcd(x, y) = d$的$(x, y)$&lt;br&gt;$n, a, b, d &amp;lt;= 50000$ &lt;/p&gt;
&lt;p&gt;SPOJ PGCD&lt;br&gt;$t$个询问形如$(n, m)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$gcd(x, y)$是质数的$(x, y)$&lt;br&gt;$t &amp;lt;= 10, n, m &amp;lt;= 10^7$ &lt;/p&gt;
&lt;p&gt;Hangzhou 2013 Online / HDOJ 4746&lt;br&gt;定义$p(n)$表示$n$的&lt;strong&gt;不同&lt;/strong&gt;质因子个数。&lt;br&gt;$q$个询问形如$(n, m, k)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$p(gcd(x, y)) &amp;lt;= k$的$(x, y)$&lt;br&gt;$q &amp;lt;= 5000, n, m, k &amp;lt;= 5 * 10^5$ &lt;/p&gt;
&lt;p&gt;Project Euler 388&lt;br&gt;统计满足$1 &amp;lt;= x, y, z &amp;lt;= n$且$gcd(x, y, z) = 1$的$(x, y, z)$&lt;br&gt;$n = 10^10$ &lt;/p&gt;
&lt;p&gt;Chengdu 2012 Problem I / HDOJ 4472&lt;br&gt;统计满足$1 &amp;lt;= x &lt;em&gt; y &lt;/em&gt; z &amp;lt;= n$的$(x, y, z)$&lt;br&gt;$n &amp;lt;= 10^11$ &lt;/p&gt;
&lt;p&gt;Project Euler 381&lt;br&gt;统计满足$1 &amp;lt;= lcm(x, y) &amp;lt;= n$的$(x, y)$&lt;br&gt;$n = 10^12$ &lt;/p&gt;
&lt;p&gt;POI XIV Queries&lt;br&gt;$n$个询问形如$(a, b, d)$，统计满足$1 &amp;lt;= x &amp;lt;= a, 1 &amp;lt;= y &amp;lt;= b$且$gcd(x, y) = d$的$(x, y)$&lt;br&gt;$n, a, b, d &amp;lt;= 50000$ &lt;/p&gt;
&lt;p&gt;SPOJ PGCD&lt;br&gt;$t$个询问形如$(n, m)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$gcd(x, y)$是质数的$(x, y)$&lt;br&gt;$t &amp;lt;= 10, n, m &amp;lt;= 10^7$ &lt;/p&gt;
&lt;p&gt;Hangzhou 2013 Online / HDOJ 4746&lt;br&gt;定义$p(n)$表示$n$的&lt;strong&gt;不同&lt;/strong&gt;质因子个数。&lt;br&gt;$q$个询问形如$(n, m, k)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$p(gcd(x, y)) &amp;lt;= k$的$(x, y)$&lt;br&gt;$q &amp;lt;= 5000, n, m, k &amp;lt;= 5 * 10^5$ &lt;/p&gt;
&lt;p&gt;Project Euler 388&lt;br&gt;统计满足$1 &amp;lt;= x, y, z &amp;lt;= n$且$gcd(x, y, z) = 1$的$(x, y, z)$&lt;br&gt;$n = 10^10$  &lt;/p&gt;
&lt;p&gt;Project Euler 402 Integer-valued polynomial&lt;br&gt;定义$M(a, b, c) = \gcd{n^4 + a n^3 + b n^2 + c n : n in \mathbb{N}}$，例如$M(4, 2, 5) = 6$。&lt;br&gt;$S(n) = \sum&lt;em&gt;{0 &amp;lt; a, b, c \leq n} M(a, b, c)$。&lt;br&gt;求$sum&lt;/em&gt;{2 &amp;lt;= k &amp;lt;= K} S(fib_k) \bmod 10^9$。  &lt;/p&gt;
&lt;p&gt;TCO 2013 2B LitPanels&lt;br&gt;$n &lt;em&gt; m$的矩形，把若干格子点亮，要求点亮的格子能被$2$个$a &lt;/em&gt; b$的覆盖，求方案数。&lt;br&gt;Project Euler 453&lt;br&gt;$n \times m$的点阵，统计非退化的四边形数量，答案mod 135707531。 &lt;/p&gt;
&lt;p&gt;SRM 600 LotsOfLines&lt;br&gt;给出$A, B$，考虑所有直线$y = ax + b$满足$0 &amp;lt;= a &amp;lt; A, 0 &amp;lt;= b &amp;lt; B$，问平面被分成了几块。&lt;br&gt;$A, B &amp;lt;= 1200$ &lt;/p&gt;
&lt;p&gt;HDOJ 4609&lt;br&gt;给出$A_1, A_2, …, A_n$，统计有多少对$(i, j, k)$满足$A_i, A_j, A_k$是三角形的三边。&lt;br&gt;$n, A_i &amp;lt;= 10^5$ &lt;/p&gt;
&lt;p&gt;SRM 603 SumOfArrays&lt;br&gt;给出长度为$n$的数组$A, B$，安排一个顺序，使得$A[i] + B[i]$的众数最大。&lt;br&gt;$1 &amp;lt;= n &amp;lt;= 10^5, 0 &amp;lt;= A[i], B[i] &amp;lt;= 10^5$ 数据随机 &lt;/p&gt;
&lt;p&gt;HDOJ 4624&lt;br&gt;给出一棵树，求$E(u) = sum_v (dist(u, v))^k$，答案模$10007$。&lt;br&gt;$n &amp;lt;= 50000, k &amp;lt;= 500$ &lt;/p&gt;
&lt;p&gt;SRM 583 RandomPaintingOnABoard&lt;br&gt;$n \times m$的矩阵$P$，每次以$P[i][j] / sum P$的概率选择格子$(i, j)$，问每行每列都被选择至少一次所需要的步数期望。&lt;br&gt;$n, m &amp;lt;= 21, n * m &amp;lt;= 50, P[i][j] &amp;lt; 10$ &lt;/p&gt;
&lt;p&gt;HDOJ 4624&lt;br&gt;$n$个白球，每次随机段区间染黑，问染成全黑的期望次数。&lt;br&gt;$n &amp;lt;= 50$ &lt;/p&gt;
&lt;p&gt;SRM 560 BoundedOptimization&lt;br&gt;$n$个变量$x_i$，满足$l_i &amp;lt;= x_i &amp;lt;= r_i$，且$x_1 + x_2 + … + x_n &amp;lt;= S$，求一个特殊二次式的最大值（无平方项，无一次项，系数都是1）。&lt;br&gt;$n &amp;lt;= 13$ &lt;/p&gt;
&lt;p&gt;维护数组$A$，支持$q$次操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add(a, b, v) for all a &amp;lt;= i &amp;lt;= b, A[i] += v &lt;/li&gt;
&lt;li&gt;query(a, b) 求#{i : a &amp;lt;= i &amp;lt;= b and A[i] &amp;gt; 0} &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Codeforces 15E Holes&lt;br&gt;维护有根树，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parent[v] := p，保证p &amp;gt; v &lt;/li&gt;
&lt;li&gt;询问点v的深度&lt;br&gt;$n, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Codeforces 348C&lt;br&gt;$n$个元素，$m$个集合$S_1, S_2, …, S_m$，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把集合$S_i$的元素权值+= v &lt;/li&gt;
&lt;li&gt;询问集合$S_i$元素的权值和&lt;br&gt;$n, |S_1| + |S_2| + … + |S_m|, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chengdu 2012 Problem D / HDOJ 4467&lt;br&gt;$n$个点$m$条边的无向图，点有2种颜色，边有权值，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变点$v$的颜色 &lt;/li&gt;
&lt;li&gt;查询端点颜色是$(a, b)$的边权值之和&lt;br&gt;$n, m, q &amp;lt;= 10^5$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chengdu 2013 Problem G / HDOJ 4787&lt;br&gt;&lt;strong&gt; 在线 &lt;/strong&gt; 维护字符串集合$S$，$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在$S$中插入$s$ &lt;/li&gt;
&lt;li&gt;查询$t$在$S$中的子串数&lt;br&gt;$s$总长$10^5$，$t$总长$5 * 10^6$&lt;br&gt;(2~3 solutions will be presented) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SPOJ UNTITLE1&lt;br&gt;维护数组$A$，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add(a, b, v) for all a &amp;lt;= i &amp;lt;= b, A[i] += v &lt;/li&gt;
&lt;li&gt;query(a, b) 求max{S[i] : a &amp;lt;= i &amp;lt;= b}，其中S[i] = A[1] + A[2] + … + A[i]&lt;br&gt;$|A|, q &amp;lt;= 50000$ &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BZOJ 2724&lt;br&gt;&lt;strong&gt;在线&lt;/strong&gt;查询区间众数。&lt;br&gt;(an elegant algorithm to count occurrence) &lt;/p&gt;
&lt;p&gt;BZOJ 2741&lt;br&gt;&lt;strong&gt;在线&lt;/strong&gt;查询区间最大连续异或和。 &lt;/p&gt;
&lt;p&gt;BZOJ 巧克力王国&lt;br&gt;查询半平面内点权的和。 &lt;/p&gt;
&lt;p&gt;Codechef March14 GERALD07&lt;br&gt;无向图，询问编号在$[L_i, R_i]$的边组成子图的连通块数量。 &lt;/p&gt;
&lt;p&gt;Codeforces 19E&lt;br&gt;无向图，询问有多少条边，删掉之后的图是二分图。 &lt;/p&gt;
&lt;p&gt;SPOJ COT2&lt;br&gt;查询树上路径不同颜色数量。&lt;br&gt;(2 solutions will be presented, the online version will also be discussed) &lt;/p&gt;
&lt;p&gt;Tsinsen 1321 Attack (Chao Li)&lt;br&gt;2维平面上$n$个点，支持$q$次操作： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改点权&lt;/li&gt;
&lt;li&gt;询问平行于坐标轴的矩形区域内点权第$k$小的值&lt;br&gt;$n &amp;lt;= 60000, q &amp;lt;= 10000$  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$k$-th number with insertion&lt;/p&gt;
&lt;p&gt;PA 2011 Kangaroos&lt;br&gt;给出${(A_1, B_1), (A_2, B_2), …, (A_n, B_n)}$，$q$次询问$[l, r]$，询问满足$l &amp;lt;= A_i &amp;lt;= B_i &amp;lt;= r$的最长连续i数量。&lt;br&gt;$n &amp;lt;= 50000, m &amp;lt;= 200000$  &lt;/p&gt;
&lt;p&gt;CTSC 2010 jewelry&lt;br&gt;树，点上有字符，定义$ps(x, y)$表示点$x$到点$y$唯一路径上字母的连接，$count(p, t)$表示串$p$在$t$中的出现次数。给定$T$，求$sum_{x, y} count(ps(x, y), T)$ &lt;/p&gt;
&lt;p&gt;Knapsack [Unpublished problem]&lt;br&gt;$n$个数$A_1, A_2, …, A_n$，对于所有$s$，求和恰好是$s$的子集个数。&lt;br&gt;($n, A_1 + A_2 + … + A_n &amp;lt;= 10^5$) &lt;/p&gt;
&lt;h1 id=&quot;Number-theory-1&quot;&gt;&lt;a href=&quot;#Number-theory-1&quot; class=&quot;headerlink&quot; title=&quot;Number theory&quot;&gt;&lt;/a&gt;Number theory&lt;/h1&gt;&lt;p&gt;统计满足$1 &amp;lt;= x * y &amp;lt;= n$的$(x, y)$&lt;br&gt;$n &amp;lt;= 10^14$ &lt;/p&gt;
&lt;p&gt;Chengdu 2012 Problem I / HDOJ 4472&lt;br&gt;统计满足$1 &amp;lt;= x &lt;em&gt; y &lt;/em&gt; z &amp;lt;= n$的$(x, y, z)$&lt;br&gt;$n &amp;lt;= 10^11$ &lt;/p&gt;
&lt;p&gt;Project Euler 381&lt;br&gt;统计满足$1 &amp;lt;= lcm(x, y) &amp;lt;= n$的$(x, y)$&lt;br&gt;$n = 10^12$ &lt;/p&gt;
&lt;p&gt;POI XIV Queries&lt;br&gt;$n$个询问形如$(a, b, d)$，统计满足$1 &amp;lt;= x &amp;lt;= a, 1 &amp;lt;= y &amp;lt;= b$且$gcd(x, y) = d$的$(x, y)$&lt;br&gt;$n, a, b, d &amp;lt;= 50000$ &lt;/p&gt;
&lt;p&gt;SPOJ PGCD&lt;br&gt;$t$个询问形如$(n, m)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$gcd(x, y)$是质数的$(x, y)$&lt;br&gt;$t &amp;lt;= 10, n, m &amp;lt;= 10^7$ &lt;/p&gt;
&lt;p&gt;Hangzhou 2013 Online / HDOJ 4746&lt;br&gt;定义$p(n)$表示$n$的&lt;strong&gt;不同&lt;/strong&gt;质因子个数。&lt;br&gt;$q$个询问形如$(n, m, k)$，统计满足$1 &amp;lt;= x &amp;lt;= n, 1 &amp;lt;= y &amp;lt;= m$且$p(gcd(x, y)) &amp;lt;= k$的$(x, y)$&lt;br&gt;$q &amp;lt;= 5000, n, m, k &amp;lt;= 5 * 10^5$ &lt;/p&gt;
&lt;p&gt;Project Euler 388&lt;br&gt;统计满足$1 &amp;lt;= x, y, z &amp;lt;= n$且$gcd(x, y, z) = 1$的$(x, y, z)$&lt;br&gt;$n = 10^10$ &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;来自ftiasch在&lt;a href=&quot;https://gist.github.com/ftiasch/007a7732456cc8f88ba6&quot;&gt;这里&lt;/a&gt;贴出的题。有些公式看着不太舒服，就移到这里了。&lt;br&gt;
    
    </summary>
    
    
      <category term="ACM" scheme="https://moemoemortimer.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>北方大学 ACM 多校训练赛 第四场 B.翻硬币【暴力】</title>
    <link href="https://moemoemortimer.github.io/2017/03/26/2017-north-multi-university-training-round4-B/"/>
    <id>https://moemoemortimer.github.io/2017/03/26/2017-north-multi-university-training-round4-B/</id>
    <published>2017-03-26T09:26:57.000Z</published>
    <updated>2017-03-30T14:11:01.909Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://nanti.jisuanke.com/t/14897&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;翻硬币 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;L用硬币玩游戏。他在n*m的矩阵中的每个小格中放一枚硬币，他想将所有的硬币都变成正面向上，但是，他给自己增加一些难度，他只能将整行或者整列的硬币都翻面。当然，他一点也不想做无用功，所以，他想知道当前的状态是否能通过一系列操作后使得所有硬币正面朝上。&lt;/p&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;首先是一个T，代表数据的组数；每组数据的第一行给出一个n和m，代表行数和列数；接下来n行，每行由m个数（0或者1），0表示硬币正面朝上，1表示硬币反面朝上；&lt;/p&gt;
&lt;p&gt;数据范围：&lt;/p&gt;
&lt;p&gt;n&amp;gt;=1&lt;/p&gt;
&lt;p&gt;m&amp;gt;=1&lt;/p&gt;
&lt;p&gt;n*m&amp;lt;=1e6&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;如果能使得所有硬币正面朝上，输出YES；&lt;/p&gt;
&lt;p&gt;否则输出NO；&lt;/p&gt;
&lt;h3 id=&quot;样例输入&quot;&gt;&lt;a href=&quot;#样例输入&quot; class=&quot;headerlink&quot; title=&quot;样例输入&quot;&gt;&lt;/a&gt;样例输入&lt;/h3&gt;&lt;p&gt;2&lt;br&gt;2 3&lt;br&gt;1 1 1&lt;br&gt;0 0 0&lt;br&gt;2 2&lt;br&gt;1 1&lt;br&gt;0 1&lt;/p&gt;
&lt;h3 id=&quot;样例输出&quot;&gt;&lt;a href=&quot;#样例输出&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h3&gt;&lt;p&gt;YES&lt;br&gt;NO&lt;/p&gt;
&lt;h2 id=&quot;解题过程&quot;&gt;&lt;a href=&quot;#解题过程&quot; class=&quot;headerlink&quot; title=&quot;解题过程&quot;&gt;&lt;/a&gt;解题过程&lt;/h2&gt;&lt;h3 id=&quot;错误思路：状压-暴力&quot;&gt;&lt;a href=&quot;#错误思路：状压-暴力&quot; class=&quot;headerlink&quot; title=&quot;错误思路：状压+暴力&quot;&gt;&lt;/a&gt;错误思路：状压+暴力&lt;/h3&gt;&lt;p&gt;因为记得类似的题（翻硬币，只能翻整行整列，问最多可以使多少枚硬币朝上），那道题给的是N*9的矩阵（N很大），所以是在暗示枚举列以降低复杂度。&lt;/p&gt;
&lt;p&gt;具体实现（只针对行数列数都很小的情况）：&lt;br&gt;翻硬币的次数没有上限，而且操作顺序不会影响最后的状态。第一层循环枚举列状态，用000000000~111111111来表示对列的操作，哪位为1就对哪一列进行翻转，对某一列状态s，枚举1——n行，加上列操作后当前行状态就会变为row[i] $\bioplus$ s, 只有状态全为0或全为1时才可以继续，否则就应枚举下一个列状态。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ll row[&lt;span class=&quot;number&quot;&gt;1000009&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, m, t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x, flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(row, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(row));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt;= m; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                row[i] = row[i]|x&amp;lt;&amp;lt;(m-j);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//cout&amp;lt;&amp;lt;row[i]&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(ll i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;&amp;lt; m; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; n; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; upnum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ll state = row[j]^i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; k &amp;lt; m; k++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(state&amp;gt;&amp;gt;k &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)upnum++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(upnum!=m &amp;amp;&amp;amp; upnum!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j==n)&amp;#123;flag = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(flag)&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;YES&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;NO&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;正确思路：暴力&quot;&gt;&lt;a href=&quot;#正确思路：暴力&quot; class=&quot;headerlink&quot; title=&quot;正确思路：暴力&quot;&gt;&lt;/a&gt;正确思路：暴力&lt;/h3&gt;&lt;p&gt;稍微一想就会发现上面的代码对这道题来说既走弯路又不适合，亏我还想用long long抢救一下，简直智障&lt;/p&gt;
&lt;p&gt;正解是：只有所有行都和第一行相同或相反的矩阵才满足条件&lt;/p&gt;
&lt;p&gt;因此暴力判断就可以了&lt;/p&gt;
&lt;p&gt;因题目已关闭，无法检验代码正确性，但这次思路应该是对的&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;1000009&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, m, t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x, flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; m; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; a[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		flag = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; m; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[j]==x)num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(num!=m &amp;amp;&amp;amp; num!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)flag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(flag)&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;YES&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;NO&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="暴力" scheme="https://moemoemortimer.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>北方大学 ACM 多校训练赛 第四场 A. 恶魔包毁灭世界【二分图最大匹配】</title>
    <link href="https://moemoemortimer.github.io/2017/03/26/2017-north-multi-university-training-round4-A/"/>
    <id>https://moemoemortimer.github.io/2017/03/26/2017-north-multi-university-training-round4-A/</id>
    <published>2017-03-26T09:26:12.000Z</published>
    <updated>2017-03-30T14:11:00.246Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nanti.jisuanke.com/t/14896&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;恶魔包毁灭世界 题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;一边描述题目一边构造一个二分图：&lt;br&gt;n个恶魔，m个城市 —— &lt;strong&gt; 二分图的两个子集A,B &lt;/strong&gt;&lt;br&gt;第i个恶魔可以攻击s个城市，其编号分别是$k_1,k_2, … ,k_s$ —— &lt;strong&gt; 从集合A向B连边 &lt;/strong&gt;&lt;br&gt;输出恶魔能攻击的城市数量最大值—— &lt;strong&gt; 二分图最大匹配数 &lt;/strong&gt;&lt;br&gt;并输出&lt;strong&gt; 所有 &lt;/strong&gt;可行方案 —— &lt;strong&gt; 不会解决 &lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;首先输入一个T表示T组数据。&lt;/p&gt;
&lt;p&gt;接下来每组数据输入一个n和m，表示n只恶魔（包）准备进攻m座城市，恶魔（包）编号1~n，城市编号1~m。&lt;/p&gt;
&lt;p&gt;接下来是n行数据，第i行输入一个s（s&amp;lt;=m）表示第i只恶魔（包）有能力进攻的城市数量，然后s个数表示恶魔（包）所能够进攻的s座城市。&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;&lt;a href=&quot;#数据范围&quot; class=&quot;headerlink&quot; title=&quot;数据范围&quot;&gt;&lt;/a&gt;数据范围&lt;/h3&gt;&lt;p&gt;T&amp;lt;=10&lt;/p&gt;
&lt;p&gt;n&amp;lt;=3000&lt;/p&gt;
&lt;p&gt;m&amp;lt;=3000&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;对于每组数据首先输出num表示最多会有num个城市会被进攻。&lt;/p&gt;
&lt;p&gt;接下来输出n行，第i行输出一个s第i行数据表示第i只恶魔（包）所要进攻的城市数量，然后s个数表示恶魔（包）所要进攻的s座城市（城市编号按升序输出）。&lt;/p&gt;
&lt;h3 id=&quot;样例输入&quot;&gt;&lt;a href=&quot;#样例输入&quot; class=&quot;headerlink&quot; title=&quot;样例输入&quot;&gt;&lt;/a&gt;样例输入&lt;/h3&gt;&lt;p&gt;4 4&lt;br&gt;2 1 2&lt;br&gt;2 1 2&lt;br&gt;2 2 3&lt;br&gt;2 3 4&lt;/p&gt;
&lt;p&gt;1 2&lt;br&gt;2 1 2&lt;/p&gt;
&lt;h3 id=&quot;样例输出&quot;&gt;&lt;a href=&quot;#样例输出&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h3&gt;&lt;p&gt;4&lt;br&gt;2 1 2&lt;br&gt;2 1 2&lt;br&gt;1 3&lt;br&gt;1 4&lt;/p&gt;
&lt;p&gt;1&lt;br&gt;2 1 2&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;首先输出的第一个值是一个裸的二分匹配，设匹配值为num。只要建图正确，不难求最大匹配数。&lt;br&gt;但问题在于，进行一次dfs后，match数组里只保存了一种最优匹配方案。&lt;br&gt;如果有多个最优解，就无法输出了。&lt;br&gt;比如第一个样例，在最大攻击城市数是4的情况下，恶魔1攻击城市1或2都可以，恶魔2攻击城市1或2也都可以&lt;/p&gt;
&lt;p&gt;接下来是题解给出的做法：&lt;/p&gt;
&lt;p&gt;假设左边有n-num个恶魔还未匹配，右边有m-num座城市还未匹配，因此我们将左侧增加m-num个虚拟恶魔，虚拟恶魔与右边所有城市连边；右边增加n-num个虚拟城市，虚拟城市与左边所有恶魔连边，这样我们就得到一个两边各有M=n+m-num的二分图，且该二分图是一个完美匹配。也就是每个恶魔都有一个匹配的城市。现在，我们将每个恶魔匹配的城市向该恶魔进攻的城市连边（建一个新图g），然后求g的强连通分量。那么与每个恶魔之前匹配的城市在一个强连通分量里的城市都可以作为该恶魔的匹配使得最大匹配不变。也就是说，设恶魔i之前的匹配为p[i]，现在为恶魔i选择一个新的城市j，那么我们若能为p[i]重新找到一个恶魔k，那么实质上就是找到另一个恶魔互换两个两个恶魔进攻的城市。因此两城市若在一个强连通分量里，那么恶魔由之前的匹配城市A选择城市B时，A也能找到另一个匹配，因为B能够通过某些路径到达A。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; s[&lt;span class=&quot;number&quot;&gt;3030&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::iterator it; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; all[&lt;span class=&quot;number&quot;&gt;3030&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; e[&lt;span class=&quot;number&quot;&gt;3005&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;6005&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; match[&lt;span class=&quot;number&quot;&gt;3005&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; book[&lt;span class=&quot;number&quot;&gt;6005&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; u)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= n+m; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(book[i] == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; e[u][i] == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            book[i] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//标记点i已经访问过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//如果i未被配对或找到了新的配对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(match[i] == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || dfs(match[i]))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	&lt;span class=&quot;comment&quot;&gt;//更新配对关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                match[i] = u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                match[u] = i;  &lt;span class=&quot;comment&quot;&gt;//这里是无向图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;amp;t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; t1, t2, sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            s[i].clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//n个恶魔m座城市&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;amp;n, &amp;amp;m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(e,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(all, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(all));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//读入边&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mi;&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;mi);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; mi; ++j)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;t1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                all[t1]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                e[i][t1+n] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//这里是无向图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                e[t1+n][i] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= n+m; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            match[i] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= n+m; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt;= n+m; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                book[j] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//清空上次搜索时标记&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(dfs(i))sum++;	&lt;span class=&quot;comment&quot;&gt;//寻找增广路，如果找到，配对数加1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="图论" scheme="https://moemoemortimer.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="二分图最大匹配" scheme="https://moemoemortimer.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>2017天梯赛-大区赛</title>
    <link href="https://moemoemortimer.github.io/2017/03/26/2017GPLT/"/>
    <id>https://moemoemortimer.github.io/2017/03/26/2017GPLT/</id>
    <published>2017-03-26T04:11:36.000Z</published>
    <updated>2017-04-24T12:43:42.839Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;去青岛大学旅游⸜(* ॑꒳ ॑* )⸝&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.25是天梯赛的初赛，比赛地点是青岛大学，因为没去过，所以有点小雀跃，就当是出去玩啦~&lt;/p&gt;
&lt;h2 id=&quot;桑心的事&quot;&gt;&lt;a href=&quot;#桑心的事&quot; class=&quot;headerlink&quot; title=&quot;桑心的事&quot;&gt;&lt;/a&gt;桑心的事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;校内选拔赛表现很差，所以我被分在炮灰队，demo全集训队的人除了我，都在dalao队里，拍照的时候不能和他们站在一起，有点小受伤&lt;/li&gt;
&lt;li&gt;天气好冷（抖抖抖www&lt;/li&gt;
&lt;li&gt;没有喝热水的地方TAT&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;开心的事&quot;&gt;&lt;a href=&quot;#开心的事&quot; class=&quot;headerlink&quot; title=&quot;开心的事&quot;&gt;&lt;/a&gt;开心的事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;去没去过的地方总是很开心，兴奋压过了比赛的害怕，都没怎么晕车&lt;/li&gt;
&lt;li&gt;我们队的牌子（小粉纸）在我手里嘻嘻（话说拍照的时候不管站在多靠后的位置，最后总是会被抓去前面…是因为太矮了么=.=）&lt;/li&gt;
&lt;li&gt;终榜个人排名10，勉强压过两个dalao队的（虽然不知道是谁，还有一个二队的在我前面），让我小小地窃喜一下吧hhhhh&lt;/li&gt;
&lt;li&gt;位置在角落不算挤，左边没人，右边是个友好帅帅的青大软工同学，无形中全场带我节奏，我觉得我基本上是跟着他做题的，因此不敢有半分懈怠，而且手速快又不砸键盘（这点简直太友好了），十分感谢。今天居然在去年的天梯照片集里发现了此人(⊙o⊙)PS还带我去某本科生实验室成功get热水，简直救了我的命&amp;gt;o&amp;lt;&lt;/li&gt;
&lt;li&gt;我喜欢天梯…因为全是手速题，能稳稳地一道一道切题很涨信心&lt;/li&gt;
&lt;li&gt;可能因为参赛人数太多了吧，服务器一上来就崩了，接着就崩了1个多小时，大概是没见过这种情况，我没不耐烦，反倒感觉蛮新奇…本来为了用在比赛中的巧克力，就在等待的空档里提前被我呲完了( ╯□╰ )&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然在炮灰队，但也不算太丢脸辣，因为…要说严肃一点的话，是为了自己的学校而战，不管在什么位置，都要有同样的觉悟。唯一有点遗憾的是没有熟悉的人，吃饭的时候看他们都和小伙伴坐一起，有点小小的撒鼻西…..&lt;/p&gt;
&lt;p&gt;我记得校内预选赛的时候问过成哥为什么不去，他说他要写作业没时间&lt;br&gt;比赛前一天问年浩学长为什么不去，他说他要考研啦&lt;/p&gt;
&lt;p&gt;一届一届的学长们都退役了，接下来就该我了吧。&lt;/p&gt;
&lt;p&gt;前路不明，机会不易，且行且珍惜。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;去青岛大学旅游⸜(* ॑꒳ ॑* )⸝&lt;br&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://moemoemortimer.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="比赛" scheme="https://moemoemortimer.github.io/tags/%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>不为人知的py交易日记【第二话：turtle库&amp;画画】</title>
    <link href="https://moemoemortimer.github.io/2017/03/22/py-trade-dairy-2/"/>
    <id>https://moemoemortimer.github.io/2017/03/22/py-trade-dairy-2/</id>
    <published>2017-03-22T09:47:17.000Z</published>
    <updated>2017-03-30T03:27:08.018Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是Nyanko桑的py交易记录，嘿嘿嘿⸜(* ॑꒳ ॑* )⸝&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Python（蟒蛇）-绘制&quot;&gt;&lt;a href=&quot;#Python（蟒蛇）-绘制&quot; class=&quot;headerlink&quot; title=&quot;Python（蟒蛇） 绘制&quot;&gt;&lt;/a&gt;Python（蟒蛇） 绘制&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def drawSnake(rad, angle, len, neckrad):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i in range(len):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.circle(rad, angle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.circle(-rad, angle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	turtle.circle(rad, angle/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	turtle.fd(rad)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	turtle.circle(neckrad+1, 180)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	turtle.fd(rad*2/3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Python（星星）-绘制&quot;&gt;&lt;a href=&quot;#Python（星星）-绘制&quot; class=&quot;headerlink&quot; title=&quot;Python（星星） 绘制&quot;&gt;&lt;/a&gt;Python（星星） 绘制&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def drawStar(len, angle):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i in range(len):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.fd(100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		angle = angle-144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.seth(angle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i in range(len):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		angle = angle+144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.seth(angle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.fd(100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	angle = angle+57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	turtle.seth(angle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i in range(len):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.fd(100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		angle = angle+144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.seth(angle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i in range(len):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		angle = angle-144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.seth(angle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		turtle.fd(100)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;import是一个关键字，用来引入一些外部库   &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;main函数&quot;&gt;&lt;a href=&quot;#main函数&quot; class=&quot;headerlink&quot; title=&quot;main函数&quot;&gt;&lt;/a&gt;main函数&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;def main():
    turtle.setup(1300, 800, 0, 0)
    pythonsize = 50
    turtle.pensize(pythonsize)
    turtle.pencolor(&amp;quot;blue&amp;quot;)
    turtle.seth(-40)
    drawSnake(40,80,5,pythonsize/2)
    #turtle.seth(0)
    #time.sleep(5)
    #drawStar(5,0)
    time.sleep(5)

main()
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是Nyanko桑的py交易记录，嘿嘿嘿⸜(* ॑꒳ ॑* )⸝&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://moemoemortimer.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>不为人知的py交易日记【第一话：基础】</title>
    <link href="https://moemoemortimer.github.io/2017/03/18/py-trade-dairy-1/"/>
    <id>https://moemoemortimer.github.io/2017/03/18/py-trade-dairy-1/</id>
    <published>2017-03-18T12:00:43.000Z</published>
    <updated>2017-03-30T14:08:00.769Z</updated>
    
    <content type="html">&lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这里是Nyanko桑的py交易记录，嘿嘿嘿⸜(* ॑꒳ ॑* )⸝&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;p&gt;请到官网&lt;a href=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.python.org/downloads/&lt;/a&gt;下载python3（知乎上好像有人说python3正在毁了py，不知道为什么会这么说…）&lt;/p&gt;
&lt;p&gt;一路保持默认选项，顺利完成，没毛病、&lt;/p&gt;
&lt;p&gt;然后尝试一下hello world作为第一个py交易（？），cmd和IDLE（Python GUI 图形化界面）都试一下&lt;/p&gt;
&lt;p&gt;code只有一行：&lt;code&gt;print(&amp;quot;hello~&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;配合sublime-text食用&quot;&gt;&lt;a href=&quot;#配合sublime-text食用&quot; class=&quot;headerlink&quot; title=&quot;配合sublime text食用&quot;&gt;&lt;/a&gt;配合sublime text食用&lt;/h3&gt;&lt;p&gt;其实我的第一个py程序是在sublime text上写的，试了试居然运行成功了（鸡冻），但是有一点不好….不能在它的console里输入…为解决输入问题，google出一个ST的插件2333&lt;/p&gt;
&lt;p&gt;打开ST ——&amp;gt; Ctrl+shift+P ——&amp;gt; PCI （打开 Package Control: Install Package）——&amp;gt; SublimeREPL&lt;/p&gt;
&lt;p&gt;安装SublimeREPL这个插件之后，你可以&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Tools &amp;gt; SublimeREPL &amp;gt; Python &amp;gt; Python 在新窗口中打开类似IDLE的交互式开发环境&lt;/li&gt;
&lt;li&gt;通过同菜单下的 Python - RUN current file 运行当前文件。&lt;/li&gt;
&lt;li&gt;添加快捷键（这里的姿势来自&lt;a href=&quot;http://blog.yzyzsun.me/sublime-text-for-mac/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇博文&lt;/a&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;以 Python - RUN current file 为例，设置与 Python IDLE 相同的快捷键 F5。&lt;br&gt;打开 Sublime Text &amp;gt; Preferences &amp;gt; Key Bindings - User，在文件中输入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;keys&amp;quot;: [&amp;quot;f5&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;caption&amp;quot;: &amp;quot;SublimeREPL: Python - RUN current file&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;command&amp;quot;: &amp;quot;run_existing_window_command&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;args&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;id&amp;quot;: &amp;quot;repl_python_run&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;file&amp;quot;: &amp;quot;config/Python/Main.sublime-menu&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;语法初步&quot;&gt;&lt;a href=&quot;#语法初步&quot; class=&quot;headerlink&quot; title=&quot;语法初步&quot;&gt;&lt;/a&gt;语法初步&lt;/h2&gt;&lt;h3 id=&quot;缩进&quot;&gt;&lt;a href=&quot;#缩进&quot; class=&quot;headerlink&quot; title=&quot;缩进&quot;&gt;&lt;/a&gt;缩进&lt;/h3&gt;&lt;p&gt;1个缩进 = 4个空格&lt;br&gt;体现代码间的层次关系，是表明程序框架的唯一手段。&lt;br&gt;（此处应@游标卡尺梗）&lt;/p&gt;
&lt;h3 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerlink&quot; title=&quot;注释&quot;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单行注释以#开头&lt;/li&gt;
&lt;li&gt;多行注释以三个单引号开头和结尾&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;变量命名规则&quot;&gt;&lt;a href=&quot;#变量命名规则&quot; class=&quot;headerlink&quot; title=&quot;变量命名规则&quot;&gt;&lt;/a&gt;变量命名规则&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用大小写字母、数字和下划线的组合，但首字母只能是大小写字母或下划线，不能使用空格。&lt;/li&gt;
&lt;li&gt;中文等非字母符号也可以作为名字&lt;/li&gt;
&lt;li&gt;不能与保留字相同（共33个，见下图）&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bly1fdrb1wl1juj20f808kaav.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;输入函数&quot;&gt;&lt;a href=&quot;#输入函数&quot; class=&quot;headerlink&quot; title=&quot;输入函数&quot;&gt;&lt;/a&gt;输入函数&lt;/h3&gt;&lt;p&gt;Input()函数从控制台获得用户输入&lt;/p&gt;
&lt;p&gt;&amp;lt;变量&amp;gt; = input(&amp;lt;提示性文字&amp;gt;)&lt;/p&gt;
&lt;p&gt;获得的用户输入以字符串形式保存在变量中&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;val = input(&amp;quot;请输入你的名字：&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;运行后&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bly1fdrb8xu1kgj20fn01djrf.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;表达式&quot;&gt;&lt;a href=&quot;#表达式&quot; class=&quot;headerlink&quot; title=&quot;表达式&quot;&gt;&lt;/a&gt;表达式&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;字符串&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;操作符+可以连接两个串&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bly1fdrbhe8omgj20hf01xaa8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;字符串可理解为字符数组，若长度为L，第一个字节索引为0或-L，最后一个字节索引为L-1或-1&lt;/p&gt;
&lt;p&gt;可以以区间形式获得字符串的一段，这里的区间是个左闭右开区间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bly1fdrbupa93ej20gk06hmxl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;分支语句&quot;&gt;&lt;a href=&quot;#分支语句&quot; class=&quot;headerlink&quot; title=&quot;分支语句&quot;&gt;&lt;/a&gt;分支语句&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &amp;lt;条件&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;成立&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;表达式组&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; &amp;lt;条件&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;成立&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;表达式组&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;表达式组N&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;赋值语句&quot;&gt;&lt;a href=&quot;#赋值语句&quot; class=&quot;headerlink&quot; title=&quot;赋值语句&quot;&gt;&lt;/a&gt;赋值语句&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;用等号给变量赋值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如：val = 1.8*float(input_str) + 32&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;同步赋值语句&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;先运算右侧n个表达式，然后同时将表达式结果赋给左侧&lt;/p&gt;
&lt;p&gt;&amp;lt;变量1&amp;gt;,…, &amp;lt;变量N&amp;gt; = &amp;lt;表达式1&amp;gt;,…, &amp;lt;表达式N&amp;gt;&lt;/p&gt;
&lt;p&gt;这里有一个很有趣的例子：交换两个变量的值&lt;br&gt;一种方法是引入一个中间变量temp，然而python有一个更神奇的方法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;x, y = y, x&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样也可以Σ(*ﾟдﾟﾉ)ﾉ&lt;/p&gt;
&lt;h3 id=&quot;输出函数&quot;&gt;&lt;a href=&quot;#输出函数&quot; class=&quot;headerlink&quot; title=&quot;输出函数&quot;&gt;&lt;/a&gt;输出函数&lt;/h3&gt;&lt;p&gt;print()函数用来输出字符信息，或以字符形式输出变量&lt;/p&gt;
&lt;p&gt;print()函数可以输出各种类型变量的值&lt;/p&gt;
&lt;p&gt;print()函数通过%来选择要输出的变量&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bly1fdrchq8nebj20lr06hwfl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;循环语句&quot;&gt;&lt;a href=&quot;#循环语句&quot; class=&quot;headerlink&quot; title=&quot;循环语句&quot;&gt;&lt;/a&gt;循环语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for i in range(&amp;lt;计数值&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;表达式&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是Nyanko桑的py交易记录，嘿嘿嘿⸜(* ॑꒳ ॑* )⸝&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://moemoemortimer.github.io/tags/python/"/>
    
  </entry>
  
</feed>
