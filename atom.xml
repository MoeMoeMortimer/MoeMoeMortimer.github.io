<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>银月轻语</title>
  <subtitle>前天看到了小兔子，昨天是小鹿，今天是你。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://moemoemortimer.github.io/"/>
  <updated>2016-08-22T06:03:50.709Z</updated>
  <id>https://moemoemortimer.github.io/</id>
  
  <author>
    <name>Nyanko Chan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何得与凉风约，不与尘沙一起来。</title>
    <link href="https://moemoemortimer.github.io/2016/08/21/something-about-relationship/"/>
    <id>https://moemoemortimer.github.io/2016/08/21/something-about-relationship/</id>
    <published>2016-08-21T10:50:41.000Z</published>
    <updated>2016-08-22T06:03:50.709Z</updated>
    
    <content type="html">&lt;p&gt;友達，是种怎样的存在呢。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;我的微信被泄露了，微信里仅有的几个大学同学似乎没什么理由透露我的信息，稍稍推断一下可得另外一种可能，大概是从实习报名表上得到我的手机号的，但是那也得知道我的名字才能查到手机啊。或者还有其他可能。总之，来者何人，用意何在，这不得不引起我高度的戒备。&lt;/p&gt;
&lt;p&gt;马上又到新生入校的日子了，我一直没有加新生群，不知道这种选择之后会不会让我吃亏，但自己确实不喜欢新生群里学长学姐男扮女女扮男，或者假扮新生，起哄新生爆照，套路满满的流氓样子。做人要厚道，多一点真诚好不好。&lt;/p&gt;
&lt;p&gt;今天和舍友散步时候又说到我们今年的新生群，似乎新人们自己又搞了个只有自己人的新群，她对这点颇有微词，说不和学长学姐们搞好关系，还想不想混了昂。&lt;/p&gt;
&lt;p&gt;我怔了下，其实这话是开玩笑的我明白，但这种想法，我之前也有过的。&lt;/p&gt;
&lt;p&gt;我高三毕业那个寒假没进什么新生群，是来了之后才加的，记得当时有一个社团纳新，电话面试的时候问我自认为有什么缺点，我说自己对别人总是恭恭敬敬的很有礼貌，但时常会将自己的姿态摆的过低，近乎卑微。感觉电话那边好像愣了一下（装逼成功2333）实话说这个答案也是突然窜到脑海中的，说是这么说的，但后来我确实对学长学姐很…客气。可能是初来乍到，安全感极度匮乏之下的心理状态吧。&lt;/p&gt;
&lt;p&gt;大学里班主任的作用被极大地弱化，唯一的消息来源就是学长学姐们了，但我发觉自己真的是路人甲那一类的，学长学姐帮忙选课，带着逛校园啊，要不就是部长谈心什么的这些事我都没经历过，尽管如此能多认识一个人，好友列表里又多了一个人，心里面也是蛮开心的。唉…怎么觉得自己好闷骚。&lt;/p&gt;
&lt;p&gt;不过越到后来，我就越纳闷：&lt;/p&gt;
&lt;p&gt;明明大家都差不了一两岁，学识心智也差不了多少，为什么非得学姐学长学弟学妹地相互称来道去呢？是不是这样能以较低的成本拉近关系？毕竟谁不希望别人对自己客客气气的。&lt;/p&gt;
&lt;p&gt;我真的应该好好感谢学长学姐们没有对我爱搭不理的。哈哈，说不定是由于我态度诚恳。可是最近也很好奇如果我是个学长，是怎么看待接近我的学妹的。原谅我的敏感，我认为“学妹”二字尤为暧昧，而且认为将自己摆在学长之位喜欢摆架子的人必定会轻视向他们寻求帮助的学妹。&lt;/p&gt;
&lt;p&gt;那么这种关系就是不对等的。朋友一定是在精神平等的基础上建立起来的。&lt;/p&gt;
&lt;p&gt;我深知不能随意轻视别人，因为这往往是因为自己无知。&lt;/p&gt;
&lt;p&gt;可是连脸还认不清就开始套路别人，是觉得学妹有多好骗啊==b&lt;/p&gt;
&lt;p&gt;至此为止，我的大学真是蛮孤独的。soul mate列表里至今没有大学里认识的朋友，没什么能真正愿意和我交流的人。我总觉得交流思想是加深友谊一个很重要的环节，这样可以发现价值观的不同之处，但这种差异又不会像男女朋友那样引起矛盾，反而会提供一面审视自己的镜子。以此互补或者得到长足的进步。也可能是自己是个女生的缘故，有很多时候放不太开。这能怪谁去？只能怪我咯。&lt;/p&gt;
&lt;p&gt;突然想到了高中时候在语文练习册上看到了一篇文章，当时自己把它撕下来送给了某人，不过最后还是没能做成真正意义上的朋友（我认为的）。&lt;/p&gt;
&lt;p&gt;我真的很喜欢这篇文，可今天怎么也百度不到，也必应不到（因为网速太慢了google根本上不去，自己也记不太清具体的内容），最后的最后终于在教室人少了一半的时候网速变快了，谷歌娘真是我亲娘TAT！！MUA=3=!!&lt;/p&gt;
&lt;h2 id=&quot;交往的距离-——马德&quot;&gt;&lt;a href=&quot;#交往的距离-——马德&quot; class=&quot;headerlink&quot; title=&quot;交往的距离  ——马德&quot;&gt;&lt;/a&gt;交往的距离  ——马德&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;交往的质量在于距离。&lt;/p&gt;
&lt;p&gt;在友谊的框架内，你第一个想起的人，一定是最好的朋友。当然，他若第一个想起的也是你，那么，你俩一定是两心相悦的至交。&lt;/p&gt;
&lt;p&gt;你会发现，你与那个一辈子都要好的朋友之间，是有距离的。这个距离，不远，也不近；不疏，也不密。是一颗心对另一颗心的不绝欣赏，是一段情对另一段情的永恒仰望。&lt;/p&gt;
&lt;p&gt;交往过度其实是很致命的。这有点像吃饭，无论多么可口的佳肴，都是不能总吃的。胃不说什么，大大咧咧，但一颗敏感的心，早已变得挑剔、厌烦。这时候，极平常的一句话，极微小的一件事，都会引起交往的一次海啸。&lt;/p&gt;
&lt;p&gt;是的，山珍海味也有吃腻的时候。在交往的理想结果上，你不要期待永远的如胶似漆，你能不断地接近与契合，就够了。&lt;/p&gt;
&lt;p&gt;平素间，推杯换盏，称兄道弟，鞍前马后，阿谀奉承的人，不是朋友，是利益的结合体。超出常情的亲密无间，不是在交往，是在勾结，在利用，在狼狈为奸。这样的结合体，聚得快，散得也快，刚才还好得一塌糊涂，转眼间，就可以翻脸到分崩离析。&lt;/p&gt;
&lt;p&gt;费了心思的交往，叫周旋，累；耍了心机的交往，叫算计，阴。真正的交往，是至简至真的，一扇春天的门开了，一扇含笑的门阖上，然后，天地淡然。&lt;/p&gt;
&lt;p&gt;如果一个人一辈子都没有与别人真正交往过，不是孤高自傲太过超脱，就是品性猥琐不被人所容。当然了，若许多人都是你结交的朋友，恐怕更多的是狐朋狗友。佛无至爱，只有众亲，我们不是佛，我们的心里，一辈子真正接纳的，只会是有限的几个人，更多的都成了我们生命中的匆匆过客。&lt;/p&gt;
&lt;p&gt;我觉得最好的交往，不是双方有意识的吸附与粘合，而是彼此间无意识的渗透与融入。吸附与粘合，常常怀有目的性和功利欲，或含蓄，或浓烈，总之，看起来，有些心怀鬼胎；而渗透与融入，则不然。云淡风轻的，风倏忽间来，云恬淡着去，无欲无求，是心灵最真挚的握手，是情感最纯净的需求。&lt;/p&gt;
&lt;p&gt;历史上，俞伯牙与钟子期，高山流水，贵为知音。钟子期死后，俞伯牙黯然地把琴摔了。也许，在他看来，世界上再美的乐声，如果无知音来赏，不如任天籁的香魂归去，让它成为绝唱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不过他写的太过理想化了，能遇到有相同喜好的志同道合的伙伴已实属不易，比这更进一步的知己真是太难得了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;友達，是种怎样的存在呢。&lt;/p&gt;
    
    </summary>
    
    
      <category term="胡言乱语" scheme="https://moemoemortimer.github.io/tags/%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>《玉子爱情故事》——影评</title>
    <link href="https://moemoemortimer.github.io/2016/08/21/Tamako-Love-Story/"/>
    <id>https://moemoemortimer.github.io/2016/08/21/Tamako-Love-Story/</id>
    <published>2016-08-21T08:05:33.000Z</published>
    <updated>2016-08-23T01:07:57.393Z</updated>
    
    <content type="html">&lt;p&gt;一直想看的，很萌很治愈的一部电影。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/c3c8eb1bjw1f729bifclpj21kw0vuadg.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;契机&quot;&gt;&lt;a href=&quot;#契机&quot; class=&quot;headerlink&quot; title=&quot;契机&quot;&gt;&lt;/a&gt;契机&lt;/h2&gt;&lt;p&gt;最初是在B站几个MAD里面看到的这部电影的几个素材，男女主用纸杯电话交流，感觉很有爱，打开弹幕知道了这是出自《玉子爱情故事》。今天终于有机会看完它了~~&lt;br&gt;《玉子爱情故事》是京都动画制作的TV动画《玉子市场》的剧场版动画，于2014年上映。坊间有京阿尼出品，必属精品的传言(?)比如当年备受好评的《日常》，不过京阿尼的动画我还真没看过几部。听说京都动画对妹子一直很优待，确实，《玉子》制作还算精良，几个妹子的角色刻画得都很萌，玉子那三根会跳舞的呆毛直直戳中我心。还有声优也是一大加分项。嗯嗯，还有不得不说的是，男主这人设也挺帅的呀(●’◡’●)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/c3c8eb1bjw1f729qkby4cj21kw0w1wlo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;楔子&quot;&gt;&lt;a href=&quot;#楔子&quot; class=&quot;headerlink&quot; title=&quot;楔子&quot;&gt;&lt;/a&gt;楔子&lt;/h2&gt;&lt;p&gt;讲真，没看过TV版的我看到开头这只鸟的番外还是挺蒙逼的，特别是它它它捏麻糬的时候！！&lt;/p&gt;
&lt;p&gt;纳尼？！卧槽吓得我平板都掉了，这是啥？&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/c3c8eb1bjw1f728zdys8uj21kw0vuqax.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;所有脑子里给出的答案是欧派的你们，都！是！hen！tai！&lt;/p&gt;
&lt;p&gt;因为正面是这样的~&lt;br&gt;多么卡哇伊~~&amp;gt;o&amp;lt;&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/c3c8eb1bjw1f7294pypl3j21kw0vxagv.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;面对这种不按套路出牌的剧场版前言，我只能说：女人，你成功地引起了本王的注意_(:3」∠❀)_&lt;/p&gt;
&lt;h2 id=&quot;故事主线&quot;&gt;&lt;a href=&quot;#故事主线&quot; class=&quot;headerlink&quot; title=&quot;故事主线&quot;&gt;&lt;/a&gt;故事主线&lt;/h2&gt;&lt;p&gt;《玉子爱情故事》的男主和女主是青梅竹马。&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/c3c8eb1bjw1f72961mk29j21kw0vywkv.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/c3c8eb1bjw1f7296r3hk9j21kw0w1qba.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bjw1f729b0w61aj21kw0w47cc.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;本片将时间背景设在高三。神菜提议要在高中最后一个夏天与棒舞社的大家制造回忆，然后从书包里掏粗一个单子。&lt;/p&gt;
&lt;p&gt;这个酥包的抖M脸，2333红红火火恍恍惚惚。&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/c3c8eb1bjw1f72cd3pvcgj21kw0vxtdr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还有这个突然中二起来的热血台词~&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/c3c8eb1bjw1f729ilvzb6j21kv0vytik.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;关于“制造回忆”&quot;&gt;&lt;a href=&quot;#关于“制造回忆”&quot; class=&quot;headerlink&quot; title=&quot;关于“制造回忆”&quot;&gt;&lt;/a&gt;关于“制造回忆”&lt;/h3&gt;&lt;p&gt;日本的影视剧好像很喜欢提这个说法（或许是我不太接触大陆脑残剧的缘故？），而且每次提到这个词都给我留下很深的印象。比如《一吻定情》直树和琴子在高三暑假最后一天终于制造的回忆（诶诶居然也是高三的夏天…诶果然这种浪漫因子只会在二次元里出现啊），还有最近追的《心有所属》MISAKI在烟花大会上想制造与千秋前辈的美好回忆。从某种角度来说，只有制造了回忆，人物的关系才能发展，电视剧才能拍的下去，观众们也好有个看头啊。不过有一点我还是不太明白，回忆为什么要被制造出来呢？那些美好的瞬间，让其自然发生不是很好么~那些事情是值得回忆的，难道人们在事前已经预判了么？那多残忍，有些不经意的小事，偶然袭上心头的时候，才会蓦然发现其可贵之处。不过这种心态也不乏其积极之处，事前做好准备，机会来了就牢牢把握，在向未来前进的时候，能够顾及到身后，让当下变得有意义的同时，能在寂寞失落时给自己留一个念想聊以慰籍。&lt;/p&gt;
&lt;p&gt;在小绿的助攻下，饼藏终于表白了~&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/c3c8eb1bjw1f72af70i9xj21kw0vq450.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里的『めっちゃくっちゃ』(mechakucha)译作“非常非常”，有感情胡乱地出现而且喷薄而出之意，这种强烈的感情色彩在含蓄的日语里是很少见的，搭配少男少女真是再好不过惹~&lt;/p&gt;
&lt;p&gt;然后玉子就被吓得…掉进了水里~！&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bjw1f72cu0xskej21kw0vx148.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之后整个人就傻了~丧失所有行为能力，因为麻糬和饼藏的读音很像，所以她把所有的麻糬都说成了饼藏~~&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/c3c8eb1bjw1f728fert05j21kw0vvn5w.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为玉子的逃避，饼藏变得越来越苦恼和难为情~咖啡店的老板一席话让他把加砂糖的勺子放了回去，不加糖的咖啡，大概就是在说“青春的苦涩”吧~~&lt;br&gt;“年轻人总是急于求成，就连等待一匙砂糖彻底溶解的耐心都没有。&lt;br&gt;”&lt;/p&gt;
&lt;p&gt;“后悔所带来的苦涩，恰好印证了你曾经有所作为。这一点一滴都将点缀为人生的味道。&lt;br&gt;”&lt;/p&gt;
&lt;p&gt;饼藏要求撤回自己表白的话，玉子反而因此而沮丧。她问朋友们什么时候人会撤回自己说过的话呢？神菜说大概就是觉得很难为情希望对方全部忘掉的时候吧。对于该如何答复饼藏的问题，神菜给出了无敌提案，天哪这里简直萌哭了！！&lt;/p&gt;
&lt;p&gt;“当看到大路同学在斜45度角时，就这样挡住路（摔倒在地2333），以此为契机，”之前的事  谢谢你，你能这么看待我  我很高兴，下次来帮我造房子吧！！” ”&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bjw1f72cf61bx7j21kw0w5jzi.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之后就是各种助攻，然后又是一轮日剧跑上线，100次里才能接到1次的玉子这次稳稳地接住了纸杯电话~然后~~&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/c3c8eb1bjw1f72chd9yyaj21kw0vy44n.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bjw1f72cgrgdmkj21kw0w212c.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/c3c8eb1bjw1f72b3tnrsvj21kw0vydp7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;『最喜欢饼藏了！请讲、』&lt;/p&gt;
&lt;h3 id=&quot;关于未来&quot;&gt;&lt;a href=&quot;#关于未来&quot; class=&quot;headerlink&quot; title=&quot;关于未来&quot;&gt;&lt;/a&gt;关于未来&lt;/h3&gt;&lt;p&gt;我觉得这是青春题材的日影日剧必不可少的一个话题~《一吻》里面有看到周围人都找到了自己的梦想而着急的琴子（虽然寻找梦想这几集变成了整部剧一个不大不小的bug），《玉子爱情故事》里的玉子和琴子很像啊~不过电影就没那么多篇幅交待之后的事情了~这可以算作是青春电影的教育意义？总之就是人要为自己定下清晰的目标，就算现在还有些迷惘，有喜欢的人陪伴也一定会跨过重重阻碍的。&lt;/p&gt;
&lt;h2 id=&quot;其他有爱的point&quot;&gt;&lt;a href=&quot;#其他有爱的point&quot; class=&quot;headerlink&quot; title=&quot;其他有爱的point~&quot;&gt;&lt;/a&gt;其他有爱的point~&lt;/h2&gt;&lt;p&gt;cat on&lt;br&gt;cannon23333&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bjw1f72cfubo1ij21kw0w10yc.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;变态麻糬娘（来自官方吐槽23333）~&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/c3c8eb1bjw1f728dquq60j21kw0vx12i.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还有走错片场的有马公生君~&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bjw1f72ckm0gegj21kw0vxgtl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;搓脸~小小的玉子好软yoooo&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/c3c8eb1bjw1f72cg4ubfzj21kw0w1dmk.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;END&quot;&gt;&lt;a href=&quot;#END&quot; class=&quot;headerlink&quot; title=&quot;END&quot;&gt;&lt;/a&gt;END&lt;/h2&gt;&lt;p&gt;其实电影本身没有什么大道理大悬念，只是简简单单干干净净的爱情故事，但叙事十分流畅，没有什么拖沓感，让人心里面软乎乎的感觉很舒服(～￣▽￣～)&lt;/p&gt;
&lt;p&gt;一部软妹香气满满的讲述青梅竹马爱情故事的激萌的片子，安利给你~~&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/c3c8eb1bjw1f729n8ke6hj21kw0vxtgz.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一直想看的，很萌很治愈的一部电影。&lt;br&gt;
    
    </summary>
    
    
      <category term="电影" scheme="https://moemoemortimer.github.io/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>HDU 2209 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/18/hdu-2209/"/>
    <id>https://moemoemortimer.github.io/2016/08/18/hdu-2209/</id>
    <published>2016-08-18T13:05:28.000Z</published>
    <updated>2016-08-18T13:17:03.802Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2209&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const int INF = 1 &amp;lt;&amp;lt; 20;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char s[25], t[25];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int ans = INF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(scanf(&lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, s) != EOF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int len = strlen(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; len; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            t[i] = s[i] -= &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int ans = INF, num = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 1; i &amp;lt; len; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(s[i-1])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                s[i-1] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                s[i] = !s[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                s[i+1] = !s[i+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!s[len-1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans = min(ans, num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t[0] = !t[0];t[1] = !t[1];num = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 1; i &amp;lt; len; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(t[i-1])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                t[i-1] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                t[i] = !t[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                t[i+1] = !t[i+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!t[len-1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans = min(ans, num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ans == INF)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;NO\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>转载：3xian之所在</title>
    <link href="https://moemoemortimer.github.io/2016/08/18/repost/"/>
    <id>https://moemoemortimer.github.io/2016/08/18/repost/</id>
    <published>2016-08-18T05:02:00.000Z</published>
    <updated>2016-08-18T06:25:22.318Z</updated>
    
    <content type="html">&lt;p&gt;痛击我心的一篇ACM退役文。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;a href=&quot;http://davidzai.blog.163.com/blog/static/1871262120101823540952/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址 @GDUT 3xian&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;3xian之所在&quot;&gt;&lt;a href=&quot;#3xian之所在&quot; class=&quot;headerlink&quot; title=&quot;3xian之所在&quot;&gt;&lt;/a&gt;3xian之所在&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;最后一天，漫天飘起了雪花，假装欢送我离去。&lt;/p&gt;
&lt;p&gt;这次WF之战不太顺利，早期的C题大概花了1秒钟构思，然而由于输出格式多了一个空格直到两个半小时才逃脱Wrong Answer的纠缠。还好lynncui在期间独挡一面过掉D。最终成绩不好，然而没有遗憾，从不遗憾。&lt;/p&gt;
&lt;p&gt;相比之下，来自全球的队伍让我看到了很强大的实力，每一道题都有人过，包括SJTU欺骗性提交的H都被人干掉了。身为地球人我感到自豪。&lt;/p&gt;
&lt;p&gt;WF之旅很奢华（Sample: 1300一晚的酒店，99一顿的早餐），活动很多，服务很好。但最终念念不舍的是各位一见如故的朋友们，至于为什么一见如故我也不得而知。按HH师傅说，That’s what ACM brings to us。也感激于HH师傅作为浙大教练，却为我们摄下了更多的赛场瞬间。&lt;/p&gt;
&lt;p&gt;早早就打算把今年作为退役战，因为我相信，大学生涯完全耗散在一门竞赛上是不太妥当的事情。然这次的经历让我特别舍不得各路朋友们，如果有机会还是很想拉大伙喝一些酒，谈一下天。虽说退役，此后我仍然会找有趣的题目做做，仍然会投入很多时间在算法之中，但不再关心比赛的事情。&lt;/p&gt;
&lt;p&gt;最后一天，脑海里全是这两年ACM生涯的片段。其实早就想记下ACM生涯中复杂的情绪，可担心把事情说得太明白会破坏一些友谊。如今想来，倘若批判不是直白的，那么赞美就是没有意义的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;初出茅庐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;刚踏入大学校门的时候，并没有听说过ACM。跟班里大都数同学一样，大一接触C语言，但中学时候对ASP和Flash的AS比较熟悉。大一被fyj老师看中，进了一个研究生为主的项目团队，并没有给我什么任务，只让我学东西，事实上也没学什么东西，倒是里头一个师兄给我接了一些私活，我一个人包做ASP的商城、论坛之类，完成一项大概花三个星期，报酬1000+。赚了一些钱之后就翘了一大片课，买机票去厦门跟前女友过日子。回想起来觉得有点不可思议。那时候确实过得很潇洒，平时做各种各样喜欢做的事情，班里还有人拜我为师学吉他。&lt;/p&gt;
&lt;p&gt;大一上学期的期末，跟4h去喝酒的时候他首次提起ACM（其实他指的是OJ），我马上表示这是一种很有趣的事物，公平而富有挑战性。当晚回去就跑到HDOJ尝试，下面这个是处女交。&lt;/p&gt;
&lt;p&gt;419087    2007-12-04 20:19:32    Wrong Answer    1000    0MS    0K    82 B    C    3xian&lt;/p&gt;
&lt;p&gt;PS：HDOJ的A+B确实比较折腾，对于不了解OJ模式的人来说，哪里知道用EOF来做什么。&lt;/p&gt;
&lt;p&gt;接下来的几天很快就做掉了最大子串和，高精度加法什么的。当初想按题号顺序做，很容易想象，活生生被1007卡死了（二维最近欧几里得点对）。那时候大号小号一共交了两百多次，最后是给水过去的——随便按两个方向排序，然后只比较相邻的点。话说回来，即便是水过去已经不容易了，一个不知算法为何物的土人，要想出经典的分治法和扫面线法都是不太可能的事情，更别说线性筛法。而这个题目给我的最大启发是：原来C语言有qsort这种东西。&lt;/p&gt;
&lt;p&gt;晚些找4h单挑了几次，随机抽题号，比谁AC得快，战战兢兢地全胜。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;入队&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二个学期的时候，在公共垃圾桶里瞄见了一张ACM队招新传单，是的，是垃圾桶，我把它从垃圾桶里掏出来了。必须的，跟4h一起去面试。问，挂过科没有。 我说我挂了历史之类的。（其实还挂了高数，但是“之类”是一个海纳百川的辞法……所以不算欺骗。一年之后领队发现我挂过高数，一脸想踢我出队的样子。）接着，我被考到快排的时间复杂度，4h抢答nlogn。我说，我已经在杭电做了一百题了，够不。曰，到时候看你校赛的表现。&lt;/p&gt;
&lt;p&gt;后来校赛拿了第3名，前两名大三的至今搞不清是谁。其实校赛里头有一道最大子串和，我没读懂题意，否则估计就夺冠了？反正是顺利入队，并直接被扔去省赛作敢死队。当时我跟领队说过这样一句话让他觉得特无聊，我说，明年的这个时候我肯定是我们学校最猛的。&lt;/p&gt;
&lt;p&gt;另外当时队里最受宠的是06级的wjs，我又悄悄跟4h说，明年的这个时候，06级最猛的不是wjs，而是ccf。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ziliang&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不得不提到这个人。ziliang是广工ACM近代史的鼻祖，07年为广工夺得了的地区赛的首牌和首银。一路以来给我们指引方向，尽管细节上没指点太多，其实也没必要指点太多。在我看来他的思维能力比现在的一批人高一个档次，估计也是属于百年孤独的类型。&lt;br&gt;从我入队开始ziliang就开始忽悠每一个人。比如一开始假装师姐来掏我们的底细，当时她（他）问我是不是搞过OI，我答：OI？OJ吧……&lt;br&gt;然ziliang的影响力之大也造成了不好的影响。队里的人都膜拜他，膜拜到每天都陪他在Q群里吹水。平均下来每天要吹两三个小时甚至更多，这算不算是变相自杀。早期我试图融入这样一种氛围，毕竟孤立难以生存。后来发现融得很不舒服，权衡之后选择了屏蔽Q群。事实上队里的这种现象归根结底跟ziliang是无关的，不是他不知道自己在干什么，而是各位队员不知道自己在干什么。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;周赛&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;进队之后我们新生被组织起来参加周赛，也正是从这个时候开始，刚进队的我就对整个团队失去了归属感。本来按我入队时候的实力来说，甩开第二名几题应该没有什么问题，但事实上有时候我连冠军的位置都不保。是的，从网上找代码作弊的人太多了。不想点名也没必要点名，男生很猖狂，女生也很猖狂。当时我看到很多可悲的现象，比如有些没作弊的人因为被人狂虐而丧失信心而淡出ACM，比如有的人自己作弊之后私底下还跟我说谁谁谁作弊，比如带队老师根本就不关心我们这儿发生了什么。总的来说就是，广工当时这么菜的ACM队，大家居然还挖空心思通过坑自己人来满足那点可怜的虚荣，真他妈作孽。&lt;/p&gt;
&lt;p&gt;最初参加周赛的时候，我是无比的紧张，无比的投入，以至于后来无比的失望。之后无论是各种周赛，我看到ranklist上熟悉的账号们我就不想再摸键盘。去年秋天我收取集训总结的时候看到很多人都说我周赛的时候总是“火星般消失”，这个简单的原因，没人体会得到。&lt;/p&gt;
&lt;p&gt;尽管如此，周赛之中还是有一些搞笑的回忆，比如Lynncui敢于随机敢于打表，比如wjs用一次不回溯的DFS水过了最短路，比如yqj企图用long double过各种高精度，比如我大一比赛的时候“发明“了Prim、Disjoint Set，比如我从牙缝里刷出芝麻的时候才发现爸爸妈妈在我周赛的时候做了各种补充能量的点心。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;长进&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从开始到现在，我迷恋于算法，而最终并没有成为一个优秀的ACMer。这一点跟ziliang相反，他不喜欢站在巨人肩上，他知道比赛最重要的是战术和技巧。必须要看到，玩ACM跟玩算法是不同的事情，ACM是考验智慧、考验综合素质的，我敢大言不惭地说，ACM玩得好甚至不需要去刻意学什么算法。虽然我们偶尔见到一些题目需要一些成熟的经典的算法，那些题目是我喜欢的题目，但是那些题目属于最垃圾的ACM题目。另一角度来说，很多人觉得自己ACM出成绩了就代表自己算法不错了，这是一种错误观念，当你深入任何一个方向的算法领域的时候，你会发现ACM那点东西太小儿科了，太不入流了。说白了，ACM是打着算法的幌子来让大家比脑子。&lt;/p&gt;
&lt;p&gt;粗略统计，鄙人两年来做题1.6K，看国内外论文200+，看书十来本。最终变成现在这个样子……什么样子我自己就不评论了，你觉得是什么样子就是什么样子。&lt;/p&gt;
&lt;p&gt;对于ACMer来说，Matrix67早已放过话，“USACO你老老实实一个字也别看解题报告，做完你就无敌了”。我们随处可见一些做了很多很多题目实力还上不去的人，此类八成是是有看解题报告的习惯，其中包括想都没想就冲进discuss里头瞄来瞄去。&lt;/p&gt;
&lt;p&gt;不由得想起一个人。08年秋天，ACM圈子冒出了一个博客点击率很高的家伙，叫zfy。他的出现让不少人长了见识，不得不表示称赞。本来他是一个作风不错的人，但是在一定程度上让一些人养成了新的坏习惯——做不出题就找论文，这跟找解题报告有什么区别呢，就名字不同。我们学校肯定也有人觉得，三鲜是不是脑子被驴舔了，做个破题用不用看那么多论文。事实上我基本不在做题的时候碰论文，倘若两者糅合在一起，最终结果基本就是这头感受不到论文的内涵，那头题目也白做了。&lt;/p&gt;
&lt;p&gt;其实在我们这种环境下提高还是比较不容易的，一来身边没什么人可以提供帮助，二来各路大牛也不喜欢搭理菜鸟。很多时候就需要死磕，一个人死磕。记得当初通宵磕V图，通宵磕动态树，过年回老家旁边开几围麻将窗外小屁孩放炮竹我在黑灯瞎火翻译后缀树。如之前所说这些东西其实跟ACM关系不大，但我心里总会有一种感觉，人家OI的娃们随手拈来的东西你写不出来就没法跟人家比。好比08年地区赛的网络赛那回，人家纷纷秒杀的题目，我们全校没一个人听说过那些个算法的名字。&lt;/p&gt;
&lt;p&gt;后来比赛经历得多了，也慢慢给自己有了定位。时常在网上看到很多人比完赛唉声叹气，也有些人号称“本来有夺金的实力”、“没发挥好”。我曾经也有段时间神勇地跑去做掉很多难题，一度以为自己到了登堂入室的水平，后来发现完全不是这么一回事。真正的高手是什么样的，他们不需要吃饭时候的冥想，不需要靠洗澡时候的灵光一闪，他们比赛的时候坐在那儿就能熟练地做出各种难题，他们在读错题的时候能保证成绩，在数据错的时候能保证成绩，在没人敢提交的时候果断提交，在比赛快结束的时候冷静编码。简单来说就是，他们不仅仅是做题能力强，而更是综合素质强。比赛之后说太多“本来”、“如果”的人，属于心理素质欠佳，这是综合素质重要的一块，也是阻碍长进的一块。因此，当你没有达到预期的目标，根本就不应该想着你丢了一块牌，而应该想想自己是否真的值那一块牌。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;境内境外&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个话题我以前写过，但是删掉了。&lt;/p&gt;
&lt;p&gt;国内的ACM圈子总是表现出一种浮躁的风气，尽管不缺乏超强的人，但强人都很低调，或者说，强校更多是闭门造车。可以去看看国内ACM最火的POJ论坛，琳琅满目的欠揍的东西：求/贴数据的、求/贴代码的、叫人家来查错的、日题目的、炫耀的、留名的、二三流人物相互膜拜的。看看站内信，多少是求代码的（我的原则是问我思路的一定悉心回答，要代码的一律无视）。再看看百度到的解题报告，多少是相互抄袭不求甚解的。&lt;/p&gt;
&lt;p&gt;而国外，我不敢说得太完美，毕竟我对国外了解不算太多。首先一点，国外的OJ很少上述欠揍的东西。自从把做题重心放到国外的OJ，用邮件跟一些外国选手联系得越来越多，他们发邮件的时候会非常严谨，几乎每一句都会给出证明，至少会有一个简单的交代，有时候附件里头会附上几篇论文。他们从来不贴代码，但如果你脑筋实在转不过来，人家会问你是否需要代码。尤其是在SPOJ，我结识了俄罗斯/巴西/印度/美国/加拿大的朋友们，感谢他们给我带来的所有的解题思路的启发和做人态度的启发。这里说一个小插曲，曾经有一位朋友赐我两篇俄文的极品论文，全文翻译成中文之后俨然成为天书，全文翻译成英文之后仍然是天书，人肉翻译成中文还是读不下去，最终人肉翻译成英文然后反复阅读，终有所成……当时的壮举让宿舍里直呼我是世界级一流选手。&lt;/p&gt;
&lt;p&gt;我认为，国内信息学竞赛成绩强劲，而IT行业不见得强，从ACM这块就看出端倪。我们这儿大环境是明显不如人的。我作一个不负责任的假设，假设全球所有闭门造车的经典强校都不准参加ACM比赛，那中国队伍就是集体被虐。而行业的发展并不能仅仅依靠强校的寥寥数人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lynncui&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该讲讲我的队友了。首先最要感谢的就是队友Lynncui，一直以来他对我都无比信任，而我却总是在比赛的关键时刻表现出毛躁的一面，在此表示愧疚。由于Lynncui年纪偏小，我很奇妙地见证了他这两年从一个胡闹的毛孩变为成熟青年的过程。在我们还没入队的时候，招新群里最高调的就是他，我很清楚地记得当时他咬定PE是因为源代码格式不对……于是我直接把他归为傻逼一类，万没想到Lynncui在未来会成为我最最好的搭档。&lt;/p&gt;
&lt;p&gt;他属于很清楚自己在做什么的人，因此没有动不动就看discuss、解题报告的陋习。尽管我有时候觉得他比较懒，并没有花太多的精力在ACM之中，但由于他的清醒和踏实，只要做一点，就能进步一点，只要花心思，就能见效果。我在我们学校讨论问题，基本上除了ziliang我就只找过Lynncui。无论是练习还是比赛，他都能保持清晰的思路，尽管有时候向他灌输一种新思想会感觉他硬得像石头一样。于是我们队有一招最常用最有效的战术：我有想法了就往Lynncui脑袋里灌……艰难地让他认可之后基本上就是无误的，然后他坐我旁边看着我写，一交一个准。不幸的是WF的后半场我自己已经坐不稳了，也没能说服他什么。&lt;/p&gt;
&lt;p&gt;当然，Lynncui的个人实力也不是盖的，他的强项就是以穷人的身份参加各种编程比赛赢取衣服。上次GCJ好像排一百多名来着。&lt;/p&gt;
&lt;p&gt;不管怎么说，以他的做事习惯来看，以后肯定不差钱。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4h&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是我最老的搭档，我的每一场ACM比赛都跟他相伴。同时他是我的酒友和玩伴，相比之下ACM队友这个身份反倒是有点逊色。4h入队时候的天赋和知识背景都是很高的，但似乎终究没把ACM当回事。而且怎么说呢，做题比较急功近利，以至于后期进步不明显。曾经瞅见他下数据之后把过不了的数据直接打表AC的猥琐事……甚是愤慨。不管怎么说，他一直能轻松地留在TEAM ONE，这就是他的本事，换个角度看，也是广工ACM队的悲哀。&lt;/p&gt;
&lt;p&gt;对我来说，4h在我的大学生涯扮演者重要的角色。如果不是他跟我喝酒，晚上跟我到处去玩，广工这地方真的不容易呆下去。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DieIng&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这又是一个很信任我的人，感谢他。广工里头，DieIng对ACM的热情仅亚于我，混迹于各大ACM神群，膜拜过各路神牛。DieIng比我们3个晚几个月进入集训队，几乎没有计算机的基础。这家伙也有不少坏习惯，但是特别勤奋，以至于有今天的成绩。我们集训队里大家听得最多的一句话就是DieIng说：又被三鲜鄙视了。我总喜欢挑他的坏毛病，因为我不忍心看着他的热情在做无用功，但他好像觉得特委屈。&lt;/p&gt;
&lt;p&gt;在很长一段时间里，广工就只有我们4个在继续走ACM的路（而且4个还都是同一届，这种狗屎状况今年地区赛还两个队伍夺金，玄妙无比），忘记是谁给我们起了个绰号，曰，四大护法。于是DieIng总是最不幸的，因为一个队是3个人，而他总被排在第4，搞得他的队友要么就是老东西，要么就是小朋友。而我觉得，是DieIng没有冲破自己的那一关，只要他敢站出来朝领队说一句，我不信我比他们3个弱！那么数轮PK之后淘汰的也不一定是他。&lt;/p&gt;
&lt;p&gt;去年我本来打算跟DieIng组队，毕竟2+2比3+1显得有点人性，但最终领队为了成绩还是选择了3+1。还记得跟DieIng为数不多的组队练习中，只要是个题他都说是网络流……没想到后来DieIng领衔出征的哈尔滨地区赛还真的出现了网络流，并且一出就是两道，毫无悬念地，立马就被我们Dieling童鞋秒杀，顺利夺金。这事太不可思议，但无论如何，在自己专注的事情之中取得好成绩是可喜可贺的事情，表示热烈祝贺DieIng。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;招新&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;去年我们ACM队招新，挺滑稽，主力都是大二，招的都是大一。更滑稽的是，我大一时候从垃圾桶里掏出来的招新传单被委任由我来重新设计。当时设计得很精致，还有淡雅背景（打印出来就不见了……），弄了一个赛马的面试题来吸引新生（假装考智力，其实是刷掉那些从网上抄答案的家伙）。&lt;/p&gt;
&lt;p&gt;由于宣传到位，面试的时候来了两百多人，但领队采取了一种愚蠢的模式——分成5条队，分别打分。我心想，我们这儿入门的人都不够5个。之后果然就出现了更愚蠢的事情。当时要求是给每个人打几个分，各项满分是10分，而除了我和DieIng这条队之外，每条队打的分全是7分/7.5分/8分，我当时差点就对其他4个队的人爆粗，这到底是搞永不落空的抽奖还是什么，作为一个筛选环节，优秀的人就应该给9分10分，不行的人就应该大胆往低分打，0分都没有任何问题。最终就是大多数人都无法区分，采取随机晋级。&lt;/p&gt;
&lt;p&gt;招进来的这帮人如今已经是大二了，我没见到有太大成绩。我曾经多次跟他们强调，要把我们的BBS利用起来，大家一起进步才能进步，至今还是凄冷一片。至今这一批人也没有跟我探讨过任何算法问题，仅仅是偶尔找我帮他们的代码查错，找我要标程。&lt;/p&gt;
&lt;p&gt;罢。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;往后&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以后ACM的事情跟我没太大关系。&lt;br&gt;就我认识的人来说，明年出线埃及几率很大的有梦翅@UESTC、小胡浩@HDU、t__nt@ZJU（这个没悬念吧）。祝他们达到自己的目标，埃及肯定比国内好玩。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最后&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我还是在想，如果当年我不去掏垃圾筒里的招新传单，一切又会是什么样子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一点碎碎念&quot;&gt;&lt;a href=&quot;#一点碎碎念&quot; class=&quot;headerlink&quot; title=&quot;一点碎碎念&quot;&gt;&lt;/a&gt;一点碎碎念&lt;/h3&gt;&lt;p&gt;忍不住找到了&lt;a href=&quot;http://davidzai.blog.163.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;他的博客&lt;/a&gt;，里面还有很多发人深省的文章。嗯，我发觉自己是有多浮躁了。前辈说的真是句句戳我痛处。我也应该多反思反思，毕竟开博客的初衷就是为了让自己有个独立思考的空间，博客里也别总塞些劣质的题解，说不定这以后会变成某种意义上的污点和耻辱。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;痛击我心的一篇ACM退役文。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://moemoemortimer.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>HDU 1548 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/18/hdu-1548/"/>
    <id>https://moemoemortimer.github.io/2016/08/18/hdu-1548/</id>
    <published>2016-08-18T00:20:33.000Z</published>
    <updated>2016-08-18T00:25:22.372Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1548&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;一部电梯有N层，每层对应一个$K_i$,只能上或下$K_i$层，当然，小于1和大于N是无效的，问到达指定楼层最少需要几步。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;简单的BFS&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;memory.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_K 210&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const int INF = 1000000000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int N, a, b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int d[MAX_K];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int k[MAX_K];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int dx[2] = &amp;#123;1, -1&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;bfs&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    queue&amp;lt;int&amp;gt; que;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 1; i &amp;lt;= N; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        d[i] = INF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    que.push(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    d[a] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(que.size())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	//从队列前端取出元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int p = que.front();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            que.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //如果取出的状态已经是终点，结束搜索&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(p == b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //上下两个方向的循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; 2; i ++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	//移动后的位置记为(nx, ny)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int nx = p + k[p]*dx[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(nx &amp;gt;= 1 &amp;amp;&amp;amp; nx &amp;lt;= N &amp;amp;&amp;amp; d[nx] == INF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					//可以移动的话，则加入到队列，并且到该位置的距离确定为到p的距离加1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    que.push(nx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    d[nx] = d[p] + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; d[b];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(scanf(&lt;span class=&quot;string&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;, &amp;amp;N, &amp;amp;a, &amp;amp;b) &amp;amp;&amp;amp; N)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 1; i &amp;lt;= N; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scanf(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;k[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int res = bfs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(res == INF) &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;-1\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="BFS" scheme="https://moemoemortimer.github.io/tags/BFS/"/>
    
  </entry>
  
  <entry>
    <title>单细胞生物の生存战争</title>
    <link href="https://moemoemortimer.github.io/2016/08/16/just-nonsence/"/>
    <id>https://moemoemortimer.github.io/2016/08/16/just-nonsence/</id>
    <published>2016-08-16T13:08:24.000Z</published>
    <updated>2016-08-21T13:05:59.907Z</updated>
    
    <content type="html">&lt;p&gt;嘿咻嘿咻~挖一个坑来吐槽✧٩(ˊωˋ*)و✧&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2016-8-18&quot;&gt;&lt;a href=&quot;#2016-8-18&quot; class=&quot;headerlink&quot; title=&quot;2016-8-18&quot;&gt;&lt;/a&gt;2016-8-18&lt;/h2&gt;&lt;p&gt;什么破作业，明明是一样的思想，非要换三种题面，好无聊，今天是我自暑假以来写的代码最多的一次了（？说不定也不是==）&lt;br&gt;天天这样下去，我感觉自己的眼睛要瞎了，擦…&lt;/p&gt;
&lt;p&gt;有点想回青岛回学校回实验室了、这的桌子小了吧唧的憋屈死了…还有辣么多破蚊子TAT…最主要的是网太渣辣嗷嗷嗷，连CF都打不了…&lt;/p&gt;
&lt;p&gt;今天发现之前做过的题又不知道咋写了，赶紧复习复习复习嗷嗷嗷药不能停！&lt;/p&gt;
&lt;p&gt;想在回学校前把去年今年的题都过一遍，不要盲目找题解，要用心。我智力不高，也没有可依靠或相扶持的队友，只能靠自己了，嗯。&lt;/p&gt;
&lt;p&gt;至今还记得老潘讲的那句话，不要尽力而为，要竭尽全力。&lt;/p&gt;
&lt;h2 id=&quot;2016-8-19&quot;&gt;&lt;a href=&quot;#2016-8-19&quot; class=&quot;headerlink&quot; title=&quot;2016-8-19&quot;&gt;&lt;/a&gt;2016-8-19&lt;/h2&gt;&lt;p&gt;java的东西开始上难度了，感觉有点力不从心，我这样两手抓能行么？目测会跪…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;嘿咻嘿咻~挖一个坑来吐槽✧٩(ˊωˋ*)و✧&lt;br&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://moemoemortimer.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces 704A 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/codeforces-704A/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/codeforces-704A/</id>
    <published>2016-08-15T12:13:58.000Z</published>
    <updated>2016-08-15T14:52:55.503Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/contest/704/problem/A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;模拟题，手机上有n个app能接收新消息，有q个事件会发生，接下来q行每行两个数字事件分三种，1 x表示编号为x的app收到一条新消息，2 x表示主人阅读了编号为x的app的所有消息，3 t表示主人阅读了前t条消息（按时间顺序）&lt;/p&gt;
&lt;p&gt;输出每个事件发生后手机上还剩几条未读消息。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;第一次遇到这种模拟题…&lt;br&gt;很想贴这个错误的代码，看起来真的很有条理很对的样子，但是错在ask == 3时，如果有新消息被阅读，那么没法找到对应的app清零。&lt;/p&gt;
&lt;h3 id=&quot;Wrong-Answer&quot;&gt;&lt;a href=&quot;#Wrong-Answer&quot; class=&quot;headerlink&quot; title=&quot;Wrong Answer&quot;&gt;&lt;/a&gt;Wrong Answer&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map&amp;lt;int, int&amp;gt; app;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int n, q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; q)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int sum = 0, fresh = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            app.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; q; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int ask, num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cin &amp;gt;&amp;gt; ask &amp;gt;&amp;gt; num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ask == 1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                app[num]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fresh++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ask == 2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fresh -= app[num];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                app[num] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ask == 3)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int temp = sum - fresh;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(num &amp;gt; temp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    fresh -= (num - temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cout &amp;lt;&amp;lt; fresh &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正确的思路是用&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="STL" scheme="https://moemoemortimer.github.io/tags/STL/"/>
    
      <category term="模拟" scheme="https://moemoemortimer.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="栈" scheme="https://moemoemortimer.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>动态规划</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/dp/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/dp/</id>
    <published>2016-08-15T12:11:36.000Z</published>
    <updated>2016-08-19T09:15:02.691Z</updated>
    
    <content type="html">&lt;p&gt;这里是咸鱼的算法小教室_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;背包问题&quot;&gt;&lt;a href=&quot;#背包问题&quot; class=&quot;headerlink&quot; title=&quot;背包问题&quot;&gt;&lt;/a&gt;背包问题&lt;/h2&gt;&lt;p&gt;请移步&lt;a href=&quot;&quot;&gt;背包问题&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;最长公共子序列LCS&quot;&gt;&lt;a href=&quot;#最长公共子序列LCS&quot; class=&quot;headerlink&quot; title=&quot;最长公共子序列LCS&quot;&gt;&lt;/a&gt;最长公共子序列LCS&lt;/h2&gt;&lt;p&gt;求两字符串最长公共子序列的长度（非连续）&lt;br&gt;定义 dp[i][j] = $s_1……s_i$到$t_1……t_j$对应的LCS长度&lt;/p&gt;
&lt;p&gt;$s&lt;em&gt;1……s&lt;/em&gt;{i+1}$到$t&lt;em&gt;1……t&lt;/em&gt;{j+1}$对应的LCS长度可能是以下三者中的一种：&lt;/p&gt;
&lt;p&gt;1.$s&lt;em&gt;{i+1} = t&lt;/em&gt;{j+1}$时，在$s_1……s_i$和$t_1……t&lt;em&gt;j$的公共子列末尾追加上$s&lt;/em&gt;{i+1}$&lt;br&gt;2.$s&lt;em&gt;1……s&lt;/em&gt;{i}$和$t&lt;em&gt;1……t&lt;/em&gt;{j+1}$的公共子列&lt;br&gt;3.$s&lt;em&gt;1……s&lt;/em&gt;{i+1}$和$t&lt;em&gt;1……t&lt;/em&gt;{j}$的公共子列&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_N 1005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_M 1005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char s[MAX_N], t[MAX_M];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n, m, dp[MAX_N+1][MAX_M+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt; m; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(s[i] == t[j])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j+1] = dp[i][j] + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, dp[n][m]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(scanf(&lt;span class=&quot;string&quot;&gt;&quot;%d%d%s%s&quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m, s, t) != EOF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	memset(dp, 0, sizeof(dp));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        solve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;多重部分和问题&quot;&gt;&lt;a href=&quot;#多重部分和问题&quot; class=&quot;headerlink&quot; title=&quot;多重部分和问题&quot;&gt;&lt;/a&gt;多重部分和问题&lt;/h2&gt;&lt;p&gt;有n种不同大小的数字$a_i$, 每种各$m_i$个。判断是否可以从这些数字中选择若干使他们的和恰好为K。&lt;/p&gt;
&lt;p&gt;艺语君~乃还记得学习深度优先搜索（dfs）的时候辣个入门问题咩？&lt;br&gt;多重部分和可以用DP求解，不过如何定义递推关系会影响最终的复杂度。&lt;/p&gt;
&lt;p&gt;首先看如下定义：&lt;br&gt;_dp[i+1][j] 用前i种数字是否能加和成j&lt;br&gt;为了使前i种数字加和成j，也就需要能用前i-1种数字加和成$j, j-a_i, …, j-m*a_i$中的某一种。&lt;/p&gt;
&lt;p&gt;由此我们可以定义如下递推关系：&lt;/p&gt;
&lt;p&gt;dp[i+1][j] = (0 &amp;lt;= k &amp;lt;= m, 且$k&lt;em&gt;a_i$ &amp;lt;= j时存在使dp[i][j-$k&lt;/em&gt;a_i$]为真的k)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_N 10005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_K 10005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n;  //数列长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int K;  //目标和数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int a[MAX_N];   //值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int m[MAX_N];   //个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bool dp[MAX_N+1][MAX_K+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dp[0][0] = solve;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0;i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt;= K; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int k = 0; k &amp;lt;= m[i] &amp;amp;&amp;amp; k*a[i] &amp;lt;= j; k++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j] |= dp[i][j - k*a[i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(dp[n][K])&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;YES\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;NO\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试数据：&lt;br&gt;n = 3&lt;br&gt;a = {3, 5, 8}&lt;br&gt;m = {3, 2, 2}&lt;br&gt;K = 17&lt;/p&gt;
&lt;p&gt;输出：YES（3*3+8 = 17）&lt;/p&gt;
&lt;p&gt;但是这个算法的复杂度太大，同样的复杂度可以获得更多信息。&lt;br&gt;采用新的方式定义dp数组&lt;/p&gt;
&lt;p&gt;dp[i+1][j] = 用前i种数加和得到j时第i种数最多能剩余多少个。（不能加和得到j时的情况下为-1）&lt;/p&gt;
&lt;p&gt;按照这种方法定义递推关系的话，如果前i-1个数相加能得到j的话，第i个数就可以留下$m_i$个。此外，前i种数加和出j-$a_i$时第i种数还剩下k(k&amp;gt;0)的话，用这i种数加和出j时第i种数就能剩下k-1个。&lt;br&gt;由此我们能得到如下递推式：&lt;/p&gt;
&lt;p&gt;dp[i+1][j] =&lt;br&gt;1) $m_i$                   —-dp[i][j] &amp;gt;= 0时&lt;br&gt;2) -1                      —-j &amp;lt; $a_i$ 或者 dp[i+1][j-$a_i$] &amp;lt;= 0&lt;br&gt;3) dp[i+1][j-$a_i$] - 1    —-其他情况&lt;/p&gt;
&lt;p&gt;这样，只要看最终是否满足dp[n][K] &amp;gt;= 0就可以知道答案了。&lt;br&gt;这个递推式可以在O(nK)时间内计算出结果。再将数组重复利用的话，就得到了如下代码。&lt;/p&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int dp[MAX_K + 1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    memset(dp, -1, sizeof(dp));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dp[0] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt;= K; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(dp[j] &amp;gt;= 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[j] = m[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j &amp;lt; a[i] || dp[j&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;[i]] &amp;lt;= 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[j] = -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[j] = dp[j&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;[i]] - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(dp[K] &amp;gt;= 0)&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;YES\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;No\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个dp表…我也晕晕的(-__-)b&lt;/p&gt;
&lt;p&gt;3 -1 -1 2 -1 -1 1 -1 -1 0 -1 -1 -1 -1 -1 -1 -1 -1&lt;br&gt;2 -1 -1 2 -1 1 2 -1 1 2 0 1 -1 0 1 -1 0 -1&lt;br&gt;2 -1 -1 2 -1 2 2 -1 2 2 2 2 -1 2 2 -1 2 1&lt;/p&gt;
&lt;h2 id=&quot;最长上升子序列问题（LIS）&quot;&gt;&lt;a href=&quot;#最长上升子序列问题（LIS）&quot; class=&quot;headerlink&quot; title=&quot;最长上升子序列问题（LIS）&quot;&gt;&lt;/a&gt;最长上升子序列问题（LIS）&lt;/h2&gt;&lt;p&gt;求长为n的数列中最长上升子序列的长度，上升子序列指的是对任意的i&amp;lt;j都满足$a_i$ &amp;lt; $a_j$的序列。&lt;br&gt;定义dp[i] = 以$a_i$为末尾的最长上升子序列的长度。&lt;/p&gt;
&lt;p&gt;以$a_i$为结尾的上升子序列是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只包含$a_i$的子序列&lt;/li&gt;
&lt;li&gt;满足j&amp;lt;i且$a_j$ &amp;lt; $a_i$的以$a_j$结尾的上升子列末尾，追加上$a_i$后得到的子序列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这二者之一。从而可以得到如下的递推关系：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dp[i] = max{1,dp[j]+1  (j&amp;lt;i且$a_j$ &amp;lt; $a_i$)}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;时间复杂度O($n^2$)。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_N 300&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int a[MAX_N];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int dp[MAX_N];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int res = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dp[i] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt; i; j++) &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[j] &amp;gt; a[i])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dp[i] = max(dp[i], dp[j] + 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = max(res, dp[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试数据：&lt;br&gt;n = 5;&lt;br&gt;int a[] = {4,2,3,1,5};&lt;/p&gt;
&lt;p&gt;输出：&lt;br&gt;3&lt;/p&gt;
&lt;p&gt;此外还可以定义其他的递推关系。如果子序列的长度相同，那么最末位元素较小的在之后会更加有优势，所以我们这样定义DP数组：&lt;br&gt;dp[i] = 长度为i+1的上升子序列中末尾元素的最小值。(不存在时为INF)&lt;/p&gt;
&lt;p&gt;最开始全部dp[i]的值都初始化为INF。然后由前到后逐个考虑数列的元素，对每一个$a_j$,如果i=0或dp[i-1] &amp;lt; a[j] 的话，就用dp[i] = min(dp[i], $a_j$)进行更新。最终找出使得dp[i] &amp;lt; INF 的最大i+1就是结果。这个算法的复杂度还是O($n^2$),我们还可以进一步优化。首先dp数列中除了INF 之外是单调递增的，所以对于每一个$a_i$最多只需要一次更新。对于这次更新究竟应该在什么位置，可以是利用二分搜索，这里具体指STL中lower_bound()函数。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill(dp, dp + n, INF);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *lower_bound(dp, dp+n, a[i]) = a[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, lower_bound(dp, dp+n, INF) - dp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;有关计数问题的DP&quot;&gt;&lt;a href=&quot;#有关计数问题的DP&quot; class=&quot;headerlink&quot; title=&quot;有关计数问题的DP&quot;&gt;&lt;/a&gt;有关计数问题的DP&lt;/h2&gt;&lt;h3 id=&quot;划分数&quot;&gt;&lt;a href=&quot;#划分数&quot; class=&quot;headerlink&quot; title=&quot;划分数&quot;&gt;&lt;/a&gt;划分数&lt;/h3&gt;&lt;p&gt;有n个无区别的物品，将它们划分成不超过m组，求出划分方法数%M。&lt;/p&gt;
&lt;p&gt;这样的划分被称为n的m划分，特别的，当n==m时称作n的划分数&lt;/p&gt;
&lt;p&gt;&lt;em&gt;将基数为n的集合划分为恰好k个非空集的方法的数目称为第二类Stirling数；而将基数为n的集合划分为任意个非空集的方法的数目称为Bell数。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;DP不仅对于求解最优问题有效，对于各种排列组合的个数、概率或者期望之类的计算同样很有用。&lt;/p&gt;
&lt;p&gt;定义dp[i][j] = j的i划分总数&lt;/p&gt;
&lt;p&gt;根据这一定义可以得到怎样的递推关系呢？将j划分为i个的话，可以先取出k个，然后将剩下的j-k个分成i-1分&lt;/p&gt;
&lt;p&gt;考虑n的m划分，如果对于每个i都有$a_i$&amp;gt;0, 那么{$a_i$ - 1}就对应了n-m的m划分。另外，如果存在$a_i$=0,&lt;br&gt;那么这就对应了n的m-1划分。综上，我们可得&lt;/p&gt;
&lt;p&gt;dp[i][j] = dp[i][j-i] + dp[i-1][j]&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_M 105&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_N 105&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MOD 10000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n, m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int dp[MAX_M+1][MAX_N+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dp[0][0] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 1; i &amp;lt;= m; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt;= n; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j - i &amp;gt;= 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][j] = (dp[i][j-i] + dp[i-1][j])%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][j] = dp[i-1][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, dp[m][n]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;多重集组合数&quot;&gt;&lt;a href=&quot;#多重集组合数&quot; class=&quot;headerlink&quot; title=&quot;多重集组合数&quot;&gt;&lt;/a&gt;多重集组合数&lt;/h3&gt;&lt;p&gt;有n种物品，第i种物品有$a_i$个。不同种类的物品可以互相区分但相同种类的无法区分，从这些物品取出m个的话，有多少种取法？求方案数模M的余数。&lt;/p&gt;
&lt;p&gt;为了不重复计数，同一种类的物品最好一次性处理好。于是我们按照如下方式进行定义。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dp[i+1][j] = 从前i种物品中取出j个的组合总数
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了从前i种物品中取出j个，可以从前i-1种物品中取出j-k个，然后再从第i种物品中取出k个添加进来。&lt;br&gt;所以可得如下递推关系：&lt;br&gt;dp[i+1][j] = sigma (dp[i][j-k] (k从0到min(j,a[i])))&lt;/p&gt;
&lt;p&gt;直接计算这个递推关系的复杂度是O($n*m^2$)&lt;/p&gt;
&lt;p&gt;但是递推式可以通过化简变为如下形式。&lt;/p&gt;
&lt;p&gt;dp[i+1][j] = dp[i+1][j-1] + dp[i][j] - dp[i][j-1-$a_i$]&lt;/p&gt;
&lt;p&gt;这样复杂度就下降到O(nm)了。&lt;/p&gt;
&lt;p&gt;测试数据：&lt;br&gt;n = 4;&lt;br&gt;m = 3;&lt;br&gt;M = 10000;&lt;/p&gt;
&lt;p&gt;输出：&lt;br&gt;4 {1+1+2 = 1+3 = 2+2}&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是咸鱼的算法小教室_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://moemoemortimer.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="https://moemoemortimer.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces 705B 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/codeforces-705B/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/codeforces-705B/</id>
    <published>2016-08-15T11:56:35.000Z</published>
    <updated>2016-08-15T14:52:58.845Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/contest/705/problem/B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;两个人玩游戏，将n拆分，交替进行，直到被拆成n个1为止，此时无法继续游戏的那一方输，游戏结束，现在要设计这个游戏，每次向集合里增加一个数，问以当前集合开局，谁会赢。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;1先手，如果n是偶数，那么1赢；如果n是奇数，2赢。&lt;/p&gt;
&lt;p&gt;开局时相当于上一场是2赢。&lt;br&gt;然后判断当前n，n为偶数时则交换胜负方。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="模拟" scheme="https://moemoemortimer.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces 703C 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/codeforces-703C/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/codeforces-703C/</id>
    <published>2016-08-15T11:55:54.000Z</published>
    <updated>2016-08-15T14:57:19.129Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/contest/703/problem/C&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;行人要从(0,0)点走到(0,w)点，速度沿y轴正向不变，最大不超过u，同时有一辆凸多边形的车，给出所有顶点坐标，有一个沿x轴负向的速度v，问行人在不被车撞到的情况下到达终点所用的最短时间。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;所以这到底是为什么？到底为什么能这么做？不可思议…&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef long long LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LL n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;double w, u, v, a, b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;double ma, mi = 999999999;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(scanf(&lt;span class=&quot;string&quot;&gt;&quot;%lld %lf%lf%lf&quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;w, &amp;amp;v, &amp;amp;u) != EOF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scanf(&lt;span class=&quot;string&quot;&gt;&quot;%lf %lf&quot;&lt;/span&gt;, &amp;amp;a, &amp;amp;b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ma &amp;lt; a-v*b/u) ma = a-v*b/u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(mi &amp;gt; a-v*b/u) mi = a-v*b/u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(mi &amp;gt;= 0)&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%lf&quot;&lt;/span&gt;, w/u);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%lf&quot;&lt;/span&gt;, ma/v + w/u);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="数学" scheme="https://moemoemortimer.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="几何" scheme="https://moemoemortimer.github.io/tags/%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ 1061 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/poj-1061/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/poj-1061/</id>
    <published>2016-08-15T07:51:37.000Z</published>
    <updated>2016-08-15T11:32:35.864Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1061&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;这道题去年的集训也有出yoo~~&lt;br&gt;两只青蛙沿同一条纬度线跳，青蛙A的出发点坐标是x，青蛙B的出发点坐标是y。它们向同一方向跳，青蛙A一次能跳m米，青蛙B一次能跳n米，两只青蛙跳一次所花费的时间相同。纬度线总长L米。现在要你求出它们跳了几次以后才会碰面。 &lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;求同余方程组的最小正整数解。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef long long LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LL ex_gcd(LL a, LL b, LL &amp;amp;x, LL &amp;amp;y)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b == 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LL d = ex_gcd(b, a%b, y, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y -= x*(a/b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LL x, y, m, n, l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LL kx, ky;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y &amp;gt;&amp;gt; m &amp;gt;&amp;gt; n &amp;gt;&amp;gt; l)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LL a = m - n, len = y - x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (a &amp;lt; 0) &amp;#123;a = &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;; len = -len;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LL gcd = ex_gcd(a, l, kx, ky);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //背背背&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(len%gcd == 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            LL s = l/gcd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            kx = kx*(len/gcd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cout &amp;lt;&amp;lt; (kx%s + s)%s &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cout &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Impossible&quot;&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="中国剩余定理" scheme="https://moemoemortimer.github.io/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>HDU 2669 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/hdu-2669/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/hdu-2669/</id>
    <published>2016-08-15T04:42:51.000Z</published>
    <updated>2016-08-15T11:14:56.524Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2669&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;求整数x、y使得ax+by = 1,其中x非负。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;若gcd(a,b)!=1，则方程一定无整数解，若gcd(a,b)==1，则一定有解。用扩展欧几里得求出一组特解后，x = x + b/gcd(a, b) &lt;em&gt; t;  y = y - a/gcd(a, b) &lt;/em&gt; t; 均为方程的解。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int gcd(int a, int b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; b == 0 ? a : gcd(b, a%b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int ExEuclid(int a, int b, int &amp;amp;x, int &amp;amp;y)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b == 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int d = ExEuclid(b, a%b, y, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y -= x*(a/b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int x, y, a, b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ExEuclid(a, b, x, y) == 1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(x &amp;lt; 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                x += b/gcd(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                y -= a/gcd(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; &amp;lt;&amp;lt; y &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cout &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;sorry&quot;&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="扩展欧几里得" scheme="https://moemoemortimer.github.io/tags/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>HDU 5690 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/hdu-5690/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/hdu-5690/</id>
    <published>2016-08-15T04:42:33.000Z</published>
    <updated>2016-08-15T10:50:25.711Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5690&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;F(x, m) 代表一个全是由数字x组成的m位数字。计算$F(x,m)\ mod\ k\ \equiv \ c$是否成立。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;xxxxxx = $(10^m - 1)&lt;em&gt;x/9$&lt;br&gt;xxxxxx % k = $((10^m - 1)/9%k &lt;/em&gt; x%k)%k$ = $((10^m - 1)%(9k) /9 * x%k)%k$&lt;br&gt;最重要的就是(10^m - 1)/9%k = (10^m - 1)%(9k) /9 这步转换。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef long long LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LL PowerMod(LL a, LL b, LL c)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LL ans = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a % c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(b &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b &amp;amp; 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ans = (ans * a) % c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b = b/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a = (a * a) % c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int t, cnt = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LL x, m, c, k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cin &amp;gt;&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; m &amp;gt;&amp;gt; k &amp;gt;&amp;gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LL ans = (PowerMod(10, m, k*9) - 1)/9*x%k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Case #%d:\n&quot;&lt;/span&gt;, cnt++);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ans == (c%k))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Yes\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;No\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="快速幂" scheme="https://moemoemortimer.github.io/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>POJ 1006 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/poj-1006/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/poj-1006/</id>
    <published>2016-08-15T04:42:05.000Z</published>
    <updated>2016-08-15T07:49:28.587Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1006&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MOD 21252&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int ExEuclid(int a, int b, int &amp;amp;x, int &amp;amp;y)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b == 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int d = ExEuclid(b, a%b, y, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y -= x*(a/b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int p, e, i, d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int cnt = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(cin &amp;gt;&amp;gt; p &amp;gt;&amp;gt; e &amp;gt;&amp;gt; i &amp;gt;&amp;gt; d)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(p == -1 &amp;amp;&amp;amp; e == -1 &amp;amp;&amp;amp; i == -1 &amp;amp;&amp;amp; d == -1)&lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int  m1 = MOD/23, m2 = MOD/28, m3 = MOD/33;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int t1, t2, t3, y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ExEuclid(m1, 23, t1, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ExEuclid(m2, 28, t2, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ExEuclid(m3, 33, t3, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int s = p*t1*m1 + e*t2*m2 + i*t3*m3 - d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(s &amp;lt;= 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            s += MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(s &amp;gt; MOD)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            s -= MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Case %d: the next triple peak occurs in %d days.\n&quot;&lt;/span&gt;, cnt++, s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="中国剩余定理" scheme="https://moemoemortimer.github.io/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>HDU 1576 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/hdu-1576/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/hdu-1576/</id>
    <published>2016-08-15T04:41:49.000Z</published>
    <updated>2016-08-15T05:23:31.346Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1576&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;输出(A/B)%9973。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;(A/B)%9973 = (A%9973 * B关于9973的逆元%9973)%9973&lt;/p&gt;
&lt;p&gt;求逆元有几种方法，具体见数论部分。&lt;br&gt;该题给出gcd(B,9973) = 1这一条件，因此B的逆元 = $B^{9973 - 2}$&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MOD 9973&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int PowerMod(int a, int b, int c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int ans = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a % c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(b&amp;gt;0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b &amp;amp; 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ans = (ans * a) % c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b = b/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a = (a * a) % c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int t, n, m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cin &amp;gt;&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cout &amp;lt;&amp;lt; (n%MOD * PowerMod(m, MOD - 2, MOD))%MOD &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="逆元" scheme="https://moemoemortimer.github.io/tags/%E9%80%86%E5%85%83/"/>
    
      <category term="扩展欧几里得" scheme="https://moemoemortimer.github.io/tags/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97/"/>
    
      <category term="快速幂" scheme="https://moemoemortimer.github.io/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>HDU 2504 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/hdu-2504/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/hdu-2504/</id>
    <published>2016-08-15T04:41:30.000Z</published>
    <updated>2016-08-18T13:17:02.863Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2504&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;有三个正整数a,b,c(0&amp;lt;a,b,c&amp;lt;10^6)，其中c不等于b。若a和c的最大公约数为b，现已知a和b，求满足条件的最小的c。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;暴力出奇迹&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int gcd(int a, int b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; b == 0 ? a : gcd(b, a%b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int t, n, m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cin &amp;gt;&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 2*m; i &amp;lt;= n; i += m)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(gcd(n, i) == m)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="GCD" scheme="https://moemoemortimer.github.io/tags/GCD/"/>
    
      <category term="暴力" scheme="https://moemoemortimer.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>HDU 1019 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/hdu-1019/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/hdu-1019/</id>
    <published>2016-08-15T04:41:18.000Z</published>
    <updated>2016-08-15T05:13:47.549Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1019&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;求n个数的最小公倍数&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;两个数的最小公倍数LCM = a*b/GCD(a,b)&lt;/p&gt;
&lt;p&gt;初始化LCM = 1，然后不断更新当前lcm与下一个数的最小公倍数，lcm = lcm*$a_i$ / gcd(lcm, $a_i$);&lt;br&gt;我不太会证明，本来以为这样求得的LCM会偏大的…&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int gcd(int a, int b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; b == 0 ? a : gcd(b, a%b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int t, n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cin &amp;gt;&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(t--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cin &amp;gt;&amp;gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        long long lcm = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cin &amp;gt;&amp;gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lcm = lcm*temp / gcd(lcm, temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cout &amp;lt;&amp;lt; lcm &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="GCD" scheme="https://moemoemortimer.github.io/tags/GCD/"/>
    
      <category term="LCM" scheme="https://moemoemortimer.github.io/tags/LCM/"/>
    
  </entry>
  
  <entry>
    <title>HDU 2104 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/15/hdu-2104/"/>
    <id>https://moemoemortimer.github.io/2016/08/15/hdu-2104/</id>
    <published>2016-08-15T04:40:38.000Z</published>
    <updated>2016-08-15T05:13:49.649Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2104&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大意&quot;&gt;&lt;a href=&quot;#大意&quot; class=&quot;headerlink&quot; title=&quot;大意&quot;&gt;&lt;/a&gt;大意&lt;/h3&gt;&lt;p&gt;N人围成一个圈，haha从A开始，每隔M-1个盒子停一下。问他能不能访问到所有的盒子。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;如果M是N的一个因数（为方便理解可以这么想，其实是“如果M和N有公因数时”），那么每圈haha总是会访问固定的那几个盒子，只有当gcd(M,N) == 1时才能访问所有的盒子。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int n, m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(scanf(&lt;span class=&quot;string&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m) &amp;amp;&amp;amp; m != -1 &amp;amp;&amp;amp; n != -1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(__gcd(n, m) == 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;YES\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;POOR Haha\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="GCD" scheme="https://moemoemortimer.github.io/tags/GCD/"/>
    
  </entry>
  
  <entry>
    <title>POJ 3254 解题报告</title>
    <link href="https://moemoemortimer.github.io/2016/08/12/poj-3254/"/>
    <id>https://moemoemortimer.github.io/2016/08/12/poj-3254/</id>
    <published>2016-08-12T10:39:42.000Z</published>
    <updated>2016-08-12T11:08:42.367Z</updated>
    
    <content type="html">&lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3254&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大意：&lt;br&gt;在m*n（m行n列）的田地里种玉米，0表示该位置贫瘠不能种植，1&lt;br&gt;表示可以种植，但是牛们不喜欢挨在一起吃玉米，所以一块玉米地的上下左右不能有相邻的玉米地。问最多解个数。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;状压DP呀···诶呀呀 (～￣▽￣)→))&lt;em&gt;￣▽￣&lt;/em&gt;)o&lt;/p&gt;
&lt;p&gt;状态压缩：把某一状态转换成二进制表示的一个数字存储下来，就比如说该题的田地，每一行都可以对应一个数字，这里就要注意使用状压dp的地图上列数最好不要超过32啊···因为int型也能就存个$2^32 - 1$这么多状态。&lt;/p&gt;
&lt;p&gt;如上所述，首先我们要把每一行的土地状态用row[]存下来，作为基准。&lt;br&gt;其次，因为每一行相邻位置不能种，所以每一行可行的方案就会大大减少，按照这种方法粗略地找出每一行最大可行方案数，在函数init()中实现。&lt;/p&gt;
&lt;p&gt;然后，怎样判断某种状态是否可行呢？&lt;br&gt;我们采用一行一行讨论的方式，用dp[i][j]表示处理到第i行第j种状态时的可行方案数。&lt;/p&gt;
&lt;p&gt;设当前遍历到的状态为x（二进制数），该行基准为STD（同为二进制数），只有当$~STD &amp;amp; x == 0$时才符合要求（请在纸上自行演算）。&lt;br&gt;这一条件满足后，考虑上一行，上一行的某状态与x不出现相邻的1才算符合要求。那么遍历上一行所有状态k &amp;amp; x == 0 时符合要求。这时可以更新状态数了：dp[i][j] += dp[i-1][k]&lt;/p&gt;
&lt;p&gt;注意：代码实现时if语句中不要用（位运算 == 0 ）这样的形式，我也不知道为什么没法判断==0，改成不为0时就continue就可以了。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MOD 100000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n, m, top, row[13], state[1000];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int dp[13][1000];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//通过同行中不能有连续的1这一条件初始化得到可能出现的所有状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int total = 1 &amp;lt;&amp;lt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; total; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i &amp;amp; (i&amp;lt;&amp;lt;1))&lt;span class=&quot;built_in&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        state[top++] = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(scanf(&lt;span class=&quot;string&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;, &amp;amp;m, &amp;amp;n) != EOF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; m; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            row[i] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //二进制转化为十进制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = n-1; j &amp;gt;= 0; j--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                scanf(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                row[i] += k &amp;lt;&amp;lt; j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        memset(dp,0,sizeof(dp));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; top; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(~row[0] &amp;amp; state[i])&lt;span class=&quot;built_in&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dp[0][i] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 1; i &amp;lt; m; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j  = 0; j &amp;lt; top; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(~row[i] &amp;amp; state[j])&lt;span class=&quot;built_in&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int k = 0; k &amp;lt; top; k++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(state[k] &amp;amp; state[j])&lt;span class=&quot;built_in&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    dp[i][j] += dp[i-1][k]%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int ans = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; top; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans += dp[m-1][i]%MOD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, ans%MOD);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是nyanko sama亲手调教出来的解题报告_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://moemoemortimer.github.io/tags/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="状态压缩DP" scheme="https://moemoemortimer.github.io/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9DP/"/>
    
  </entry>
  
  <entry>
    <title>背包问题</title>
    <link href="https://moemoemortimer.github.io/2016/08/12/backpack/"/>
    <id>https://moemoemortimer.github.io/2016/08/12/backpack/</id>
    <published>2016-08-12T09:59:07.000Z</published>
    <updated>2016-08-17T10:53:47.484Z</updated>
    
    <content type="html">&lt;p&gt;这里是咸鱼的算法小教室_(:3」∠❀)_&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;背包问题属于动态规划问题下的一个重要分支。目前本咸鱼只是入了门而已，坑慢慢填就好辣···&lt;/p&gt;
&lt;h2 id=&quot;01背包&quot;&gt;&lt;a href=&quot;#01背包&quot; class=&quot;headerlink&quot; title=&quot;01背包&quot;&gt;&lt;/a&gt;01背包&lt;/h2&gt;&lt;p&gt;给出N个物品的重量和价值，从这些物品中选出一些(可能全选)并装入容积为W的背包，求背包中的物品的最大价值。&lt;/p&gt;
&lt;p&gt;输入： W，n， 接下来第一行是各个物品的重量w，第二行是各个物品的价值v。&lt;/p&gt;
&lt;p&gt;输出： 背包能装入的物品的最大价值。&lt;/p&gt;
&lt;p&gt;之前在学习记忆化搜索的时候接触到的第一个问题就是01背包，小耗子学长也讲的超棒~&lt;/p&gt;
&lt;p&gt;01背包中每件物品只能用一次，定义时dp数组是二维的，dp[i][j]表示处理到第i个物品，背包余量还剩j时能获取的价值最大值。具体实现的时候可以用一维数组。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_N 1005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define MAX_W 1005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n, W;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int w[MAX_N], v[MAX_N];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int dp[MAX_N+1][MAX_W+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    memset(dp, 0, sizeof(dp));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = n-1; i &amp;gt;= 0; i--)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt;= W; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j &amp;lt; w[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][j] = dp[i+1][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i][j] = max(dp[i+1][j], dp[i+1][j - w[i]] + v[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout &amp;lt;&amp;lt; dp[0][W] &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试数据：&lt;/p&gt;
&lt;p&gt;5 4&lt;br&gt;2 1 3 2&lt;br&gt;3 2 4 2&lt;/p&gt;
&lt;p&gt;输出：7&lt;/p&gt;
&lt;p&gt;dp表：&lt;br&gt;0 2 3 5 6 7&lt;br&gt;0 2 2 4 6 6&lt;br&gt;0 0 2 4 4 6&lt;br&gt;0 0 2 2 2 2&lt;/p&gt;
&lt;p&gt;一维数组实现：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	memset(dp, 0, sizeof(dp));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = W; j &amp;gt;= w[i]; j--)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dp[j] = max(dp[j], dp[j - w[i]] + v[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout &amp;lt;&amp;lt; dp[W] &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;完全背包&quot;&gt;&lt;a href=&quot;#完全背包&quot; class=&quot;headerlink&quot; title=&quot;完全背包&quot;&gt;&lt;/a&gt;完全背包&lt;/h2&gt;&lt;p&gt;给出N个物品的重量和价值，从这些物品中选出一些(可能全选)并装入容积为W的背包，求背包中的物品的最大价值。每种物品可以任意挑选多件。&lt;/p&gt;
&lt;p&gt;输入： W，n， 接下来第一行是各个物品的重量w，第二行是各个物品的价值v。&lt;/p&gt;
&lt;p&gt;输出： 背包能装入的物品的最大价值。&lt;/p&gt;
&lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;p&gt;这次同一种类的物品可以选择任意多件了~&lt;br&gt;令dp[i+1][j]表示从前i种物品中挑选总重量不超过j时总价值的最大值。那么递推关系为：&lt;/p&gt;
&lt;p&gt;dp[0][j] = 0;&lt;br&gt;dp[i+1][j] = max{dp[i][j-k&lt;em&gt;w[i]] + k&lt;/em&gt;v[i]}  (k &amp;gt;= 0)&lt;/p&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int n, W;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int w[MAX_N], v[MAX_N];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int dp[MAX_N+1][MAX_W+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt;= W; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int k = 0; k*w[i] &amp;lt;= j; k++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j] = max(dp[i+1][j], dp[i][j-k*w[i]] + k*v[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout &amp;lt;&amp;lt; dp[n][W] &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试数据：&lt;br&gt;W = 7&lt;br&gt;n = 3&lt;br&gt;w[] = {3, 4, 2}&lt;br&gt;v[] = {4, 5, 3}&lt;/p&gt;
&lt;p&gt;输出：10&lt;/p&gt;
&lt;p&gt;dp表：&lt;/p&gt;
&lt;p&gt;0 0 0 0 0 0 0 0&lt;br&gt;0 0 0 4 4 4 8 8&lt;br&gt;0 0 0 4 5 5 8 9&lt;/p&gt;
&lt;p&gt;程序构成了三重循环，由于k的循环最坏可能从0到W，所以这个算法的时间复杂度是$O(nW^2)$。&lt;/p&gt;
&lt;h2 id=&quot;分析-1&quot;&gt;&lt;a href=&quot;#分析-1&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;在&lt;br&gt;dp[i+1][j]的计算中选择k(k&amp;gt;=1)个的情况，与在dp[i+1][j-w[i]]的计算中选择k-1的情况是相同的，所以在dp[i+1][j]的递推中k&amp;gt;=1的部分已经在dp[i+1][j-w[i]]的计算中完成了，那么可以按如下方式进行优化。&lt;/p&gt;
&lt;p&gt;dp[i+1][j] = max{dp[i][j-k&lt;em&gt;w[i]] + k&lt;/em&gt;v[i]}  (k &amp;gt;= 0)}&lt;br&gt;           = max(dp[i][j], max{dp[i][j-k&lt;em&gt;w[i]]+k&lt;/em&gt;v[i]}(k&amp;gt;=1))&lt;br&gt;           = max(dp[i][j], max{dp[i][j-w[i] - k&lt;em&gt;w[i]] + k&lt;/em&gt;v[i] (k&amp;gt;=0)} + v[i])&lt;br&gt;           = max(dp[i][j], dp[i+1][j-w[i]] + v[i])&lt;/p&gt;
&lt;p&gt;这样一来就不需要关于k的循环了，可以用O(nW)的时间解决问题。&lt;/p&gt;
&lt;h3 id=&quot;代码-1&quot;&gt;&lt;a href=&quot;#代码-1&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i ++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt;= W; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j &amp;lt; w[i])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j] = dp[i][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j] = max(dp[i][j], dp[i+1][j-w[i]] + v[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout &amp;lt;&amp;lt; dp[n][W] &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完全背包也可用一维数组实现：&lt;/p&gt;
&lt;h3 id=&quot;代码-2&quot;&gt;&lt;a href=&quot;#代码-2&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = w[i]; j &amp;lt;= W; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dp[j] = max(dp[j], dp[j-w[i]] + v[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout &amp;lt;&amp;lt; dp[W] &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;dp表：&lt;br&gt;for(int j = 0; j &amp;lt;= W; j++)&lt;br&gt;    cout &amp;lt;&amp;lt; dp[j] &amp;lt;&amp;lt; “ “ ;&lt;/p&gt;
&lt;p&gt;0 0 3 4 6 7 9 10&lt;/p&gt;
&lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;重复利用数组虽然可以节省内存，但很容易出bug，所以要小心使用。有时出于节约内存的考虑，必须重复使用数组。&lt;/p&gt;
&lt;p&gt;除上面的情况之外，还有可能通过将两个数组滚动使用来实现重复利用，例如此前的&lt;br&gt;$dp[i+1][j] = max(dp[i][j], dp[i+1][j-w[i]] + v[i])$&lt;br&gt;这一递推式中，dp[i+1]计算中只需要dp[i]和dp[i+1],所以可以结合奇偶性写成如下形式。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int dp[2][MAX_W+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt;= W; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j &amp;lt; w[i])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[(i+1) &amp;amp; 1][j] = dp[i &amp;amp; 1][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[(i+1)&amp;amp;1][j] = max(dp[i &amp;amp; 1][j], dp[(i+1) &amp;amp; 1][j-w[i]] + v[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout &amp;lt;&amp;lt; dp[n &amp;amp; 1][W] &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;01背包问题-–续&quot;&gt;&lt;a href=&quot;#01背包问题-–续&quot; class=&quot;headerlink&quot; title=&quot;01背包问题 –续&quot;&gt;&lt;/a&gt;01背包问题 –续&lt;/h2&gt;&lt;p&gt;限制条件改为：&lt;br&gt;1 &amp;lt;= n &amp;lt;= 100&lt;br&gt;1 &amp;lt;= $w_i$ &amp;lt;= $10^7$&lt;br&gt;1 &amp;lt;= $v_i$ &amp;lt;= $100$&lt;br&gt;1 &amp;lt;= W &amp;lt;= $10^9$&lt;/p&gt;
&lt;p&gt;由于此前解决这一问题的复杂度是O(nW),对于该题来讲就会超时了。但我们可以注意到，该题中，相较于重量而言，价值的范围比较小，所以可以试着改变DP的对象。我们用DP针对不同的重量限制计算最大的价值，这次不妨用DP针对不同的价值计算最小的重量。&lt;/p&gt;
&lt;p&gt;定义dp[i+1][j] = 前i个物品中挑出价值总和为j时总重量的最小值。（不存在时为INF）&lt;/p&gt;
&lt;p&gt;由于前0个物品中什么都挑选不了，所以初始值为&lt;br&gt;dp[0][0] = 0;&lt;br&gt;dp[0][j] = INF;&lt;/p&gt;
&lt;p&gt;dp[i+1][j] = max(dp[i][j], dp[i][j-v[i]] + w[i])&lt;br&gt;这样答案就对应于令dp[n][j] &amp;lt;= W的最大的j&lt;/p&gt;
&lt;h3 id=&quot;代码-3&quot;&gt;&lt;a href=&quot;#代码-3&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int dp[MAX_N+1][MAX_N*MAX_V+1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const int INF = 1000000000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;solve&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill(dp[0], dp[0]+MAX_N*MAX_V+1, INF);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dp[0][0] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int j = 0; j &amp;lt; MAX_N*MAX_V; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j &amp;lt; v[i])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j] = dp[i][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[i+1][j] = min(dp[i][j], dp[i][j-v[i]]+w[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int res = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i = 0; i &amp;lt; MAX_N*MAX_V; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(dp[n][i] &amp;lt;= W)res = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout &amp;lt;&amp;lt; res &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是咸鱼的算法小教室_(:3」∠❀)_&lt;br&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://moemoemortimer.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="背包" scheme="https://moemoemortimer.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
</feed>
